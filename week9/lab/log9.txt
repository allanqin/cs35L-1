lab 9 log
===============================================================================
I first had to generate a file with random double-precision floating point num-
bers. I did this with the command:

od -An -f -N 4000000 < /dev/urandom | tr -s ' ' '\n' > random.txt

Next, we were supposed to time how different levels of parallelization affected
the performance of a sort on random.txt. You can do this by using the command:

time -p sort -g --parallel=<level> random.txt > /dev/null

where <level> is the degree of parallelization desired. We timed sort for
1, 2, 4, and 8 threads.

1 thread:
real 8.52
user 8.48
sys 0.01

2 threads:
real 4.63
user 8.68
sys 0.02

4 threads:
real 3.04
user 9.48
sys 0.02

8 threads:
real 2.26
user 10.74
sys 0.04

Running concurrent threads definitely decreased the time taken for sort.

