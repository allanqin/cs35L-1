--- thttpd-stackprot.s	2014-02-24 18:03:42.000000000 -0800
+++ thttpd-sanitize.s	2014-02-24 18:19:22.000000000 -0800
@@ -1,89 +1,196 @@
 	.file	"thttpd.c"
-	.local	argv0
-	.comm	argv0,4,4
-	.local	debug
-	.comm	debug,4,4
-	.local	port
-	.comm	port,2,2
-	.local	dir
-	.comm	dir,4,4
-	.local	data_dir
-	.comm	data_dir,4,4
-	.local	do_chroot
-	.comm	do_chroot,4,4
-	.local	no_log
-	.comm	no_log,4,4
-	.local	no_symlink_check
-	.comm	no_symlink_check,4,4
-	.local	do_vhost
-	.comm	do_vhost,4,4
-	.local	do_global_passwd
-	.comm	do_global_passwd,4,4
-	.local	cgi_pattern
-	.comm	cgi_pattern,4,4
-	.local	cgi_limit
-	.comm	cgi_limit,4,4
-	.local	url_pattern
-	.comm	url_pattern,4,4
-	.local	no_empty_referers
-	.comm	no_empty_referers,4,4
-	.local	local_pattern
-	.comm	local_pattern,4,4
-	.local	logfile
-	.comm	logfile,4,4
-	.local	throttlefile
-	.comm	throttlefile,4,4
-	.local	hostname
-	.comm	hostname,4,4
-	.local	pidfile
-	.comm	pidfile,4,4
-	.local	user
-	.comm	user,4,4
-	.local	charset
-	.comm	charset,4,4
-	.local	p3p
-	.comm	p3p,4,4
-	.local	max_age
-	.comm	max_age,4,4
-	.local	throttles
-	.comm	throttles,4,4
-	.local	numthrottles
-	.comm	numthrottles,4,4
-	.local	maxthrottles
-	.comm	maxthrottles,4,4
-	.local	connects
-	.comm	connects,4,4
-	.local	num_connects
-	.comm	num_connects,4,4
-	.local	max_connects
-	.comm	max_connects,4,4
-	.local	first_free_connect
-	.comm	first_free_connect,4,4
-	.local	httpd_conn_count
-	.comm	httpd_conn_count,4,4
-	.local	hs
-	.comm	hs,4,4
-	.globl	terminate
 	.bss
-	.align 4
+	.align 32
+	.type	argv0, @object
+	.size	argv0, 4
+argv0:
+	.zero	64
+	.align 32
+	.type	debug, @object
+	.size	debug, 4
+debug:
+	.zero	64
+	.align 32
+	.type	port, @object
+	.size	port, 2
+port:
+	.zero	64
+	.align 32
+	.type	dir, @object
+	.size	dir, 4
+dir:
+	.zero	64
+	.align 32
+	.type	data_dir, @object
+	.size	data_dir, 4
+data_dir:
+	.zero	64
+	.align 32
+	.type	do_chroot, @object
+	.size	do_chroot, 4
+do_chroot:
+	.zero	64
+	.align 32
+	.type	no_log, @object
+	.size	no_log, 4
+no_log:
+	.zero	64
+	.align 32
+	.type	no_symlink_check, @object
+	.size	no_symlink_check, 4
+no_symlink_check:
+	.zero	64
+	.align 32
+	.type	do_vhost, @object
+	.size	do_vhost, 4
+do_vhost:
+	.zero	64
+	.align 32
+	.type	do_global_passwd, @object
+	.size	do_global_passwd, 4
+do_global_passwd:
+	.zero	64
+	.align 32
+	.type	cgi_pattern, @object
+	.size	cgi_pattern, 4
+cgi_pattern:
+	.zero	64
+	.align 32
+	.type	cgi_limit, @object
+	.size	cgi_limit, 4
+cgi_limit:
+	.zero	64
+	.align 32
+	.type	url_pattern, @object
+	.size	url_pattern, 4
+url_pattern:
+	.zero	64
+	.align 32
+	.type	no_empty_referers, @object
+	.size	no_empty_referers, 4
+no_empty_referers:
+	.zero	64
+	.align 32
+	.type	local_pattern, @object
+	.size	local_pattern, 4
+local_pattern:
+	.zero	64
+	.align 32
+	.type	logfile, @object
+	.size	logfile, 4
+logfile:
+	.zero	64
+	.align 32
+	.type	throttlefile, @object
+	.size	throttlefile, 4
+throttlefile:
+	.zero	64
+	.align 32
+	.type	hostname, @object
+	.size	hostname, 4
+hostname:
+	.zero	64
+	.align 32
+	.type	pidfile, @object
+	.size	pidfile, 4
+pidfile:
+	.zero	64
+	.align 32
+	.type	user, @object
+	.size	user, 4
+user:
+	.zero	64
+	.align 32
+	.type	charset, @object
+	.size	charset, 4
+charset:
+	.zero	64
+	.align 32
+	.type	p3p, @object
+	.size	p3p, 4
+p3p:
+	.zero	64
+	.align 32
+	.type	max_age, @object
+	.size	max_age, 4
+max_age:
+	.zero	64
+	.align 32
+	.type	throttles, @object
+	.size	throttles, 4
+throttles:
+	.zero	64
+	.align 32
+	.type	numthrottles, @object
+	.size	numthrottles, 4
+numthrottles:
+	.zero	64
+	.align 32
+	.type	maxthrottles, @object
+	.size	maxthrottles, 4
+maxthrottles:
+	.zero	64
+	.align 32
+	.type	connects, @object
+	.size	connects, 4
+connects:
+	.zero	64
+	.align 32
+	.type	num_connects, @object
+	.size	num_connects, 4
+num_connects:
+	.zero	64
+	.align 32
+	.type	max_connects, @object
+	.size	max_connects, 4
+max_connects:
+	.zero	64
+	.align 32
+	.type	first_free_connect, @object
+	.size	first_free_connect, 4
+first_free_connect:
+	.zero	64
+	.align 32
+	.type	httpd_conn_count, @object
+	.size	httpd_conn_count, 4
+httpd_conn_count:
+	.zero	64
+	.align 32
+	.type	hs, @object
+	.size	hs, 4
+hs:
+	.zero	64
+	.globl	terminate
+	.align 32
 	.type	terminate, @object
 	.size	terminate, 4
 terminate:
-	.zero	4
+	.zero	64
 	.comm	start_time,4,4
 	.comm	stats_time,4,4
 	.comm	stats_connections,4,4
 	.comm	stats_bytes,4,4
 	.comm	stats_simultaneous,4,4
-	.local	got_hup
-	.comm	got_hup,4,4
-	.local	got_usr1
-	.comm	got_usr1,4,4
-	.local	watchdog_flag
-	.comm	watchdog_flag,4,4
+	.align 32
+	.type	got_hup, @object
+	.size	got_hup, 4
+got_hup:
+	.zero	64
+	.align 32
+	.type	got_usr1, @object
+	.size	got_usr1, 4
+got_usr1:
+	.zero	64
+	.align 32
+	.type	watchdog_flag, @object
+	.size	watchdog_flag, 4
+watchdog_flag:
+	.zero	64
 	.section	.rodata
+	.align 32
 .LC0:
 	.string	"exiting due to signal %d"
+	.zero	39
 	.text
 	.type	handle_term, @function
 handle_term:
@@ -102,6 +209,7 @@
 	movl	$5, (%esp)
 	call	syslog
 	call	closelog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
 	.cfi_endproc
@@ -109,7 +217,11 @@
 	.size	handle_term, .-handle_term
 	.section	.rodata
 .LC1:
+	.string	"handle_chld 1 32 4 6 status "
+	.align 32
+.LC2:
 	.string	"child wait - %m"
+	.zero	48
 	.text
 	.type	handle_chld, @function
 handle_chld:
@@ -120,66 +232,257 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$40, %esp
+	pushl	%edi
+	pushl	%esi
+	pushl	%ebx
+	subl	$140, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
+	leal	-120(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC1, 4(%eax)
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movl	%eax, -140(%ebp)
+	movl	$-235802127, (%eax)
+	movl	$-185273340, 4(%eax)
+	movl	$-202116109, 8(%eax)
 	call	__errno_location
-	movl	(%eax), %eax
-	movl	%eax, -16(%ebp)
-.L10:
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L3
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L3:
+	movl	(%edx), %eax
+	movl	%eax, -128(%ebp)
+.L17:
 	movl	$1, 8(%esp)
-	leal	-20(%ebp), %eax
+	leal	-88(%ebp), %eax
 	movl	%eax, 4(%esp)
 	movl	$-1, (%esp)
 	call	waitpid
-	movl	%eax, -12(%ebp)
-	cmpl	$0, -12(%ebp)
-	jne	.L3
-	jmp	.L4
-.L3:
-	cmpl	$0, -12(%ebp)
-	jns	.L5
+	movl	%eax, -124(%ebp)
+	cmpl	$0, -124(%ebp)
+	jne	.L4
+	jmp	.L5
+.L4:
+	cmpl	$0, -124(%ebp)
+	jns	.L6
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L7
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L7:
+	movl	(%edx), %eax
 	cmpl	$4, %eax
-	je	.L6
+	je	.L8
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L9
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L9:
+	movl	(%edx), %eax
 	cmpl	$11, %eax
-	jne	.L7
-.L6:
-	jmp	.L8
-.L7:
+	jne	.L10
+.L8:
+	jmp	.L11
+.L10:
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L12
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L12:
+	movl	(%edx), %eax
 	cmpl	$10, %eax
-	je	.L9
-	movl	$.LC1, 4(%esp)
+	je	.L13
+	movl	$.LC2, 4(%esp)
 	movl	$3, (%esp)
 	call	syslog
-	jmp	.L4
-.L9:
-	jmp	.L4
-.L5:
+	jmp	.L5
+.L13:
+	jmp	.L5
+.L6:
 	movl	hs, %eax
 	testl	%eax, %eax
-	je	.L8
+	je	.L11
 	movl	hs, %eax
+	leal	20(%eax), %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%edx, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L14
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L14:
 	movl	20(%eax), %edx
 	subl	$1, %edx
 	movl	%edx, 20(%eax)
-	movl	hs, %eax
-	movl	20(%eax), %eax
-	testl	%eax, %eax
-	jns	.L8
-	movl	hs, %eax
-	movl	$0, 20(%eax)
-	jmp	.L10
-.L8:
-	jmp	.L10
-.L4:
+	movl	hs, %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L15
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L15:
+	movl	20(%edx), %eax
+	testl	%eax, %eax
+	jns	.L11
+	movl	hs, %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L16
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L16:
+	movl	$0, 20(%edx)
+	jmp	.L17
+.L11:
+	jmp	.L17
+.L5:
 	call	__errno_location
-	movl	-16(%ebp), %edx
-	movl	%edx, (%eax)
-	leave
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L18
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L18:
+	movl	-128(%ebp), %eax
+	movl	%eax, (%edx)
+	movl	-140(%ebp), %eax
+	movl	$0, (%eax)
+	movl	$0, 4(%eax)
+	movl	$0, 8(%eax)
+	addl	$140, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -195,15 +498,64 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$24, %esp
+	pushl	%esi
+	pushl	%ebx
+	subl	$32, %esp
+	.cfi_offset 6, -12
+	.cfi_offset 3, -16
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L20
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L20:
+	movl	(%edx), %eax
 	movl	%eax, -12(%ebp)
 	movl	$1, got_hup
 	call	__errno_location
-	movl	-12(%ebp), %edx
-	movl	%edx, (%eax)
-	leave
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L21
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L21:
+	movl	-12(%ebp), %eax
+	movl	%eax, (%edx)
+	addl	$32, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -211,8 +563,10 @@
 .LFE2:
 	.size	handle_hup, .-handle_hup
 	.section	.rodata
-.LC2:
+	.align 32
+.LC3:
 	.string	"exiting"
+	.zero	56
 	.text
 	.type	handle_usr1, @function
 handle_usr1:
@@ -226,15 +580,16 @@
 	subl	$24, %esp
 	movl	num_connects, %eax
 	testl	%eax, %eax
-	jne	.L13
+	jne	.L23
 	call	shut_down
-	movl	$.LC2, 4(%esp)
+	movl	$.LC3, 4(%esp)
 	movl	$5, (%esp)
 	call	syslog
 	call	closelog
+	call	__asan_handle_no_return
 	movl	$0, (%esp)
 	call	exit
-.L13:
+.L23:
 	movl	$1, got_usr1
 	leave
 	.cfi_restore 5
@@ -252,16 +607,65 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$40, %esp
+	pushl	%esi
+	pushl	%ebx
+	subl	$32, %esp
+	.cfi_offset 6, -12
+	.cfi_offset 3, -16
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L25
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L25:
+	movl	(%edx), %eax
 	movl	%eax, -12(%ebp)
 	movl	$0, (%esp)
 	call	logstats
 	call	__errno_location
-	movl	-12(%ebp), %edx
-	movl	%edx, (%eax)
-	leave
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L26
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L26:
+	movl	-12(%ebp), %eax
+	movl	%eax, (%edx)
+	addl	$32, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -269,8 +673,10 @@
 .LFE4:
 	.size	handle_usr2, .-handle_usr2
 	.section	.rodata
-.LC3:
+	.align 32
+.LC4:
 	.string	"/tmp"
+	.zero	59
 	.text
 	.type	handle_alrm, @function
 handle_alrm:
@@ -281,24 +687,74 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$40, %esp
+	pushl	%esi
+	pushl	%ebx
+	subl	$32, %esp
+	.cfi_offset 6, -12
+	.cfi_offset 3, -16
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L28
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L28:
+	movl	(%edx), %eax
 	movl	%eax, -12(%ebp)
 	movl	watchdog_flag, %eax
 	testl	%eax, %eax
-	jne	.L16
-	movl	$.LC3, (%esp)
+	jne	.L29
+	movl	$.LC4, (%esp)
 	call	chdir
+	call	__asan_handle_no_return
 	call	abort
-.L16:
+.L29:
 	movl	$0, watchdog_flag
 	movl	$360, (%esp)
 	call	alarm
 	call	__errno_location
-	movl	-12(%ebp), %edx
-	movl	%edx, (%eax)
-	leave
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L30
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L30:
+	movl	-12(%ebp), %eax
+	movl	%eax, (%edx)
+	addl	$32, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -306,14 +762,22 @@
 .LFE5:
 	.size	handle_alrm, .-handle_alrm
 	.section	.rodata
-.LC4:
-	.string	"-"
+	.align 32
 .LC5:
-	.string	"re-opening logfile"
+	.string	"-"
+	.zero	62
+	.align 32
 .LC6:
-	.string	"a"
+	.string	"re-opening logfile"
+	.zero	45
+	.align 32
 .LC7:
+	.string	"a"
+	.zero	62
+	.align 32
+.LC8:
 	.string	"re-opening %.80s - %m"
+	.zero	42
 	.text
 	.type	re_open_logfile, @function
 re_open_logfile:
@@ -327,39 +791,39 @@
 	subl	$40, %esp
 	movl	no_log, %eax
 	testl	%eax, %eax
-	jne	.L18
+	jne	.L32
 	movl	hs, %eax
 	testl	%eax, %eax
-	jne	.L19
-.L18:
-	jmp	.L17
-.L19:
+	jne	.L33
+.L32:
+	jmp	.L31
+.L33:
 	movl	logfile, %eax
 	testl	%eax, %eax
-	je	.L17
+	je	.L31
 	movl	logfile, %eax
-	movl	$.LC4, 4(%esp)
+	movl	$.LC5, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	je	.L17
-	movl	$.LC5, 4(%esp)
+	je	.L31
+	movl	$.LC6, 4(%esp)
 	movl	$5, (%esp)
 	call	syslog
 	movl	logfile, %eax
-	movl	$.LC6, 4(%esp)
+	movl	$.LC7, 4(%esp)
 	movl	%eax, (%esp)
 	call	fopen
 	movl	%eax, -12(%ebp)
 	cmpl	$0, -12(%ebp)
-	jne	.L21
+	jne	.L35
 	movl	logfile, %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC7, 4(%esp)
+	movl	$.LC8, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
-	jmp	.L17
-.L21:
+	jmp	.L31
+.L35:
 	movl	-12(%ebp), %eax
 	movl	%eax, (%esp)
 	call	fileno
@@ -372,7 +836,7 @@
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	httpd_set_logfp
-.L17:
+.L31:
 	leave
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
@@ -381,85 +845,153 @@
 .LFE6:
 	.size	re_open_logfile, .-re_open_logfile
 	.section	.rodata
-.LC8:
-	.string	"can't find any valid address"
 	.align 4
 .LC9:
-	.string	"%s: can't find any valid address\n"
+	.string	"main 6 32 4 5 gotv4 96 4 5 gotv6 160 8 2 tv 224 128 3 sa4 384 128 3 sa6 544 4097 3 cwd "
+	.align 32
 .LC10:
-	.string	"unknown user - '%.80s'"
+	.string	"can't find any valid address"
+	.zero	35
+	.align 32
 .LC11:
-	.string	"%s: unknown user - '%s'\n"
+	.string	"%s: can't find any valid address\n"
+	.zero	62
+	.align 32
 .LC12:
-	.string	"/dev/null"
+	.string	"unknown user - '%.80s'"
+	.zero	41
+	.align 32
 .LC13:
-	.string	"%.80s - %m"
-	.align 4
+	.string	"%s: unknown user - '%s'\n"
+	.zero	39
+	.align 32
 .LC14:
-	.string	"logfile is not an absolute path, you may not be able to re-open it"
-	.align 4
+	.string	"/dev/null"
+	.zero	54
+	.align 32
 .LC15:
-	.string	"%s: logfile is not an absolute path, you may not be able to re-open it\n"
+	.string	"%.80s - %m"
+	.zero	53
+	.align 32
 .LC16:
-	.string	"fchown logfile - %m"
+	.string	"logfile is not an absolute path, you may not be able to re-open it"
+	.zero	61
+	.align 32
 .LC17:
-	.string	"fchown logfile"
+	.string	"%s: logfile is not an absolute path, you may not be able to re-open it\n"
+	.zero	56
+	.align 32
 .LC18:
-	.string	"chdir - %m"
+	.string	"fchown logfile - %m"
+	.zero	44
+	.align 32
 .LC19:
-	.string	"chdir"
+	.string	"fchown logfile"
+	.zero	49
+	.align 32
 .LC20:
-	.string	"daemon - %m"
+	.string	"chdir - %m"
+	.zero	53
+	.align 32
 .LC21:
-	.string	"w"
+	.string	"chdir"
+	.zero	58
+	.align 32
 .LC22:
-	.string	"%d\n"
-	.align 4
+	.string	"/"
+	.zero	62
+	.align 32
 .LC23:
-	.string	"fdwatch initialization failure"
+	.string	"daemon - %m"
+	.zero	52
+	.align 32
 .LC24:
-	.string	"chroot - %m"
+	.string	"w"
+	.zero	62
+	.align 32
 .LC25:
-	.string	"chroot"
-	.align 4
+	.string	"%d\n"
+	.zero	60
+	.align 32
 .LC26:
-	.string	"logfile is not within the chroot tree, you will not be able to re-open it"
-	.align 4
+	.string	"fdwatch initialization failure"
+	.zero	33
+	.align 32
 .LC27:
-	.string	"%s: logfile is not within the chroot tree, you will not be able to re-open it\n"
+	.string	"chroot - %m"
+	.zero	52
+	.align 32
 .LC28:
-	.string	"chroot chdir - %m"
+	.string	"chroot"
+	.zero	57
+	.align 32
 .LC29:
-	.string	"chroot chdir"
+	.string	"logfile is not within the chroot tree, you will not be able to re-open it"
+	.zero	54
+	.align 32
 .LC30:
-	.string	"data_dir chdir - %m"
+	.string	"%s: logfile is not within the chroot tree, you will not be able to re-open it\n"
+	.zero	49
+	.align 32
 .LC31:
-	.string	"data_dir chdir"
+	.string	"chroot chdir - %m"
+	.zero	46
+	.align 32
 .LC32:
-	.string	"tmr_create(occasional) failed"
+	.string	"chroot chdir"
+	.zero	51
+	.align 32
 .LC33:
-	.string	"tmr_create(idle) failed"
-	.align 4
+	.string	"data_dir chdir - %m"
+	.zero	44
+	.align 32
 .LC34:
-	.string	"tmr_create(update_throttles) failed"
+	.string	"data_dir chdir"
+	.zero	49
+	.align 32
 .LC35:
-	.string	"tmr_create(show_stats) failed"
+	.string	"tmr_create(occasional) failed"
+	.zero	34
+	.align 32
 .LC36:
-	.string	"setgroups - %m"
+	.string	"tmr_create(idle) failed"
+	.zero	40
+	.align 32
 .LC37:
-	.string	"setgid - %m"
+	.string	"tmr_create(update_throttles) failed"
+	.zero	60
+	.align 32
 .LC38:
-	.string	"initgroups - %m"
+	.string	"tmr_create(show_stats) failed"
+	.zero	34
+	.align 32
 .LC39:
-	.string	"setuid - %m"
-	.align 4
+	.string	"setgroups - %m"
+	.zero	49
+	.align 32
 .LC40:
-	.string	"started as root without requesting chroot(), warning only"
-	.align 4
+	.string	"setgid - %m"
+	.zero	52
+	.align 32
 .LC41:
-	.string	"out of memory allocating a connecttab"
+	.string	"initgroups - %m"
+	.zero	48
+	.align 32
 .LC42:
+	.string	"setuid - %m"
+	.zero	52
+	.align 32
+.LC43:
+	.string	"started as root without requesting chroot(), warning only"
+	.zero	38
+	.align 32
+.LC44:
+	.string	"out of memory allocating a connecttab"
+	.zero	58
+	.align 32
+.LC45:
 	.string	"fdwatch - %m"
+	.zero	51
 	.text
 	.globl	main
 	.type	main, @function
@@ -475,18 +1007,51 @@
 	pushl	%esi
 	pushl	%ebx
 	andl	$-16, %esp
-	subl	$4544, %esp
+	subl	$4880, %esp
 	.cfi_offset 7, -12
 	.cfi_offset 6, -16
 	.cfi_offset 3, -20
 	movl	12(%ebp), %eax
 	movl	%eax, 124(%esp)
+	leal	176(%esp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC9, 4(%eax)
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movl	$-235802127, (%eax)
+	movl	$-185273340, 4(%eax)
+	movl	$-218959118, 8(%eax)
+	movl	$-185273340, 12(%eax)
+	movl	$-218959118, 16(%eax)
+	movl	$-185273344, 20(%eax)
+	movl	$-218959118, 24(%eax)
+	movl	$-218959118, 44(%eax)
+	movl	$-218959118, 64(%eax)
+	movl	$-185273343, 580(%eax)
 	movl	%gs:20, %eax
-	movl	%eax, 4540(%esp)
+	movl	%eax, 4876(%esp)
 	xorl	%eax, %eax
 	movl	$32767, 140(%esp)
 	movl	$32767, 144(%esp)
 	movl	124(%esp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L43
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L43:
+	movl	124(%esp), %eax
 	movl	(%eax), %eax
 	movl	%eax, argv0
 	movl	argv0, %eax
@@ -495,13 +1060,13 @@
 	call	strrchr
 	movl	%eax, 136(%esp)
 	cmpl	$0, 136(%esp)
-	je	.L23
+	je	.L44
 	addl	$1, 136(%esp)
-	jmp	.L24
-.L23:
+	jmp	.L45
+.L44:
 	movl	argv0, %eax
 	movl	%eax, 136(%esp)
-.L24:
+.L45:
 	movl	$24, 8(%esp)
 	movl	$9, 4(%esp)
 	movl	136(%esp), %eax
@@ -513,57 +1078,58 @@
 	movl	%eax, (%esp)
 	call	parse_args
 	call	tzset
-	leal	132(%esp), %eax
+	leal	272(%esp), %eax
 	movl	%eax, 20(%esp)
 	movl	$128, 16(%esp)
-	leal	312(%esp), %eax
+	leal	560(%esp), %eax
 	movl	%eax, 12(%esp)
-	leal	128(%esp), %eax
+	leal	208(%esp), %eax
 	movl	%eax, 8(%esp)
 	movl	$128, 4(%esp)
-	leal	184(%esp), %eax
+	leal	400(%esp), %eax
 	movl	%eax, (%esp)
 	call	lookup_hostname
-	movl	128(%esp), %eax
+	movl	208(%esp), %eax
 	testl	%eax, %eax
-	jne	.L25
-	movl	132(%esp), %eax
+	jne	.L46
+	movl	272(%esp), %eax
 	testl	%eax, %eax
-	jne	.L25
-	movl	$.LC8, 4(%esp)
+	jne	.L46
+	movl	$.LC10, 4(%esp)
 	movl	$3, (%esp)
 	call	syslog
 	movl	argv0, %edx
 	movl	stderr, %eax
 	movl	%edx, 8(%esp)
-	movl	$.LC9, 4(%esp)
+	movl	$.LC11, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L25:
+.L46:
 	movl	$0, numthrottles
 	movl	$0, maxthrottles
 	movl	$0, throttles
 	movl	throttlefile, %eax
 	testl	%eax, %eax
-	je	.L26
+	je	.L47
 	movl	throttlefile, %eax
 	movl	%eax, (%esp)
 	call	read_throttlefile
-.L26:
+.L47:
 	call	getuid
 	testl	%eax, %eax
-	jne	.L27
+	jne	.L48
 	movl	user, %eax
 	movl	%eax, (%esp)
 	call	getpwnam
 	movl	%eax, 156(%esp)
 	cmpl	$0, 156(%esp)
-	jne	.L28
+	jne	.L49
 	movl	user, %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC10, 4(%esp)
+	movl	$.LC12, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
 	movl	user, %ecx
@@ -571,74 +1137,132 @@
 	movl	stderr, %eax
 	movl	%ecx, 12(%esp)
 	movl	%edx, 8(%esp)
-	movl	$.LC11, 4(%esp)
+	movl	$.LC13, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L28:
+.L49:
+	movl	156(%esp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L50
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L50:
 	movl	156(%esp), %eax
 	movl	8(%eax), %eax
 	movl	%eax, 140(%esp)
 	movl	156(%esp), %eax
+	addl	$12, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L51
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L51:
+	movl	156(%esp), %eax
 	movl	12(%eax), %eax
 	movl	%eax, 144(%esp)
-.L27:
+.L48:
 	movl	logfile, %eax
 	testl	%eax, %eax
-	je	.L29
+	je	.L52
 	movl	logfile, %eax
-	movl	$.LC12, 4(%esp)
+	movl	$.LC14, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L30
+	jne	.L53
 	movl	$1, no_log
 	movl	$0, 148(%esp)
-	jmp	.L35
-.L30:
+	jmp	.L59
+.L53:
 	movl	logfile, %eax
-	movl	$.LC4, 4(%esp)
+	movl	$.LC5, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L32
+	jne	.L55
 	movl	stdout, %eax
 	movl	%eax, 148(%esp)
-	jmp	.L35
-.L32:
+	jmp	.L59
+.L55:
 	movl	logfile, %eax
-	movl	$.LC6, 4(%esp)
+	movl	$.LC7, 4(%esp)
 	movl	%eax, (%esp)
 	call	fopen
 	movl	%eax, 148(%esp)
 	cmpl	$0, 148(%esp)
-	jne	.L33
+	jne	.L56
 	movl	logfile, %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC13, 4(%esp)
+	movl	$.LC15, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
 	movl	logfile, %eax
 	movl	%eax, (%esp)
 	call	perror
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L33:
-	movl	logfile, %eax
-	movzbl	(%eax), %eax
+.L56:
+	movl	logfile, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L57
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L57:
+	movzbl	(%edx), %eax
 	cmpb	$47, %al
-	je	.L34
-	movl	$.LC14, 4(%esp)
+	je	.L58
+	movl	$.LC16, 4(%esp)
 	movl	$4, (%esp)
 	call	syslog
 	movl	argv0, %edx
 	movl	stderr, %eax
 	movl	%edx, 8(%esp)
-	movl	$.LC15, 4(%esp)
+	movl	$.LC17, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
-.L34:
+.L58:
 	movl	148(%esp), %eax
 	movl	%eax, (%esp)
 	call	fileno
@@ -648,7 +1272,7 @@
 	call	fcntl
 	call	getuid
 	testl	%eax, %eax
-	jne	.L35
+	jne	.L59
 	movl	148(%esp), %eax
 	movl	%eax, (%esp)
 	call	fileno
@@ -659,44 +1283,121 @@
 	movl	%eax, (%esp)
 	call	fchown
 	testl	%eax, %eax
-	jns	.L35
-	movl	$.LC16, 4(%esp)
+	jns	.L59
+	movl	$.LC18, 4(%esp)
 	movl	$4, (%esp)
 	call	syslog
-	movl	$.LC17, (%esp)
+	movl	$.LC19, (%esp)
 	call	perror
-	jmp	.L35
-.L29:
+	jmp	.L59
+.L52:
 	movl	$0, 148(%esp)
-.L35:
+.L59:
 	movl	dir, %eax
 	testl	%eax, %eax
-	je	.L36
+	je	.L60
 	movl	dir, %eax
 	movl	%eax, (%esp)
 	call	chdir
 	testl	%eax, %eax
-	jns	.L36
-	movl	$.LC18, 4(%esp)
+	jns	.L60
+	movl	$.LC20, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
-	movl	$.LC19, (%esp)
+	movl	$.LC21, (%esp)
 	call	perror
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L36:
+.L60:
 	movl	$4096, 4(%esp)
-	leal	443(%esp), %eax
+	leal	720(%esp), %eax
 	movl	%eax, (%esp)
 	call	getcwd
-	leal	443(%esp), %eax
+	leal	720(%esp), %ebx
+	movl	%ebx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L61
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L61:
+	leal	720(%esp), %eax
 	movl	%eax, (%esp)
 	call	strlen
-	subl	$1, %eax
-	movzbl	443(%esp,%eax), %eax
+	movl	%eax, %edx
+	leal	(%ebx,%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L62
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L62:
+	leal	-1(%edx), %ecx
+	leal	720(%esp), %eax
+	addl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L63
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L63:
+	movzbl	720(%esp,%ecx), %eax
 	cmpb	$47, %al
-	je	.L37
-	leal	443(%esp), %eax
+	je	.L64
+	leal	720(%esp), %ebx
+	movl	%ebx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L65
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L65:
+	leal	720(%esp), %eax
 	movl	$-1, %ecx
 	movl	%eax, %edx
 	movl	$0, %eax
@@ -704,24 +1405,115 @@
 	repnz; scasb
 	movl	%ecx, %eax
 	notl	%eax
-	leal	-1(%eax), %edx
-	leal	443(%esp), %eax
-	addl	%edx, %eax
+	leal	-1(%eax), %ecx
+	leal	(%ebx,%ecx), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L66
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L66:
+	leal	720(%esp), %eax
+	addl	%ecx, %eax
+	movl	$.LC22, %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%edx, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L67
+	movl	%edx, (%esp)
+	call	__asan_report_load1
+.L67:
+	movl	$.LC22, %edx
+	addl	$1, %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%edx, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L68
+	movl	%edx, (%esp)
+	call	__asan_report_load1
+.L68:
+	movl	%eax, %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%edx, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L69
+	movl	%edx, (%esp)
+	call	__asan_report_store1
+.L69:
+	leal	1(%eax), %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%edx, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L70
+	movl	%edx, (%esp)
+	call	__asan_report_store1
+.L70:
 	movw	$47, (%eax)
-.L37:
+.L64:
 	movl	debug, %eax
 	testl	%eax, %eax
-	jne	.L38
+	jne	.L71
 	movl	stdin, %eax
 	movl	%eax, (%esp)
 	call	fclose
 	movl	stdout, %eax
 	cmpl	%eax, 148(%esp)
-	je	.L39
+	je	.L72
 	movl	stdout, %eax
 	movl	%eax, (%esp)
 	call	fclose
-.L39:
+.L72:
 	movl	stderr, %eax
 	movl	%eax, (%esp)
 	call	fclose
@@ -729,146 +1521,298 @@
 	movl	$1, (%esp)
 	call	daemon
 	testl	%eax, %eax
-	jns	.L40
-	movl	$.LC20, 4(%esp)
+	jns	.L73
+	movl	$.LC23, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L38:
+.L71:
 	call	setsid
-.L40:
+.L73:
 	movl	pidfile, %eax
 	testl	%eax, %eax
-	je	.L41
+	je	.L74
 	movl	pidfile, %eax
-	movl	$.LC21, 4(%esp)
+	movl	$.LC24, 4(%esp)
 	movl	%eax, (%esp)
 	call	fopen
 	movl	%eax, 160(%esp)
 	cmpl	$0, 160(%esp)
-	jne	.L42
+	jne	.L75
 	movl	pidfile, %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC13, 4(%esp)
+	movl	$.LC15, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L42:
+.L75:
 	call	getpid
 	movl	%eax, 8(%esp)
-	movl	$.LC22, 4(%esp)
+	movl	$.LC25, 4(%esp)
 	movl	160(%esp), %eax
 	movl	%eax, (%esp)
 	call	fprintf
 	movl	160(%esp), %eax
 	movl	%eax, (%esp)
 	call	fclose
-.L41:
+.L74:
 	call	fdwatch_get_nfiles
 	movl	%eax, max_connects
 	movl	max_connects, %eax
 	testl	%eax, %eax
-	jns	.L43
-	movl	$.LC23, 4(%esp)
+	jns	.L76
+	movl	$.LC26, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L43:
+.L76:
 	movl	max_connects, %eax
 	subl	$10, %eax
 	movl	%eax, max_connects
 	movl	do_chroot, %eax
 	testl	%eax, %eax
-	je	.L44
-	leal	443(%esp), %eax
+	je	.L77
+	leal	720(%esp), %eax
 	movl	%eax, (%esp)
 	call	chroot
 	testl	%eax, %eax
-	jns	.L45
-	movl	$.LC24, 4(%esp)
+	jns	.L78
+	movl	$.LC27, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
-	movl	$.LC25, (%esp)
+	movl	$.LC28, (%esp)
 	call	perror
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L45:
+.L78:
 	movl	logfile, %eax
 	testl	%eax, %eax
-	je	.L46
+	je	.L79
 	movl	logfile, %eax
-	movl	$.LC4, 4(%esp)
+	movl	$.LC5, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	je	.L46
-	leal	443(%esp), %eax
+	je	.L79
+	leal	720(%esp), %ebx
+	movl	%ebx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L80
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L80:
+	leal	720(%esp), %eax
 	movl	%eax, (%esp)
 	call	strlen
-	movl	logfile, %edx
-	movl	%eax, 8(%esp)
-	leal	443(%esp), %eax
-	movl	%eax, 4(%esp)
-	movl	%edx, (%esp)
+	movl	%eax, %edx
+	leal	(%ebx,%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L81
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L81:
+	movl	logfile, %eax
+	movl	%edx, 8(%esp)
+	leal	720(%esp), %edx
+	movl	%edx, 4(%esp)
+	movl	%eax, (%esp)
 	call	strncmp
 	testl	%eax, %eax
-	jne	.L47
-	movl	logfile, %ebx
-	leal	443(%esp), %eax
+	jne	.L82
+	movl	logfile, %esi
+	leal	720(%esp), %ebx
+	movl	%ebx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %edi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L83
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L83:
+	leal	720(%esp), %eax
 	movl	%eax, (%esp)
 	call	strlen
-	subl	$1, %eax
-	leal	(%ebx,%eax), %edx
+	movl	%eax, %edx
+	leal	(%ebx,%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L84
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L84:
+	leal	-1(%edx), %eax
+	leal	(%esi,%eax), %edx
 	movl	logfile, %eax
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcpy
-	jmp	.L46
-.L47:
-	movl	$.LC26, 4(%esp)
+	jmp	.L79
+.L82:
+	movl	$.LC29, 4(%esp)
 	movl	$4, (%esp)
 	call	syslog
 	movl	argv0, %edx
 	movl	stderr, %eax
 	movl	%edx, 8(%esp)
-	movl	$.LC27, 4(%esp)
+	movl	$.LC30, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
-.L46:
-	leal	443(%esp), %eax
+.L79:
+	movl	$.LC22, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L85
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L85:
+	movl	$.LC22, %eax
+	addl	$1, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L86
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L86:
+	leal	720(%esp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L87
+	movl	%eax, (%esp)
+	call	__asan_report_store1
+.L87:
+	leal	720(%esp), %eax
+	addl	$1, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L88
+	movl	%eax, (%esp)
+	call	__asan_report_store1
+.L88:
+	leal	720(%esp), %eax
 	movw	$47, (%eax)
-	leal	443(%esp), %eax
+	leal	720(%esp), %eax
 	movl	%eax, (%esp)
 	call	chdir
 	testl	%eax, %eax
-	jns	.L44
-	movl	$.LC28, 4(%esp)
+	jns	.L77
+	movl	$.LC31, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
-	movl	$.LC29, (%esp)
+	movl	$.LC32, (%esp)
 	call	perror
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L44:
+.L77:
 	movl	data_dir, %eax
 	testl	%eax, %eax
-	je	.L48
+	je	.L89
 	movl	data_dir, %eax
 	movl	%eax, (%esp)
 	call	chdir
 	testl	%eax, %eax
-	jns	.L48
-	movl	$.LC30, 4(%esp)
+	jns	.L89
+	movl	$.LC33, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
-	movl	$.LC31, (%esp)
+	movl	$.LC34, (%esp)
 	call	perror
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L48:
+.L89:
 	movl	$handle_term, 4(%esp)
 	movl	$15, (%esp)
 	call	sigset
@@ -924,22 +1868,22 @@
 	movzwl	port, %eax
 	movzwl	%ax, %eax
 	movl	%eax, 80(%esp)
-	movl	132(%esp), %eax
+	movl	272(%esp), %eax
 	testl	%eax, %eax
-	je	.L49
-	leal	312(%esp), %ebx
-	jmp	.L50
-.L49:
+	je	.L90
+	leal	560(%esp), %ebx
+	jmp	.L91
+.L90:
 	movl	$0, %ebx
-.L50:
-	movl	128(%esp), %eax
+.L91:
+	movl	208(%esp), %eax
 	testl	%eax, %eax
-	je	.L51
-	leal	184(%esp), %edx
-	jmp	.L52
-.L51:
+	je	.L92
+	leal	400(%esp), %edx
+	jmp	.L93
+.L92:
 	movl	$0, %edx
-.L52:
+.L93:
 	movl	hostname, %ecx
 	movl	%esi, 68(%esp)
 	movl	%edi, 64(%esp)
@@ -955,7 +1899,7 @@
 	movl	%eax, 44(%esp)
 	movl	104(%esp), %eax
 	movl	%eax, 40(%esp)
-	leal	443(%esp), %eax
+	leal	720(%esp), %eax
 	movl	%eax, 36(%esp)
 	movl	100(%esp), %eax
 	movl	%eax, 32(%esp)
@@ -976,10 +1920,11 @@
 	movl	%eax, hs
 	movl	hs, %eax
 	testl	%eax, %eax
-	jne	.L53
+	jne	.L94
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L53:
+.L94:
 	movl	$1, 16(%esp)
 	movl	$120000, 12(%esp)
 	movl	JunkClientData, %eax
@@ -988,13 +1933,14 @@
 	movl	$0, (%esp)
 	call	tmr_create
 	testl	%eax, %eax
-	jne	.L54
-	movl	$.LC32, 4(%esp)
+	jne	.L95
+	movl	$.LC35, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L54:
+.L95:
 	movl	$1, 16(%esp)
 	movl	$5000, 12(%esp)
 	movl	JunkClientData, %eax
@@ -1003,16 +1949,17 @@
 	movl	$0, (%esp)
 	call	tmr_create
 	testl	%eax, %eax
-	jne	.L55
-	movl	$.LC33, 4(%esp)
+	jne	.L96
+	movl	$.LC36, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L55:
+.L96:
 	movl	numthrottles, %eax
 	testl	%eax, %eax
-	jle	.L56
+	jle	.L97
 	movl	$1, 16(%esp)
 	movl	$2000, 12(%esp)
 	movl	JunkClientData, %eax
@@ -1021,13 +1968,14 @@
 	movl	$0, (%esp)
 	call	tmr_create
 	testl	%eax, %eax
-	jne	.L56
-	movl	$.LC34, 4(%esp)
+	jne	.L97
+	movl	$.LC37, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L56:
+.L97:
 	movl	$1, 16(%esp)
 	movl	$3600000, 12(%esp)
 	movl	JunkClientData, %eax
@@ -1036,13 +1984,14 @@
 	movl	$0, (%esp)
 	call	tmr_create
 	testl	%eax, %eax
-	jne	.L57
-	movl	$.LC35, 4(%esp)
+	jne	.L98
+	movl	$.LC38, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L57:
+.L98:
 	movl	$0, (%esp)
 	call	time
 	movl	%eax, stats_time
@@ -1053,58 +2002,61 @@
 	movl	$0, stats_simultaneous
 	call	getuid
 	testl	%eax, %eax
-	jne	.L58
+	jne	.L99
 	movl	$0, 4(%esp)
 	movl	$0, (%esp)
 	call	setgroups
 	testl	%eax, %eax
-	jns	.L59
-	movl	$.LC36, 4(%esp)
+	jns	.L100
+	movl	$.LC39, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L59:
+.L100:
 	movl	144(%esp), %eax
 	movl	%eax, (%esp)
 	call	setgid
 	testl	%eax, %eax
-	jns	.L60
-	movl	$.LC37, 4(%esp)
+	jns	.L101
+	movl	$.LC40, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L60:
+.L101:
 	movl	user, %eax
 	movl	144(%esp), %edx
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	initgroups
 	testl	%eax, %eax
-	jns	.L61
-	movl	$.LC38, 4(%esp)
+	jns	.L102
+	movl	$.LC41, 4(%esp)
 	movl	$4, (%esp)
 	call	syslog
-.L61:
+.L102:
 	movl	140(%esp), %eax
 	movl	%eax, (%esp)
 	call	setuid
 	testl	%eax, %eax
-	jns	.L62
-	movl	$.LC39, 4(%esp)
+	jns	.L103
+	movl	$.LC42, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L62:
+.L103:
 	movl	do_chroot, %eax
 	testl	%eax, %eax
-	jne	.L58
-	movl	$.LC40, 4(%esp)
+	jne	.L99
+	movl	$.LC43, 4(%esp)
 	movl	$4, (%esp)
 	call	syslog
-.L58:
+.L99:
 	movl	max_connects, %eax
 	movl	%eax, %edx
 	movl	%edx, %eax
@@ -1116,47 +2068,108 @@
 	movl	%eax, connects
 	movl	connects, %eax
 	testl	%eax, %eax
-	jne	.L63
-	movl	$.LC41, 4(%esp)
+	jne	.L104
+	movl	$.LC44, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L63:
+.L104:
 	movl	$0, 152(%esp)
-	jmp	.L64
-.L65:
+	jmp	.L105
+.L109:
 	movl	connects, %ecx
 	movl	152(%esp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	$0, (%eax)
+	addl	%eax, %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L106
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L106:
+	movl	$0, (%ecx)
 	movl	connects, %ecx
 	movl	152(%esp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	152(%esp), %edx
-	addl	$1, %edx
-	movl	%edx, 4(%eax)
+	leal	(%ecx,%eax), %edx
+	movl	152(%esp), %eax
+	addl	$1, %eax
+	movl	%eax, 120(%esp)
+	leal	4(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L107
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L107:
+	movl	120(%esp), %eax
+	movl	%eax, 4(%edx)
 	movl	connects, %ecx
 	movl	152(%esp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	$0, 8(%eax)
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L108
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L108:
+	movl	$0, 8(%edx)
 	addl	$1, 152(%esp)
-.L64:
+.L105:
 	movl	max_connects, %eax
 	cmpl	%eax, 152(%esp)
-	jl	.L65
+	jl	.L109
 	movl	connects, %ecx
 	movl	max_connects, %eax
 	movl	%eax, %edx
@@ -1165,289 +2178,726 @@
 	addl	%edx, %eax
 	sall	$5, %eax
 	subl	$96, %eax
-	addl	%ecx, %eax
-	movl	$-1, 4(%eax)
+	leal	(%ecx,%eax), %edx
+	leal	4(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L110
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L110:
+	movl	$-1, 4(%edx)
 	movl	$0, first_free_connect
 	movl	$0, num_connects
 	movl	$0, httpd_conn_count
 	movl	hs, %eax
 	testl	%eax, %eax
-	je	.L66
-	movl	hs, %eax
-	movl	40(%eax), %eax
+	je	.L111
+	movl	hs, %edx
+	leal	40(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L112
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L112:
+	movl	40(%edx), %eax
 	cmpl	$-1, %eax
-	je	.L67
-	movl	hs, %eax
-	movl	40(%eax), %eax
+	je	.L113
+	movl	hs, %edx
+	leal	40(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L114
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L114:
+	movl	40(%edx), %eax
 	movl	$0, 8(%esp)
 	movl	$0, 4(%esp)
 	movl	%eax, (%esp)
 	call	fdwatch_add_fd
-.L67:
-	movl	hs, %eax
-	movl	44(%eax), %eax
+.L113:
+	movl	hs, %edx
+	leal	44(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L115
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L115:
+	movl	44(%edx), %eax
 	cmpl	$-1, %eax
-	je	.L66
-	movl	hs, %eax
-	movl	44(%eax), %eax
+	je	.L111
+	movl	hs, %edx
+	leal	44(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L116
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L116:
+	movl	44(%edx), %eax
 	movl	$0, 8(%esp)
 	movl	$0, 4(%esp)
 	movl	%eax, (%esp)
 	call	fdwatch_add_fd
-.L66:
-	leal	176(%esp), %eax
+.L111:
+	leal	336(%esp), %eax
 	movl	%eax, (%esp)
 	call	tmr_prepare_timeval
-	jmp	.L68
-.L85:
+	jmp	.L117
+.L149:
 	movl	got_hup, %eax
 	testl	%eax, %eax
-	je	.L69
+	je	.L118
 	call	re_open_logfile
 	movl	$0, got_hup
-.L69:
-	leal	176(%esp), %eax
+.L118:
+	leal	336(%esp), %eax
 	movl	%eax, (%esp)
 	call	tmr_mstimeout
 	movl	%eax, (%esp)
 	call	fdwatch
 	movl	%eax, 164(%esp)
 	cmpl	$0, 164(%esp)
-	jns	.L70
+	jns	.L119
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L120
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L120:
+	movl	(%edx), %eax
 	cmpl	$4, %eax
-	je	.L71
+	je	.L121
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L122
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L122:
+	movl	(%edx), %eax
 	cmpl	$11, %eax
-	jne	.L72
-.L71:
-	jmp	.L68
-.L72:
-	movl	$.LC42, 4(%esp)
+	jne	.L123
+.L121:
+	jmp	.L117
+.L123:
+	movl	$.LC45, 4(%esp)
 	movl	$3, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L70:
-	leal	176(%esp), %eax
+.L119:
+	leal	336(%esp), %eax
 	movl	%eax, (%esp)
 	call	tmr_prepare_timeval
 	cmpl	$0, 164(%esp)
-	jne	.L73
-	leal	176(%esp), %eax
+	jne	.L124
+	leal	336(%esp), %eax
 	movl	%eax, (%esp)
 	call	tmr_run
-	jmp	.L68
-.L73:
+	jmp	.L117
+.L124:
 	movl	hs, %eax
 	testl	%eax, %eax
-	je	.L74
-	movl	hs, %eax
-	movl	44(%eax), %eax
+	je	.L125
+	movl	hs, %edx
+	leal	44(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L126
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L126:
+	movl	44(%edx), %eax
 	cmpl	$-1, %eax
-	je	.L74
-	movl	hs, %eax
-	movl	44(%eax), %eax
+	je	.L125
+	movl	hs, %edx
+	leal	44(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L127
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L127:
+	movl	44(%edx), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_check_fd
 	testl	%eax, %eax
-	je	.L74
-	movl	hs, %eax
-	movl	44(%eax), %eax
+	je	.L125
+	movl	hs, %edx
+	leal	44(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L128
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L128:
+	movl	44(%edx), %eax
 	movl	%eax, 4(%esp)
-	leal	176(%esp), %eax
+	leal	336(%esp), %eax
 	movl	%eax, (%esp)
 	call	handle_newconnect
 	testl	%eax, %eax
-	je	.L74
-	jmp	.L68
-.L74:
+	je	.L125
+	jmp	.L117
+.L125:
 	movl	hs, %eax
 	testl	%eax, %eax
-	je	.L75
-	movl	hs, %eax
-	movl	40(%eax), %eax
+	je	.L129
+	movl	hs, %edx
+	leal	40(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L130
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L130:
+	movl	40(%edx), %eax
 	cmpl	$-1, %eax
-	je	.L75
-	movl	hs, %eax
-	movl	40(%eax), %eax
+	je	.L129
+	movl	hs, %edx
+	leal	40(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L131
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L131:
+	movl	40(%edx), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_check_fd
 	testl	%eax, %eax
-	je	.L75
-	movl	hs, %eax
-	movl	40(%eax), %eax
+	je	.L129
+	movl	hs, %edx
+	leal	40(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L132
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L132:
+	movl	40(%edx), %eax
 	movl	%eax, 4(%esp)
-	leal	176(%esp), %eax
+	leal	336(%esp), %eax
 	movl	%eax, (%esp)
 	call	handle_newconnect
 	testl	%eax, %eax
-	je	.L75
-	jmp	.L68
-.L75:
-	jmp	.L76
-.L82:
+	je	.L129
+	jmp	.L117
+.L129:
+	jmp	.L133
+.L142:
 	cmpl	$0, 168(%esp)
-	jne	.L77
-	jmp	.L76
-.L77:
+	jne	.L134
+	jmp	.L133
+.L134:
+	movl	168(%esp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L135
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L135:
 	movl	168(%esp), %eax
 	movl	8(%eax), %eax
 	movl	%eax, 172(%esp)
 	movl	172(%esp), %eax
+	addl	$448, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L136
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L136:
+	movl	172(%esp), %eax
 	movl	448(%eax), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_check_fd
 	testl	%eax, %eax
-	jne	.L78
-	leal	176(%esp), %eax
+	jne	.L137
+	leal	336(%esp), %eax
 	movl	%eax, 4(%esp)
 	movl	168(%esp), %eax
 	movl	%eax, (%esp)
 	call	clear_connection
-	jmp	.L76
-.L78:
+	jmp	.L133
+.L137:
+	movl	168(%esp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L138
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L138:
 	movl	168(%esp), %eax
 	movl	(%eax), %eax
 	cmpl	$2, %eax
-	je	.L79
+	je	.L139
 	cmpl	$4, %eax
-	je	.L80
+	je	.L140
 	cmpl	$1, %eax
-	jne	.L76
-	leal	176(%esp), %eax
+	jne	.L133
+	leal	336(%esp), %eax
 	movl	%eax, 4(%esp)
 	movl	168(%esp), %eax
 	movl	%eax, (%esp)
 	call	handle_read
-	jmp	.L76
-.L79:
-	leal	176(%esp), %eax
+	jmp	.L133
+.L139:
+	leal	336(%esp), %eax
 	movl	%eax, 4(%esp)
 	movl	168(%esp), %eax
 	movl	%eax, (%esp)
 	call	handle_send
-	jmp	.L76
-.L80:
-	leal	176(%esp), %eax
+	jmp	.L133
+.L140:
+	leal	336(%esp), %eax
 	movl	%eax, 4(%esp)
 	movl	168(%esp), %eax
 	movl	%eax, (%esp)
 	call	handle_linger
 	nop
-.L76:
+.L133:
 	call	fdwatch_get_next_client_data
 	movl	%eax, 168(%esp)
 	cmpl	$-1, 168(%esp)
-	jne	.L82
-	leal	176(%esp), %eax
+	jne	.L142
+	leal	336(%esp), %eax
 	movl	%eax, (%esp)
 	call	tmr_run
 	movl	got_usr1, %eax
 	testl	%eax, %eax
-	je	.L68
+	je	.L117
 	movl	terminate, %eax
 	testl	%eax, %eax
-	jne	.L68
+	jne	.L117
 	movl	$1, terminate
 	movl	hs, %eax
 	testl	%eax, %eax
-	je	.L68
-	movl	hs, %eax
-	movl	40(%eax), %eax
+	je	.L117
+	movl	hs, %edx
+	leal	40(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L143
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L143:
+	movl	40(%edx), %eax
 	cmpl	$-1, %eax
-	je	.L83
-	movl	hs, %eax
-	movl	40(%eax), %eax
+	je	.L144
+	movl	hs, %edx
+	leal	40(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L145
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L145:
+	movl	40(%edx), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_del_fd
-.L83:
-	movl	hs, %eax
-	movl	44(%eax), %eax
+.L144:
+	movl	hs, %edx
+	leal	44(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L146
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L146:
+	movl	44(%edx), %eax
 	cmpl	$-1, %eax
-	je	.L84
-	movl	hs, %eax
-	movl	44(%eax), %eax
+	je	.L147
+	movl	hs, %edx
+	leal	44(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L148
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L148:
+	movl	44(%edx), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_del_fd
-.L84:
+.L147:
 	movl	hs, %eax
 	movl	%eax, (%esp)
 	call	httpd_unlisten
-.L68:
+.L117:
 	movl	terminate, %eax
 	testl	%eax, %eax
-	je	.L85
+	je	.L149
 	movl	num_connects, %eax
 	testl	%eax, %eax
-	jg	.L85
+	jg	.L149
 	call	shut_down
-	movl	$.LC2, 4(%esp)
+	movl	$.LC3, 4(%esp)
 	movl	$5, (%esp)
 	call	syslog
 	call	closelog
+	call	__asan_handle_no_return
 	movl	$0, (%esp)
 	call	exit
 	.cfi_endproc
 .LFE7:
 	.size	main, .-main
 	.section	.rodata
-.LC43:
+	.align 32
+.LC46:
 	.string	"nobody"
-.LC44:
+	.zero	57
+	.align 32
+.LC47:
 	.string	"iso-8859-1"
-.LC45:
+	.zero	53
+	.align 32
+.LC48:
 	.string	""
-.LC46:
+	.zero	63
+	.align 32
+.LC49:
 	.string	"-V"
-.LC47:
+	.zero	61
+	.align 32
+.LC50:
 	.string	"thttpd/2.26.2 April 4, 2012"
-.LC48:
+	.zero	36
+	.align 32
+.LC51:
 	.string	"-C"
-.LC49:
+	.zero	61
+	.align 32
+.LC52:
 	.string	"-p"
-.LC50:
+	.zero	61
+	.align 32
+.LC53:
 	.string	"-d"
-.LC51:
+	.zero	61
+	.align 32
+.LC54:
 	.string	"-r"
-.LC52:
+	.zero	61
+	.align 32
+.LC55:
 	.string	"-nor"
-.LC53:
+	.zero	59
+	.align 32
+.LC56:
 	.string	"-dd"
-.LC54:
+	.zero	60
+	.align 32
+.LC57:
 	.string	"-s"
-.LC55:
+	.zero	61
+	.align 32
+.LC58:
 	.string	"-nos"
-.LC56:
+	.zero	59
+	.align 32
+.LC59:
 	.string	"-u"
-.LC57:
+	.zero	61
+	.align 32
+.LC60:
 	.string	"-c"
-.LC58:
+	.zero	61
+	.align 32
+.LC61:
 	.string	"-t"
-.LC59:
+	.zero	61
+	.align 32
+.LC62:
 	.string	"-h"
-.LC60:
+	.zero	61
+	.align 32
+.LC63:
 	.string	"-l"
-.LC61:
+	.zero	61
+	.align 32
+.LC64:
 	.string	"-v"
-.LC62:
+	.zero	61
+	.align 32
+.LC65:
 	.string	"-nov"
-.LC63:
+	.zero	59
+	.align 32
+.LC66:
 	.string	"-g"
-.LC64:
+	.zero	61
+	.align 32
+.LC67:
 	.string	"-nog"
-.LC65:
+	.zero	59
+	.align 32
+.LC68:
 	.string	"-i"
-.LC66:
+	.zero	61
+	.align 32
+.LC69:
 	.string	"-T"
-.LC67:
+	.zero	61
+	.align 32
+.LC70:
 	.string	"-P"
-.LC68:
+	.zero	61
+	.align 32
+.LC71:
 	.string	"-M"
-.LC69:
+	.zero	61
+	.align 32
+.LC72:
 	.string	"-D"
+	.zero	61
 	.text
 	.type	parse_args, @function
 parse_args:
@@ -1458,7 +2908,11 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$40, %esp
+	pushl	%esi
+	pushl	%ebx
+	subl	$32, %esp
+	.cfi_offset 6, -12
+	.cfi_offset 3, -16
 	movl	$0, debug
 	movw	$80, port
 	movl	$0, dir
@@ -1478,473 +2932,1200 @@
 	movl	$0, hostname
 	movl	$0, logfile
 	movl	$0, pidfile
-	movl	$.LC43, user
-	movl	$.LC44, charset
-	movl	$.LC45, p3p
+	movl	$.LC46, user
+	movl	$.LC47, charset
+	movl	$.LC48, p3p
 	movl	$-1, max_age
 	movl	$1, -12(%ebp)
-	jmp	.L88
-.L114:
+	jmp	.L152
+.L216:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC46, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L153
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L153:
+	movl	(%ecx), %eax
+	movl	$.LC49, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L89
-	movl	$.LC47, (%esp)
+	jne	.L154
+	movl	$.LC50, (%esp)
 	call	puts
+	call	__asan_handle_no_return
 	movl	$0, (%esp)
 	call	exit
-.L89:
+.L154:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC48, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L155
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L155:
+	movl	(%ecx), %eax
+	movl	$.LC51, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L90
+	jne	.L156
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L90
+	jge	.L156
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L157
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L157:
+	movl	(%ecx), %eax
 	movl	%eax, (%esp)
 	call	read_config
-	jmp	.L91
-.L90:
+	jmp	.L158
+.L156:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC49, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L159
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L159:
+	movl	(%ecx), %eax
+	movl	$.LC52, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L92
+	jne	.L160
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L92
+	jge	.L160
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L161
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L161:
+	movl	(%ecx), %eax
 	movl	%eax, (%esp)
 	call	atoi
 	movw	%ax, port
-	jmp	.L91
-.L92:
+	jmp	.L158
+.L160:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC50, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L162
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L162:
+	movl	(%ecx), %eax
+	movl	$.LC53, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L93
+	jne	.L163
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L93
+	jge	.L163
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L164
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L164:
+	movl	(%ecx), %eax
 	movl	%eax, dir
-	jmp	.L91
-.L93:
+	jmp	.L158
+.L163:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC51, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L165
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L165:
+	movl	(%ecx), %eax
+	movl	$.LC54, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L94
+	jne	.L166
 	movl	$1, do_chroot
 	movl	$1, no_symlink_check
-	jmp	.L91
-.L94:
+	jmp	.L158
+.L166:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC52, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L167
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L167:
+	movl	(%ecx), %eax
+	movl	$.LC55, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L95
+	jne	.L168
 	movl	$0, do_chroot
 	movl	$0, no_symlink_check
-	jmp	.L91
-.L95:
+	jmp	.L158
+.L168:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC53, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L169
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L169:
+	movl	(%ecx), %eax
+	movl	$.LC56, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L96
+	jne	.L170
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L96
+	jge	.L170
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L171
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L171:
+	movl	(%ecx), %eax
 	movl	%eax, data_dir
-	jmp	.L91
-.L96:
+	jmp	.L158
+.L170:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC54, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L172
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L172:
+	movl	(%ecx), %eax
+	movl	$.LC57, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L97
+	jne	.L173
 	movl	$0, no_symlink_check
-	jmp	.L91
-.L97:
+	jmp	.L158
+.L173:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC55, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L174
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L174:
+	movl	(%ecx), %eax
+	movl	$.LC58, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L98
+	jne	.L175
 	movl	$1, no_symlink_check
-	jmp	.L91
-.L98:
+	jmp	.L158
+.L175:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC56, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L176
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L176:
+	movl	(%ecx), %eax
+	movl	$.LC59, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L99
+	jne	.L177
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L99
+	jge	.L177
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L178
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L178:
+	movl	(%ecx), %eax
 	movl	%eax, user
-	jmp	.L91
-.L99:
+	jmp	.L158
+.L177:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC57, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L179
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L179:
+	movl	(%ecx), %eax
+	movl	$.LC60, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L100
+	jne	.L180
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L100
+	jge	.L180
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L181
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L181:
+	movl	(%ecx), %eax
 	movl	%eax, cgi_pattern
-	jmp	.L91
-.L100:
+	jmp	.L158
+.L180:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC58, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L182
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L182:
+	movl	(%ecx), %eax
+	movl	$.LC61, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L101
+	jne	.L183
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L101
+	jge	.L183
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L184
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L184:
+	movl	(%ecx), %eax
 	movl	%eax, throttlefile
-	jmp	.L91
-.L101:
+	jmp	.L158
+.L183:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC59, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L185
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L185:
+	movl	(%ecx), %eax
+	movl	$.LC62, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L102
+	jne	.L186
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L102
+	jge	.L186
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L187
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L187:
+	movl	(%ecx), %eax
 	movl	%eax, hostname
-	jmp	.L91
-.L102:
+	jmp	.L158
+.L186:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC60, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L188
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L188:
+	movl	(%ecx), %eax
+	movl	$.LC63, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L103
+	jne	.L189
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L103
+	jge	.L189
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L190
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L190:
+	movl	(%ecx), %eax
 	movl	%eax, logfile
-	jmp	.L91
-.L103:
+	jmp	.L158
+.L189:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC61, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L191
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L191:
+	movl	(%ecx), %eax
+	movl	$.LC64, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L104
+	jne	.L192
 	movl	$1, do_vhost
-	jmp	.L91
-.L104:
+	jmp	.L158
+.L192:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC62, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L193
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L193:
+	movl	(%ecx), %eax
+	movl	$.LC65, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L105
+	jne	.L194
 	movl	$0, do_vhost
-	jmp	.L91
-.L105:
+	jmp	.L158
+.L194:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC63, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L195
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L195:
+	movl	(%ecx), %eax
+	movl	$.LC66, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L106
+	jne	.L196
 	movl	$1, do_global_passwd
-	jmp	.L91
-.L106:
+	jmp	.L158
+.L196:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC64, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L197
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L197:
+	movl	(%ecx), %eax
+	movl	$.LC67, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L107
+	jne	.L198
 	movl	$0, do_global_passwd
-	jmp	.L91
-.L107:
+	jmp	.L158
+.L198:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC65, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L199
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L199:
+	movl	(%ecx), %eax
+	movl	$.LC68, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L108
+	jne	.L200
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L108
+	jge	.L200
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	%eax, pidfile
-	jmp	.L91
-.L108:
-	movl	-12(%ebp), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L201
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L201:
+	movl	(%ecx), %eax
+	movl	%eax, pidfile
+	jmp	.L158
+.L200:
+	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC66, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L202
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L202:
+	movl	(%ecx), %eax
+	movl	$.LC69, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L109
+	jne	.L203
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L109
+	jge	.L203
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L204
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L204:
+	movl	(%ecx), %eax
 	movl	%eax, charset
-	jmp	.L91
-.L109:
+	jmp	.L158
+.L203:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC67, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L205
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L205:
+	movl	(%ecx), %eax
+	movl	$.LC70, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L110
+	jne	.L206
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L110
+	jge	.L206
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L207
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L207:
+	movl	(%ecx), %eax
 	movl	%eax, p3p
-	jmp	.L91
-.L110:
+	jmp	.L158
+.L206:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC68, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L208
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L208:
+	movl	(%ecx), %eax
+	movl	$.LC71, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L111
+	jne	.L209
 	movl	-12(%ebp), %eax
 	addl	$1, %eax
 	cmpl	8(%ebp), %eax
-	jge	.L111
+	jge	.L209
 	addl	$1, -12(%ebp)
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L210
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L210:
+	movl	(%ecx), %eax
 	movl	%eax, (%esp)
 	call	atoi
 	movl	%eax, max_age
-	jmp	.L91
-.L111:
+	jmp	.L158
+.L209:
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movl	$.LC69, 4(%esp)
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L211
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L211:
+	movl	(%ecx), %eax
+	movl	$.LC72, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L112
+	jne	.L212
 	movl	$1, debug
-	jmp	.L91
-.L112:
+	jmp	.L158
+.L212:
 	call	usage
-.L91:
+.L158:
 	addl	$1, -12(%ebp)
-.L88:
+.L152:
 	movl	-12(%ebp), %eax
 	cmpl	8(%ebp), %eax
-	jge	.L113
+	jge	.L213
 	movl	-12(%ebp), %eax
 	leal	0(,%eax,4), %edx
 	movl	12(%ebp), %eax
-	addl	%edx, %eax
-	movl	(%eax), %eax
-	movzbl	(%eax), %eax
+	leal	(%edx,%eax), %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L214
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L214:
+	movl	(%ecx), %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L215
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L215:
+	movzbl	(%edx), %eax
 	cmpb	$45, %al
-	je	.L114
-.L113:
+	je	.L216
+.L213:
 	movl	-12(%ebp), %eax
 	cmpl	8(%ebp), %eax
-	je	.L87
+	je	.L151
 	call	usage
-.L87:
-	leave
+.L151:
+	addl	$32, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -1952,9 +4133,10 @@
 .LFE8:
 	.size	parse_args, .-parse_args
 	.section	.rodata
-	.align 4
-.LC70:
+	.align 32
+.LC73:
 	.string	"usage:  %s [-C configfile] [-p port] [-d dir] [-r|-nor] [-dd data_dir] [-s|-nos] [-v|-nov] [-g|-nog] [-u user] [-c cgipat] [-t throttles] [-h host] [-l logfile] [-i pidfile] [-T charset] [-P P3P] [-M maxage] [-V] [-D]\n"
+	.zero	37
 	.text
 	.type	usage, @function
 usage:
@@ -1969,74 +4151,135 @@
 	movl	argv0, %edx
 	movl	stderr, %eax
 	movl	%edx, 8(%esp)
-	movl	$.LC70, 4(%esp)
+	movl	$.LC73, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
 	.cfi_endproc
 .LFE9:
 	.size	usage, .-usage
 	.section	.rodata
-.LC71:
+	.align 4
+.LC74:
+	.string	"read_config 1 32 10000 4 line "
+	.align 32
+.LC75:
 	.string	"r"
-.LC72:
+	.zero	62
+	.align 32
+.LC76:
 	.string	" \t\n\r"
-.LC73:
+	.zero	59
+	.align 32
+.LC77:
 	.string	"debug"
-.LC74:
+	.zero	58
+	.align 32
+.LC78:
 	.string	"port"
-.LC75:
+	.zero	59
+	.align 32
+.LC79:
 	.string	"dir"
-.LC76:
+	.zero	60
+	.align 32
+.LC80:
 	.string	"nochroot"
-.LC77:
+	.zero	55
+	.align 32
+.LC81:
 	.string	"data_dir"
-.LC78:
+	.zero	55
+	.align 32
+.LC82:
 	.string	"symlink"
-.LC79:
+	.zero	56
+	.align 32
+.LC83:
 	.string	"nosymlink"
-.LC80:
+	.zero	54
+	.align 32
+.LC84:
 	.string	"symlinks"
-.LC81:
+	.zero	55
+	.align 32
+.LC85:
 	.string	"nosymlinks"
-.LC82:
+	.zero	53
+	.align 32
+.LC86:
 	.string	"user"
-.LC83:
+	.zero	59
+	.align 32
+.LC87:
 	.string	"cgipat"
-.LC84:
+	.zero	57
+	.align 32
+.LC88:
 	.string	"cgilimit"
-.LC85:
+	.zero	55
+	.align 32
+.LC89:
 	.string	"urlpat"
-.LC86:
+	.zero	57
+	.align 32
+.LC90:
 	.string	"noemptyreferers"
-.LC87:
+	.zero	48
+	.align 32
+.LC91:
 	.string	"localpat"
-.LC88:
+	.zero	55
+	.align 32
+.LC92:
 	.string	"throttles"
-.LC89:
+	.zero	54
+	.align 32
+.LC93:
 	.string	"host"
-.LC90:
+	.zero	59
+	.align 32
+.LC94:
 	.string	"logfile"
-.LC91:
+	.zero	56
+	.align 32
+.LC95:
 	.string	"vhost"
-.LC92:
+	.zero	58
+	.align 32
+.LC96:
 	.string	"novhost"
-.LC93:
+	.zero	56
+	.align 32
+.LC97:
 	.string	"globalpasswd"
-.LC94:
+	.zero	51
+	.align 32
+.LC98:
 	.string	"noglobalpasswd"
-.LC95:
+	.zero	49
+	.align 32
+.LC99:
 	.string	"pidfile"
-.LC96:
+	.zero	56
+	.align 32
+.LC100:
 	.string	"charset"
-.LC97:
+	.zero	56
+	.align 32
+.LC101:
 	.string	"p3p"
-.LC98:
+	.zero	60
+	.align 32
+.LC102:
 	.string	"max_age"
-	.align 4
-.LC99:
+	.zero	56
+	.align 32
+.LC103:
 	.string	"%s: unknown config option '%s'\n"
+	.zero	32
 	.text
 	.type	read_config, @function
 read_config:
@@ -2047,556 +4290,674 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$10072, %esp
+	pushl	%edi
+	pushl	%esi
+	pushl	%ebx
+	subl	$10156, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
 	movl	8(%ebp), %eax
-	movl	%eax, -10044(%ebp)
+	movl	%eax, -10140(%ebp)
+	leal	-10104(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC74, 4(%eax)
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movl	%eax, -10144(%ebp)
+	movl	$-235802127, (%eax)
+	movl	$-185335808, 1252(%eax)
 	movl	%gs:20, %eax
-	movl	%eax, -12(%ebp)
+	movl	%eax, -28(%ebp)
 	xorl	%eax, %eax
-	movl	$.LC71, 4(%esp)
-	movl	-10044(%ebp), %eax
+	movl	$.LC75, 4(%esp)
+	movl	-10140(%ebp), %eax
 	movl	%eax, (%esp)
 	call	fopen
-	movl	%eax, -10020(%ebp)
-	cmpl	$0, -10020(%ebp)
-	jne	.L118
-	movl	-10044(%ebp), %eax
+	movl	%eax, -10112(%ebp)
+	cmpl	$0, -10112(%ebp)
+	jne	.L220
+	movl	-10140(%ebp), %eax
 	movl	%eax, (%esp)
 	call	perror
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L118:
-	jmp	.L119
-.L154:
+.L220:
+	jmp	.L221
+.L261:
 	movl	$35, 4(%esp)
-	leal	-10012(%ebp), %eax
+	leal	-10072(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strchr
-	movl	%eax, -10032(%ebp)
-	cmpl	$0, -10032(%ebp)
-	je	.L120
-	movl	-10032(%ebp), %eax
+	movl	%eax, -10124(%ebp)
+	cmpl	$0, -10124(%ebp)
+	je	.L222
+	movl	-10124(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L223
+	movl	%eax, (%esp)
+	call	__asan_report_store1
+.L223:
+	movl	-10124(%ebp), %eax
 	movb	$0, (%eax)
-.L120:
-	leal	-10012(%ebp), %eax
-	movl	%eax, -10032(%ebp)
-	movl	$.LC72, 4(%esp)
-	movl	-10032(%ebp), %eax
+.L222:
+	leal	-10072(%ebp), %eax
+	movl	%eax, -10124(%ebp)
+	movl	$.LC76, 4(%esp)
+	movl	-10124(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strspn
-	addl	%eax, -10032(%ebp)
-	jmp	.L121
-.L153:
-	movl	$.LC72, 4(%esp)
-	movl	-10032(%ebp), %eax
+	addl	%eax, -10124(%ebp)
+	jmp	.L224
+.L260:
+	movl	$.LC76, 4(%esp)
+	movl	-10124(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcspn
-	movl	-10032(%ebp), %edx
+	movl	-10124(%ebp), %edx
 	addl	%edx, %eax
-	movl	%eax, -10028(%ebp)
-	jmp	.L122
-.L123:
-	movl	-10028(%ebp), %eax
+	movl	%eax, -10120(%ebp)
+	jmp	.L225
+.L228:
+	movl	-10120(%ebp), %eax
 	leal	1(%eax), %edx
-	movl	%edx, -10028(%ebp)
+	movl	%edx, -10120(%ebp)
+	movl	%eax, %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%edx, %esi
+	andl	$7, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L226
+	movl	%edx, (%esp)
+	call	__asan_report_store1
+.L226:
 	movb	$0, (%eax)
-.L122:
-	movl	-10028(%ebp), %eax
+.L225:
+	movl	-10120(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L227
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L227:
+	movl	-10120(%ebp), %eax
 	movzbl	(%eax), %eax
 	cmpb	$32, %al
-	je	.L123
-	movl	-10028(%ebp), %eax
+	je	.L228
+	movl	-10120(%ebp), %eax
 	movzbl	(%eax), %eax
 	cmpb	$9, %al
-	je	.L123
-	movl	-10028(%ebp), %eax
+	je	.L228
+	movl	-10120(%ebp), %eax
 	movzbl	(%eax), %eax
 	cmpb	$10, %al
-	je	.L123
-	movl	-10028(%ebp), %eax
+	je	.L228
+	movl	-10120(%ebp), %eax
 	movzbl	(%eax), %eax
 	cmpb	$13, %al
-	je	.L123
-	movl	-10032(%ebp), %eax
-	movl	%eax, -10016(%ebp)
+	je	.L228
+	movl	-10124(%ebp), %eax
+	movl	%eax, -10108(%ebp)
 	movl	$61, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strchr
-	movl	%eax, -10024(%ebp)
-	cmpl	$0, -10024(%ebp)
-	je	.L124
-	movl	-10024(%ebp), %eax
+	movl	%eax, -10116(%ebp)
+	cmpl	$0, -10116(%ebp)
+	je	.L229
+	movl	-10116(%ebp), %eax
 	leal	1(%eax), %edx
-	movl	%edx, -10024(%ebp)
+	movl	%edx, -10116(%ebp)
+	movl	%eax, %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%edx, %esi
+	andl	$7, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L230
+	movl	%edx, (%esp)
+	call	__asan_report_store1
+.L230:
 	movb	$0, (%eax)
-.L124:
-	movl	$.LC73, 4(%esp)
-	movl	-10016(%ebp), %eax
+.L229:
+	movl	$.LC77, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L125
-	movl	-10024(%ebp), %eax
+	jne	.L231
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$1, debug
-	jmp	.L126
-.L125:
-	movl	$.LC74, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L231:
+	movl	$.LC78, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L127
-	movl	-10024(%ebp), %eax
+	jne	.L233
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	atoi
 	movw	%ax, port
-	jmp	.L126
-.L127:
-	movl	$.LC75, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L233:
+	movl	$.LC79, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L128
-	movl	-10024(%ebp), %eax
+	jne	.L234
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, dir
-	jmp	.L126
-.L128:
-	movl	$.LC25, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L234:
+	movl	$.LC28, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L129
-	movl	-10024(%ebp), %eax
+	jne	.L235
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$1, do_chroot
 	movl	$1, no_symlink_check
-	jmp	.L126
-.L129:
-	movl	$.LC76, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L235:
+	movl	$.LC80, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L130
-	movl	-10024(%ebp), %eax
+	jne	.L236
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$0, do_chroot
 	movl	$0, no_symlink_check
-	jmp	.L126
-.L130:
-	movl	$.LC77, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L236:
+	movl	$.LC81, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L131
-	movl	-10024(%ebp), %eax
+	jne	.L237
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, data_dir
-	jmp	.L126
-.L131:
-	movl	$.LC78, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L237:
+	movl	$.LC82, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L132
-	movl	-10024(%ebp), %eax
+	jne	.L238
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$0, no_symlink_check
-	jmp	.L126
-.L132:
-	movl	$.LC79, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L238:
+	movl	$.LC83, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L133
-	movl	-10024(%ebp), %eax
+	jne	.L239
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$1, no_symlink_check
-	jmp	.L126
-.L133:
-	movl	$.LC80, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L239:
+	movl	$.LC84, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L134
-	movl	-10024(%ebp), %eax
+	jne	.L240
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$0, no_symlink_check
-	jmp	.L126
-.L134:
-	movl	$.LC81, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L240:
+	movl	$.LC85, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L135
-	movl	-10024(%ebp), %eax
+	jne	.L241
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$1, no_symlink_check
-	jmp	.L126
-.L135:
-	movl	$.LC82, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L241:
+	movl	$.LC86, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L136
-	movl	-10024(%ebp), %eax
+	jne	.L242
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, user
-	jmp	.L126
-.L136:
-	movl	$.LC83, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L242:
+	movl	$.LC87, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L137
-	movl	-10024(%ebp), %eax
+	jne	.L243
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, cgi_pattern
-	jmp	.L126
-.L137:
-	movl	$.LC84, 4(%esp)
-	movl	-10016(%ebp), %eax
-	movl	%eax, (%esp)
+	jmp	.L232
+.L243:
+	movl	$.LC88, 4(%esp)
+	movl	-10108(%ebp), %eax
+	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L138
-	movl	-10024(%ebp), %eax
+	jne	.L244
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	atoi
 	movl	%eax, cgi_limit
-	jmp	.L126
-.L138:
-	movl	$.LC85, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L244:
+	movl	$.LC89, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L139
-	movl	-10024(%ebp), %eax
+	jne	.L245
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, url_pattern
-	jmp	.L126
-.L139:
-	movl	$.LC86, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L245:
+	movl	$.LC90, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L140
-	movl	-10024(%ebp), %eax
+	jne	.L246
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$1, no_empty_referers
-	jmp	.L126
-.L140:
-	movl	$.LC87, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L246:
+	movl	$.LC91, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L141
-	movl	-10024(%ebp), %eax
+	jne	.L247
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, local_pattern
-	jmp	.L126
-.L141:
-	movl	$.LC88, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L247:
+	movl	$.LC92, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L142
-	movl	-10024(%ebp), %eax
+	jne	.L248
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, throttlefile
-	jmp	.L126
-.L142:
-	movl	$.LC89, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L248:
+	movl	$.LC93, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L143
-	movl	-10024(%ebp), %eax
+	jne	.L249
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, hostname
-	jmp	.L126
-.L143:
-	movl	$.LC90, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L249:
+	movl	$.LC94, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L144
-	movl	-10024(%ebp), %eax
+	jne	.L250
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, logfile
-	jmp	.L126
-.L144:
-	movl	$.LC91, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L250:
+	movl	$.LC95, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L145
-	movl	-10024(%ebp), %eax
+	jne	.L251
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$1, do_vhost
-	jmp	.L126
-.L145:
-	movl	$.LC92, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L251:
+	movl	$.LC96, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L146
-	movl	-10024(%ebp), %eax
+	jne	.L252
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$0, do_vhost
-	jmp	.L126
-.L146:
-	movl	$.LC93, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L252:
+	movl	$.LC97, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L147
-	movl	-10024(%ebp), %eax
+	jne	.L253
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$1, do_global_passwd
-	jmp	.L126
-.L147:
-	movl	$.LC94, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L253:
+	movl	$.LC98, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L148
-	movl	-10024(%ebp), %eax
+	jne	.L254
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	no_value_required
 	movl	$0, do_global_passwd
-	jmp	.L126
-.L148:
-	movl	$.LC95, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L254:
+	movl	$.LC99, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L149
-	movl	-10024(%ebp), %eax
+	jne	.L255
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, pidfile
-	jmp	.L126
-.L149:
-	movl	$.LC96, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L255:
+	movl	$.LC100, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L150
-	movl	-10024(%ebp), %eax
+	jne	.L256
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, charset
-	jmp	.L126
-.L150:
-	movl	$.LC97, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L256:
+	movl	$.LC101, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L151
-	movl	-10024(%ebp), %eax
+	jne	.L257
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
 	movl	%eax, p3p
-	jmp	.L126
-.L151:
-	movl	$.LC98, 4(%esp)
-	movl	-10016(%ebp), %eax
+	jmp	.L232
+.L257:
+	movl	$.LC102, 4(%esp)
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L152
-	movl	-10024(%ebp), %eax
+	jne	.L258
+	movl	-10116(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-10016(%ebp), %eax
+	movl	-10108(%ebp), %eax
 	movl	%eax, (%esp)
 	call	value_required
-	movl	-10024(%ebp), %eax
+	movl	-10116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	atoi
 	movl	%eax, max_age
-	jmp	.L126
-.L152:
+	jmp	.L232
+.L258:
 	movl	argv0, %edx
 	movl	stderr, %eax
-	movl	-10016(%ebp), %ecx
+	movl	-10108(%ebp), %ecx
 	movl	%ecx, 12(%esp)
 	movl	%edx, 8(%esp)
-	movl	$.LC99, 4(%esp)
+	movl	$.LC103, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L126:
-	movl	-10028(%ebp), %eax
-	movl	%eax, -10032(%ebp)
-	movl	$.LC72, 4(%esp)
-	movl	-10032(%ebp), %eax
+.L232:
+	movl	-10120(%ebp), %eax
+	movl	%eax, -10124(%ebp)
+	movl	$.LC76, 4(%esp)
+	movl	-10124(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strspn
-	addl	%eax, -10032(%ebp)
-.L121:
-	movl	-10032(%ebp), %eax
+	addl	%eax, -10124(%ebp)
+.L224:
+	movl	-10124(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L259
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L259:
+	movl	-10124(%ebp), %eax
 	movzbl	(%eax), %eax
 	testb	%al, %al
-	jne	.L153
-.L119:
-	movl	-10020(%ebp), %eax
+	jne	.L260
+.L221:
+	movl	-10112(%ebp), %eax
 	movl	%eax, 8(%esp)
 	movl	$10000, 4(%esp)
-	leal	-10012(%ebp), %eax
+	leal	-10072(%ebp), %eax
 	movl	%eax, (%esp)
 	call	fgets
 	testl	%eax, %eax
-	jne	.L154
-	movl	-10020(%ebp), %eax
+	jne	.L261
+	movl	-10112(%ebp), %eax
 	movl	%eax, (%esp)
 	call	fclose
-	movl	-12(%ebp), %eax
+	movl	-10144(%ebp), %eax
+	movl	$0, (%eax)
+	movl	$0, 1252(%eax)
+	movl	-28(%ebp), %eax
 	xorl	%gs:20, %eax
-	je	.L155
+	je	.L262
 	call	__stack_chk_fail
-.L155:
-	leave
+.L262:
+	addl	$10156, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -2604,9 +4965,10 @@
 .LFE10:
 	.size	read_config, .-read_config
 	.section	.rodata
-	.align 4
-.LC100:
+	.align 32
+.LC104:
 	.string	"%s: value required for %s option\n"
+	.zero	62
 	.text
 	.type	value_required, @function
 value_required:
@@ -2619,18 +4981,19 @@
 	.cfi_def_cfa_register 5
 	subl	$24, %esp
 	cmpl	$0, 12(%ebp)
-	jne	.L156
+	jne	.L263
 	movl	argv0, %edx
 	movl	stderr, %eax
 	movl	8(%ebp), %ecx
 	movl	%ecx, 12(%esp)
 	movl	%edx, 8(%esp)
-	movl	$.LC100, 4(%esp)
+	movl	$.LC104, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L156:
+.L263:
 	leave
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
@@ -2639,9 +5002,10 @@
 .LFE11:
 	.size	value_required, .-value_required
 	.section	.rodata
-	.align 4
-.LC101:
+	.align 32
+.LC105:
 	.string	"%s: no value required for %s option\n"
+	.zero	59
 	.text
 	.type	no_value_required, @function
 no_value_required:
@@ -2654,18 +5018,19 @@
 	.cfi_def_cfa_register 5
 	subl	$24, %esp
 	cmpl	$0, 12(%ebp)
-	je	.L158
+	je	.L265
 	movl	argv0, %edx
 	movl	stderr, %eax
 	movl	8(%ebp), %ecx
 	movl	%ecx, 12(%esp)
 	movl	%edx, 8(%esp)
-	movl	$.LC101, 4(%esp)
+	movl	$.LC105, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L158:
+.L265:
 	leave
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
@@ -2674,12 +5039,14 @@
 .LFE12:
 	.size	no_value_required, .-no_value_required
 	.section	.rodata
-	.align 4
-.LC102:
+	.align 32
+.LC106:
 	.string	"out of memory copying a string"
-	.align 4
-.LC103:
+	.zero	33
+	.align 32
+.LC107:
 	.string	"%s: out of memory copying a string\n"
+	.zero	60
 	.text
 	.type	e_strdup, @function
 e_strdup:
@@ -2696,19 +5063,20 @@
 	call	strdup
 	movl	%eax, -12(%ebp)
 	cmpl	$0, -12(%ebp)
-	jne	.L161
-	movl	$.LC102, 4(%esp)
+	jne	.L268
+	movl	$.LC106, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
 	movl	argv0, %edx
 	movl	stderr, %eax
 	movl	%edx, 8(%esp)
-	movl	$.LC103, 4(%esp)
+	movl	$.LC107, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L161:
+.L268:
 	movl	-12(%ebp), %eax
 	leave
 	.cfi_restore 5
@@ -2718,15 +5086,25 @@
 .LFE13:
 	.size	e_strdup, .-e_strdup
 	.section	.rodata
-.LC104:
+	.align 4
+.LC108:
+	.string	"lookup_hostname 3 32 4 2 ai 96 32 5 hints 160 10 7 portstr "
+	.align 32
+.LC109:
 	.string	"%d"
-.LC105:
+	.zero	61
+	.align 32
+.LC110:
 	.string	"getaddrinfo %.80s - %.80s"
-.LC106:
+	.zero	38
+	.align 32
+.LC111:
 	.string	"%s: getaddrinfo %s - %s\n"
-	.align 4
-.LC107:
+	.zero	39
+	.align 32
+.LC112:
 	.string	"%.80s - sockaddr too small (%lu < %lu)"
+	.zero	57
 	.text
 	.type	lookup_hostname, @function
 lookup_hostname:
@@ -2737,58 +5115,164 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
+	pushl	%edi
+	pushl	%esi
 	pushl	%ebx
-	subl	$132, %esp
-	.cfi_offset 3, -12
+	subl	$300, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
 	movl	8(%ebp), %eax
-	movl	%eax, -92(%ebp)
+	movl	%eax, -268(%ebp)
 	movl	16(%ebp), %eax
-	movl	%eax, -96(%ebp)
+	movl	%eax, -272(%ebp)
 	movl	20(%ebp), %eax
-	movl	%eax, -100(%ebp)
+	movl	%eax, -276(%ebp)
 	movl	28(%ebp), %eax
-	movl	%eax, -104(%ebp)
+	movl	%eax, -280(%ebp)
+	leal	-248(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC108, 4(%eax)
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movl	%eax, -292(%ebp)
+	movl	$-235802127, (%eax)
+	movl	$-185273340, 4(%eax)
+	movl	$-218959118, 8(%eax)
+	movl	$-218959118, 16(%eax)
+	movl	$-185335296, 20(%eax)
 	movl	%gs:20, %eax
-	movl	%eax, -12(%ebp)
+	movl	%eax, -28(%ebp)
 	xorl	%eax, %eax
+	leal	-152(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L271
+	movl	%eax, (%esp)
+	call	__asan_report_store1
+.L271:
+	leal	-152(%ebp), %eax
+	addl	$31, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L272
+	movl	%eax, (%esp)
+	call	__asan_report_store1
+.L272:
 	movl	$32, 8(%esp)
 	movl	$0, 4(%esp)
-	leal	-56(%ebp), %eax
+	leal	-152(%ebp), %eax
 	movl	%eax, (%esp)
 	call	memset
-	movl	$0, -52(%ebp)
-	movl	$1, -56(%ebp)
-	movl	$1, -48(%ebp)
+	leal	-152(%ebp), %eax
+	addl	$4, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L273
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L273:
+	movl	$0, -148(%ebp)
+	leal	-152(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L274
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L274:
+	movl	$1, -152(%ebp)
+	leal	-152(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L275
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L275:
+	movl	$1, -144(%ebp)
 	movzwl	port, %eax
 	movzwl	%ax, %eax
 	movl	%eax, 12(%esp)
-	movl	$.LC104, 8(%esp)
+	movl	$.LC109, 8(%esp)
 	movl	$10, 4(%esp)
-	leal	-22(%ebp), %eax
+	leal	-88(%ebp), %eax
 	movl	%eax, (%esp)
 	call	snprintf
 	movl	hostname, %eax
-	leal	-76(%ebp), %edx
+	leal	-216(%ebp), %edx
 	movl	%edx, 12(%esp)
-	leal	-56(%ebp), %edx
+	leal	-152(%ebp), %edx
 	movl	%edx, 8(%esp)
-	leal	-22(%ebp), %edx
+	leal	-88(%ebp), %edx
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	getaddrinfo
-	movl	%eax, -60(%ebp)
-	cmpl	$0, -60(%ebp)
-	je	.L164
-	movl	-60(%ebp), %eax
+	movl	%eax, -252(%ebp)
+	cmpl	$0, -252(%ebp)
+	je	.L276
+	movl	-252(%ebp), %eax
 	movl	%eax, (%esp)
 	call	gai_strerror
 	movl	hostname, %edx
 	movl	%eax, 12(%esp)
 	movl	%edx, 8(%esp)
-	movl	$.LC105, 4(%esp)
+	movl	$.LC110, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
-	movl	-60(%ebp), %eax
+	movl	-252(%ebp), %eax
 	movl	%eax, (%esp)
 	call	gai_strerror
 	movl	hostname, %ebx
@@ -2797,140 +5281,631 @@
 	movl	%eax, 16(%esp)
 	movl	%ebx, 12(%esp)
 	movl	%ecx, 8(%esp)
-	movl	$.LC106, 4(%esp)
+	movl	$.LC111, 4(%esp)
 	movl	%edx, (%esp)
 	call	fprintf
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L164:
-	movl	$0, -68(%ebp)
-	movl	$0, -64(%ebp)
-	movl	-76(%ebp), %eax
-	movl	%eax, -72(%ebp)
-	jmp	.L165
-.L171:
-	movl	-72(%ebp), %eax
+.L276:
+	movl	$0, -260(%ebp)
+	movl	$0, -256(%ebp)
+	movl	-216(%ebp), %eax
+	movl	%eax, -264(%ebp)
+	jmp	.L277
+.L285:
+	movl	-264(%ebp), %eax
+	addl	$4, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L278
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L278:
+	movl	-264(%ebp), %eax
 	movl	4(%eax), %eax
 	cmpl	$2, %eax
-	je	.L167
+	je	.L280
 	cmpl	$10, %eax
-	jne	.L166
-	cmpl	$0, -68(%ebp)
-	jne	.L169
-	movl	-72(%ebp), %eax
-	movl	%eax, -68(%ebp)
-	jmp	.L166
-.L169:
-	jmp	.L166
-.L167:
-	cmpl	$0, -64(%ebp)
-	jne	.L170
-	movl	-72(%ebp), %eax
-	movl	%eax, -64(%ebp)
-	jmp	.L179
-.L170:
-.L179:
+	jne	.L279
+	cmpl	$0, -260(%ebp)
+	jne	.L282
+	movl	-264(%ebp), %eax
+	movl	%eax, -260(%ebp)
+	jmp	.L279
+.L282:
+	jmp	.L279
+.L280:
+	cmpl	$0, -256(%ebp)
+	jne	.L283
+	movl	-264(%ebp), %eax
+	movl	%eax, -256(%ebp)
+	jmp	.L315
+.L283:
+.L315:
 	nop
-.L166:
-	movl	-72(%ebp), %eax
+.L279:
+	movl	-264(%ebp), %eax
+	addl	$28, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L284
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L284:
+	movl	-264(%ebp), %eax
 	movl	28(%eax), %eax
-	movl	%eax, -72(%ebp)
-.L165:
-	cmpl	$0, -72(%ebp)
-	jne	.L171
-	cmpl	$0, -68(%ebp)
-	jne	.L172
-	movl	-104(%ebp), %eax
+	movl	%eax, -264(%ebp)
+.L277:
+	cmpl	$0, -264(%ebp)
+	jne	.L285
+	cmpl	$0, -260(%ebp)
+	jne	.L286
+	movl	-280(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L287
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L287:
+	movl	-280(%ebp), %eax
 	movl	$0, (%eax)
-	jmp	.L173
-.L172:
-	movl	-68(%ebp), %eax
+	jmp	.L288
+.L286:
+	movl	-260(%ebp), %eax
+	addl	$16, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L289
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L289:
+	movl	-260(%ebp), %eax
 	movl	16(%eax), %eax
 	cmpl	24(%ebp), %eax
-	jbe	.L174
-	movl	-68(%ebp), %eax
+	jbe	.L290
+	movl	-260(%ebp), %eax
 	movl	16(%eax), %edx
 	movl	hostname, %eax
 	movl	%edx, 16(%esp)
 	movl	24(%ebp), %edx
 	movl	%edx, 12(%esp)
 	movl	%eax, 8(%esp)
-	movl	$.LC107, 4(%esp)
+	movl	$.LC112, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L174:
+.L290:
+	cmpl	$0, 24(%ebp)
+	je	.L291
+	movl	-276(%ebp), %ebx
+	movl	%ebx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %eax
+	testb	%al, %al
+	setne	%cl
+	movl	%ebx, %edx
+	andl	$7, %edx
+	cmpb	%al, %dl
+	setge	%al
+	movl	%ecx, %esi
+	andl	%eax, %esi
+	movl	24(%ebp), %eax
+	leal	-1(%eax), %edx
+	movl	-276(%ebp), %eax
+	addl	%edx, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %edi
+	movl	%edx, %eax
+	andl	$7, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L292
+	movl	%edx, (%esp)
+	call	__asan_report_store1
+.L292:
+	movl	%esi, %eax
+	testb	%al, %al
+	je	.L291
+	movl	%ebx, (%esp)
+	call	__asan_report_store1
+.L291:
 	movl	24(%ebp), %eax
 	movl	%eax, 8(%esp)
 	movl	$0, 4(%esp)
-	movl	-100(%ebp), %eax
+	movl	-276(%ebp), %eax
 	movl	%eax, (%esp)
 	call	memset
-	movl	-68(%ebp), %eax
-	movl	16(%eax), %edx
-	movl	-68(%ebp), %eax
+	movl	-260(%ebp), %eax
+	addl	$16, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L293
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L293:
+	movl	-260(%ebp), %eax
+	movl	16(%eax), %esi
+	movl	-260(%ebp), %eax
+	addl	$20, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L294
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L294:
+	movl	-260(%ebp), %eax
 	movl	20(%eax), %eax
-	movl	%edx, 8(%esp)
+	movl	%eax, %edi
+	movl	%edi, -284(%ebp)
+	testl	%esi, %esi
+	je	.L295
+	movl	%edi, %ebx
+	movl	%ebx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ebx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%eax, %ecx
+	movb	%cl, -285(%ebp)
+	leal	-1(%esi), %eax
+	addl	%edi, %eax
+	movl	%eax, %ecx
+	movl	%ecx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%al
+	movl	%eax, %edi
+	movl	%ecx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L296
+	movl	%ecx, (%esp)
+	call	__asan_report_load1
+.L296:
+	cmpb	$0, -285(%ebp)
+	je	.L295
+	movl	%ebx, (%esp)
+	call	__asan_report_load1
+.L295:
+	testl	%esi, %esi
+	je	.L297
+	movl	-276(%ebp), %ebx
+	movl	%ebx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ebx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%eax, %ecx
+	movb	%cl, -285(%ebp)
+	leal	-1(%esi), %eax
+	movl	-276(%ebp), %edx
+	addl	%edx, %eax
+	movl	%eax, %ecx
+	movl	%ecx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%al
+	movl	%eax, %edi
+	movl	%ecx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L298
+	movl	%ecx, (%esp)
+	call	__asan_report_store1
+.L298:
+	cmpb	$0, -285(%ebp)
+	je	.L297
+	movl	%ebx, (%esp)
+	call	__asan_report_store1
+.L297:
+	movl	%esi, 8(%esp)
+	movl	-284(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-100(%ebp), %eax
+	movl	-276(%ebp), %eax
 	movl	%eax, (%esp)
 	call	memmove
-	movl	-104(%ebp), %eax
+	movl	-280(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L299
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L299:
+	movl	-280(%ebp), %eax
 	movl	$1, (%eax)
-.L173:
-	cmpl	$0, -64(%ebp)
-	jne	.L175
-	movl	-96(%ebp), %eax
+.L288:
+	cmpl	$0, -256(%ebp)
+	jne	.L300
+	movl	-272(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L301
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L301:
+	movl	-272(%ebp), %eax
 	movl	$0, (%eax)
-	jmp	.L176
-.L175:
-	movl	-64(%ebp), %eax
+	jmp	.L302
+.L300:
+	movl	-256(%ebp), %eax
+	addl	$16, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L303
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L303:
+	movl	-256(%ebp), %eax
 	movl	16(%eax), %eax
 	cmpl	12(%ebp), %eax
-	jbe	.L177
-	movl	-64(%ebp), %eax
+	jbe	.L304
+	movl	-256(%ebp), %eax
 	movl	16(%eax), %edx
 	movl	hostname, %eax
 	movl	%edx, 16(%esp)
 	movl	12(%ebp), %edx
 	movl	%edx, 12(%esp)
 	movl	%eax, 8(%esp)
-	movl	$.LC107, 4(%esp)
+	movl	$.LC112, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L177:
+.L304:
+	cmpl	$0, 12(%ebp)
+	je	.L305
+	movl	-268(%ebp), %ebx
+	movl	%ebx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %eax
+	testb	%al, %al
+	setne	%cl
+	movl	%ebx, %edx
+	andl	$7, %edx
+	cmpb	%al, %dl
+	setge	%al
+	movl	%ecx, %esi
+	andl	%eax, %esi
+	movl	12(%ebp), %eax
+	leal	-1(%eax), %edx
+	movl	-268(%ebp), %eax
+	addl	%edx, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %edi
+	movl	%edx, %eax
+	andl	$7, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L306
+	movl	%edx, (%esp)
+	call	__asan_report_store1
+.L306:
+	movl	%esi, %eax
+	testb	%al, %al
+	je	.L305
+	movl	%ebx, (%esp)
+	call	__asan_report_store1
+.L305:
 	movl	12(%ebp), %eax
 	movl	%eax, 8(%esp)
 	movl	$0, 4(%esp)
-	movl	-92(%ebp), %eax
+	movl	-268(%ebp), %eax
 	movl	%eax, (%esp)
 	call	memset
-	movl	-64(%ebp), %eax
-	movl	16(%eax), %edx
-	movl	-64(%ebp), %eax
+	movl	-256(%ebp), %eax
+	addl	$16, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L307
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L307:
+	movl	-256(%ebp), %eax
+	movl	16(%eax), %esi
+	movl	-256(%ebp), %eax
+	addl	$20, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L308
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L308:
+	movl	-256(%ebp), %eax
 	movl	20(%eax), %eax
-	movl	%edx, 8(%esp)
+	movl	%eax, %edi
+	movl	%edi, -284(%ebp)
+	testl	%esi, %esi
+	je	.L309
+	movl	%edi, %ebx
+	movl	%ebx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ebx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%eax, %ecx
+	movb	%cl, -285(%ebp)
+	leal	-1(%esi), %eax
+	addl	%edi, %eax
+	movl	%eax, %ecx
+	movl	%ecx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%al
+	movl	%eax, %edi
+	movl	%ecx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L310
+	movl	%ecx, (%esp)
+	call	__asan_report_load1
+.L310:
+	cmpb	$0, -285(%ebp)
+	je	.L309
+	movl	%ebx, (%esp)
+	call	__asan_report_load1
+.L309:
+	testl	%esi, %esi
+	je	.L311
+	movl	-268(%ebp), %ebx
+	movl	%ebx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ebx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%eax, %ecx
+	movb	%cl, -285(%ebp)
+	leal	-1(%esi), %eax
+	movl	-268(%ebp), %edx
+	addl	%edx, %eax
+	movl	%eax, %ecx
+	movl	%ecx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%al
+	movl	%eax, %edi
+	movl	%ecx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L312
+	movl	%ecx, (%esp)
+	call	__asan_report_store1
+.L312:
+	cmpb	$0, -285(%ebp)
+	je	.L311
+	movl	%ebx, (%esp)
+	call	__asan_report_store1
+.L311:
+	movl	%esi, 8(%esp)
+	movl	-284(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-92(%ebp), %eax
+	movl	-268(%ebp), %eax
 	movl	%eax, (%esp)
 	call	memmove
-	movl	-96(%ebp), %eax
+	movl	-272(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L313
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L313:
+	movl	-272(%ebp), %eax
 	movl	$1, (%eax)
-.L176:
-	movl	-76(%ebp), %eax
+.L302:
+	movl	-216(%ebp), %eax
 	movl	%eax, (%esp)
 	call	freeaddrinfo
-	movl	-12(%ebp), %eax
+	movl	-292(%ebp), %eax
+	movl	$0, (%eax)
+	movl	$0, 4(%eax)
+	movl	$0, 8(%eax)
+	movl	$0, 16(%eax)
+	movl	$0, 20(%eax)
+	movl	-28(%ebp), %eax
 	xorl	%gs:20, %eax
-	je	.L178
+	je	.L314
 	call	__stack_chk_fail
-.L178:
-	addl	$132, %esp
+.L314:
+	addl	$300, %esp
 	popl	%ebx
 	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
 	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
@@ -2939,24 +5914,37 @@
 .LFE14:
 	.size	lookup_hostname, .-lookup_hostname
 	.section	.rodata
-.LC108:
+	.align 4
+.LC113:
+	.string	"read_throttlefile 5 32 4 9 max_limit 96 4 9 min_limit 160 8 2 tv 224 5000 3 buf 5280 5000 7 pattern "
+	.align 32
+.LC114:
 	.string	" %4900[^ \t] %ld-%ld"
-.LC109:
+	.zero	44
+	.align 32
+.LC115:
 	.string	" %4900[^ \t] %ld"
-	.align 4
-.LC110:
+	.zero	48
+	.align 32
+.LC116:
 	.string	"unparsable line in %.80s - %.80s"
-	.align 4
-.LC111:
+	.zero	63
+	.align 32
+.LC117:
 	.string	"%s: unparsable line in %.80s - %.80s\n"
-.LC112:
+	.zero	58
+	.align 32
+.LC118:
 	.string	"|/"
-	.align 4
-.LC113:
+	.zero	61
+	.align 32
+.LC119:
 	.string	"out of memory allocating a throttletab"
-	.align 4
-.LC114:
+	.zero	57
+	.align 32
+.LC120:
 	.string	"%s: out of memory allocating a throttletab\n"
+	.zero	52
 	.text
 	.type	read_throttlefile, @function
 read_throttlefile:
@@ -2967,166 +5955,353 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
+	pushl	%edi
+	pushl	%esi
 	pushl	%ebx
-	subl	$10068, %esp
-	.cfi_offset 3, -12
+	subl	$10396, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
 	movl	8(%ebp), %eax
-	movl	%eax, -10044(%ebp)
+	movl	%eax, -10380(%ebp)
+	leal	-10360(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC113, 4(%eax)
+	shrl	$3, %eax
+	leal	536870912(%eax), %esi
+	movl	$-235802127, (%esi)
+	movl	$-185273340, 4(%esi)
+	movl	$-218959118, 8(%esi)
+	movl	$-185273340, 12(%esi)
+	movl	$-218959118, 16(%esi)
+	movl	$-185273344, 20(%esi)
+	movl	$-218959118, 24(%esi)
+	movl	$-185273344, 652(%esi)
+	movl	$-218959118, 656(%esi)
+	movl	$-185273344, 1284(%esi)
 	movl	%gs:20, %eax
-	movl	%eax, -12(%ebp)
+	movl	%eax, -28(%ebp)
 	xorl	%eax, %eax
-	movl	$.LC71, 4(%esp)
-	movl	-10044(%ebp), %eax
+	movl	$.LC75, 4(%esp)
+	movl	-10380(%ebp), %eax
 	movl	%eax, (%esp)
 	call	fopen
-	movl	%eax, -10028(%ebp)
-	cmpl	$0, -10028(%ebp)
-	jne	.L181
-	movl	-10044(%ebp), %eax
+	movl	%eax, -10368(%ebp)
+	cmpl	$0, -10368(%ebp)
+	jne	.L323
+	movl	-10380(%ebp), %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC13, 4(%esp)
+	movl	$.LC15, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
-	movl	-10044(%ebp), %eax
+	movl	-10380(%ebp), %eax
 	movl	%eax, (%esp)
 	call	perror
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L181:
+.L323:
 	movl	$0, 4(%esp)
-	leal	-10020(%ebp), %eax
+	leal	-10200(%ebp), %eax
 	movl	%eax, (%esp)
 	call	gettimeofday
-	jmp	.L182
-.L196:
+	jmp	.L324
+.L353:
 	movl	$35, 4(%esp)
-	leal	-10012(%ebp), %eax
+	leal	-10136(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strchr
-	movl	%eax, -10024(%ebp)
-	cmpl	$0, -10024(%ebp)
-	je	.L183
-	movl	-10024(%ebp), %eax
+	movl	%eax, -10364(%ebp)
+	cmpl	$0, -10364(%ebp)
+	je	.L325
+	movl	-10364(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L326
+	movl	%eax, (%esp)
+	call	__asan_report_store1
+.L326:
+	movl	-10364(%ebp), %eax
 	movb	$0, (%eax)
-.L183:
-	leal	-10012(%ebp), %eax
+.L325:
+	leal	-10136(%ebp), %ebx
+	movl	%ebx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %edi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L327
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L327:
+	leal	-10136(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strlen
-	movl	%eax, -10032(%ebp)
-	jmp	.L184
-.L186:
-	subl	$1, -10032(%ebp)
-	leal	-10012(%ebp), %edx
-	movl	-10032(%ebp), %eax
+	movl	%eax, %edx
+	leal	(%ebx,%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L328
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L328:
+	movl	%edx, -10372(%ebp)
+	jmp	.L329
+.L333:
+	subl	$1, -10372(%ebp)
+	leal	-10136(%ebp), %edx
+	movl	-10372(%ebp), %eax
+	addl	%edx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L330
+	movl	%eax, (%esp)
+	call	__asan_report_store1
+.L330:
+	leal	-10136(%ebp), %edx
+	movl	-10372(%ebp), %eax
 	addl	%edx, %eax
 	movb	$0, (%eax)
-.L184:
-	cmpl	$0, -10032(%ebp)
-	jle	.L185
-	movl	-10032(%ebp), %eax
-	subl	$1, %eax
-	movzbl	-10012(%ebp,%eax), %eax
+.L329:
+	cmpl	$0, -10372(%ebp)
+	jle	.L331
+	movl	-10372(%ebp), %eax
+	leal	-1(%eax), %ecx
+	leal	-10136(%ebp), %eax
+	addl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L332
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L332:
+	movzbl	-10136(%ebp,%ecx), %eax
 	cmpb	$32, %al
-	je	.L186
-	movl	-10032(%ebp), %eax
-	subl	$1, %eax
-	movzbl	-10012(%ebp,%eax), %eax
+	je	.L333
+	movl	-10372(%ebp), %eax
+	leal	-1(%eax), %ecx
+	leal	-10136(%ebp), %eax
+	addl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L334
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L334:
+	movzbl	-10136(%ebp,%ecx), %eax
 	cmpb	$9, %al
-	je	.L186
-	movl	-10032(%ebp), %eax
-	subl	$1, %eax
-	movzbl	-10012(%ebp,%eax), %eax
+	je	.L333
+	movl	-10372(%ebp), %eax
+	leal	-1(%eax), %ecx
+	leal	-10136(%ebp), %eax
+	addl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L335
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L335:
+	movzbl	-10136(%ebp,%ecx), %eax
 	cmpb	$10, %al
-	je	.L186
-	movl	-10032(%ebp), %eax
-	subl	$1, %eax
-	movzbl	-10012(%ebp,%eax), %eax
+	je	.L333
+	movl	-10372(%ebp), %eax
+	leal	-1(%eax), %ecx
+	leal	-10136(%ebp), %eax
+	addl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L336
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L336:
+	movzbl	-10136(%ebp,%ecx), %eax
 	cmpb	$13, %al
-	je	.L186
-.L185:
-	cmpl	$0, -10032(%ebp)
-	jne	.L187
-	jmp	.L182
-.L187:
-	leal	-10040(%ebp), %eax
+	je	.L333
+.L331:
+	cmpl	$0, -10372(%ebp)
+	jne	.L337
+	jmp	.L324
+.L337:
+	leal	-10328(%ebp), %eax
 	movl	%eax, 16(%esp)
-	leal	-10036(%ebp), %eax
+	leal	-10264(%ebp), %eax
 	movl	%eax, 12(%esp)
-	leal	-5012(%ebp), %eax
+	leal	-5080(%ebp), %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC108, 4(%esp)
-	leal	-10012(%ebp), %eax
+	movl	$.LC114, 4(%esp)
+	leal	-10136(%ebp), %eax
 	movl	%eax, (%esp)
 	call	__isoc99_sscanf
 	cmpl	$3, %eax
-	je	.L188
-	leal	-10040(%ebp), %eax
+	je	.L338
+	leal	-10328(%ebp), %eax
 	movl	%eax, 12(%esp)
-	leal	-5012(%ebp), %eax
+	leal	-5080(%ebp), %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC109, 4(%esp)
-	leal	-10012(%ebp), %eax
+	movl	$.LC115, 4(%esp)
+	leal	-10136(%ebp), %eax
 	movl	%eax, (%esp)
 	call	__isoc99_sscanf
 	cmpl	$2, %eax
-	jne	.L189
-	movl	$0, -10036(%ebp)
-	jmp	.L188
-.L189:
-	leal	-10012(%ebp), %eax
+	jne	.L339
+	movl	$0, -10264(%ebp)
+	jmp	.L338
+.L339:
+	leal	-10136(%ebp), %eax
 	movl	%eax, 12(%esp)
-	movl	-10044(%ebp), %eax
+	movl	-10380(%ebp), %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC110, 4(%esp)
+	movl	$.LC116, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
 	movl	argv0, %edx
 	movl	stderr, %eax
-	leal	-10012(%ebp), %ecx
+	leal	-10136(%ebp), %ecx
 	movl	%ecx, 16(%esp)
-	movl	-10044(%ebp), %ecx
+	movl	-10380(%ebp), %ecx
 	movl	%ecx, 12(%esp)
 	movl	%edx, 8(%esp)
-	movl	$.LC111, 4(%esp)
+	movl	$.LC117, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
-	jmp	.L182
-.L188:
-	movzbl	-5012(%ebp), %eax
+	jmp	.L324
+.L338:
+	leal	-5080(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L340
+	movl	%eax, (%esp)
+	call	__asan_report_load1
+.L340:
+	movzbl	-5080(%ebp), %eax
 	cmpb	$47, %al
-	jne	.L190
-	leal	-5012(%ebp), %eax
+	jne	.L341
+	leal	-5080(%ebp), %eax
 	addl	$1, %eax
 	movl	%eax, 4(%esp)
-	leal	-5012(%ebp), %eax
+	leal	-5080(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strcpy
-	jmp	.L191
-.L190:
-	jmp	.L191
-.L192:
-	movl	-10024(%ebp), %eax
+	jmp	.L342
+.L341:
+	jmp	.L342
+.L343:
+	movl	-10364(%ebp), %eax
 	leal	2(%eax), %edx
-	movl	-10024(%ebp), %eax
+	movl	-10364(%ebp), %eax
 	addl	$1, %eax
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	strcpy
-.L191:
-	movl	$.LC112, 4(%esp)
-	leal	-5012(%ebp), %eax
+.L342:
+	movl	$.LC118, 4(%esp)
+	leal	-5080(%ebp), %eax
 	movl	%eax, (%esp)
 	call	strstr
-	movl	%eax, -10024(%ebp)
-	cmpl	$0, -10024(%ebp)
-	jne	.L192
+	movl	%eax, -10364(%ebp)
+	cmpl	$0, -10364(%ebp)
+	jne	.L343
 	movl	numthrottles, %edx
 	movl	maxthrottles, %eax
 	cmpl	%eax, %edx
-	jl	.L193
+	jl	.L344
 	movl	maxthrottles, %eax
 	testl	%eax, %eax
-	jne	.L194
+	jne	.L345
 	movl	$100, maxthrottles
 	movl	maxthrottles, %eax
 	movl	%eax, %edx
@@ -3137,8 +6312,8 @@
 	movl	%eax, (%esp)
 	call	malloc
 	movl	%eax, throttles
-	jmp	.L195
-.L194:
+	jmp	.L346
+.L345:
 	movl	maxthrottles, %eax
 	addl	%eax, %eax
 	movl	%eax, maxthrottles
@@ -3154,22 +6329,23 @@
 	movl	%eax, (%esp)
 	call	realloc
 	movl	%eax, throttles
-.L195:
+.L346:
 	movl	throttles, %eax
 	testl	%eax, %eax
-	jne	.L193
-	movl	$.LC113, 4(%esp)
+	jne	.L344
+	movl	$.LC119, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
 	movl	argv0, %edx
 	movl	stderr, %eax
 	movl	%edx, 8(%esp)
-	movl	$.LC114, 4(%esp)
+	movl	$.LC120, 4(%esp)
 	movl	%eax, (%esp)
 	call	fprintf
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L193:
+.L344:
 	movl	throttles, %ecx
 	movl	numthrottles, %eax
 	movl	%eax, %edx
@@ -3178,10 +6354,30 @@
 	addl	%edx, %eax
 	sall	$3, %eax
 	leal	(%ecx,%eax), %ebx
-	leal	-5012(%ebp), %eax
+	leal	-5080(%ebp), %eax
 	movl	%eax, (%esp)
 	call	e_strdup
-	movl	%eax, (%ebx)
+	movl	%eax, %edi
+	movl	%ebx, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	-10381(%ebp)
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andb	-10381(%ebp), %al
+	testb	%al, %al
+	je	.L347
+	movl	%edx, (%esp)
+	call	__asan_report_store4
+.L347:
+	movl	%edi, (%ebx)
 	movl	throttles, %ecx
 	movl	numthrottles, %eax
 	movl	%eax, %edx
@@ -3189,9 +6385,28 @@
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	leal	(%ecx,%eax), %edx
-	movl	-10040(%ebp), %eax
-	movl	%eax, 4(%edx)
+	addl	%eax, %ecx
+	movl	-10328(%ebp), %edi
+	leal	4(%ecx), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ebx
+	testb	%bl, %bl
+	setne	-10381(%ebp)
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%bl, %al
+	setge	%al
+	andb	-10381(%ebp), %al
+	testb	%al, %al
+	je	.L348
+	movl	%edx, (%esp)
+	call	__asan_report_store4
+.L348:
+	movl	%edi, 4(%ecx)
 	movl	throttles, %ecx
 	movl	numthrottles, %eax
 	movl	%eax, %edx
@@ -3199,9 +6414,28 @@
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	leal	(%ecx,%eax), %edx
-	movl	-10036(%ebp), %eax
-	movl	%eax, 8(%edx)
+	addl	%eax, %ecx
+	movl	-10264(%ebp), %edi
+	leal	8(%ecx), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ebx
+	testb	%bl, %bl
+	setne	-10381(%ebp)
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%bl, %al
+	setge	%al
+	andb	-10381(%ebp), %al
+	testb	%al, %al
+	je	.L349
+	movl	%edx, (%esp)
+	call	__asan_report_store4
+.L349:
+	movl	%edi, 8(%ecx)
 	movl	throttles, %ecx
 	movl	numthrottles, %eax
 	movl	%eax, %edx
@@ -3209,8 +6443,27 @@
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	$0, 12(%eax)
+	leal	(%ecx,%eax), %edx
+	leal	12(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L350
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L350:
+	movl	$0, 12(%edx)
 	movl	throttles, %ecx
 	movl	numthrottles, %eax
 	movl	%eax, %edx
@@ -3218,8 +6471,27 @@
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	$0, 16(%eax)
+	leal	(%ecx,%eax), %edx
+	leal	16(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L351
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L351:
+	movl	$0, 16(%edx)
 	movl	throttles, %ecx
 	movl	numthrottles, %eax
 	movl	%eax, %edx
@@ -3227,31 +6499,98 @@
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	$0, 20(%eax)
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L352
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L352:
+	movl	$0, 20(%edx)
 	movl	numthrottles, %eax
 	addl	$1, %eax
 	movl	%eax, numthrottles
-.L182:
-	movl	-10028(%ebp), %eax
+.L324:
+	movl	-10368(%ebp), %eax
 	movl	%eax, 8(%esp)
 	movl	$5000, 4(%esp)
-	leal	-10012(%ebp), %eax
+	leal	-10136(%ebp), %eax
 	movl	%eax, (%esp)
 	call	fgets
 	testl	%eax, %eax
-	jne	.L196
-	movl	-10028(%ebp), %eax
+	jne	.L353
+	movl	-10368(%ebp), %eax
 	movl	%eax, (%esp)
 	call	fclose
-	movl	-12(%ebp), %eax
+	movl	%esi, %eax
+	movl	$28, %edx
+	movl	$0, %ecx
+	movl	%eax, %ebx
+	andl	$1, %ebx
+	testl	%ebx, %ebx
+	je	.L316
+	movb	%cl, (%eax)
+	addl	$1, %eax
+	subl	$1, %edx
+.L316:
+	movl	%eax, %ebx
+	andl	$2, %ebx
+	testl	%ebx, %ebx
+	je	.L317
+	movw	%cx, (%eax)
+	addl	$2, %eax
+	subl	$2, %edx
+.L317:
+	movl	%edx, %edi
+	andl	$-4, %edi
+	movl	$0, %ebx
+.L318:
+	movl	%ecx, (%eax,%ebx)
+	addl	$4, %ebx
+	cmpl	%edi, %ebx
+	jb	.L318
+	addl	%ebx, %eax
+	movl	%edx, %ebx
+	andl	$2, %ebx
+	testl	%ebx, %ebx
+	je	.L320
+	movw	%cx, (%eax)
+	addl	$2, %eax
+.L320:
+	andl	$1, %edx
+	testl	%edx, %edx
+	je	.L321
+	movb	%cl, (%eax)
+	addl	$1, %eax
+.L321:
+	movl	$0, 652(%esi)
+	movl	$0, 656(%esi)
+	movl	$0, 1284(%esi)
+	movl	-28(%ebp), %eax
 	xorl	%gs:20, %eax
-	je	.L197
+	je	.L354
 	call	__stack_chk_fail
-.L197:
-	addl	$10068, %esp
+.L354:
+	addl	$10396, %esp
 	popl	%ebx
 	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
 	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
@@ -3259,6 +6598,10 @@
 	.cfi_endproc
 .LFE15:
 	.size	read_throttlefile, .-read_throttlefile
+	.section	.rodata
+.LC121:
+	.string	"shut_down 1 32 8 2 tv "
+	.text
 	.type	shut_down, @function
 shut_down:
 .LFB16:
@@ -3268,115 +6611,290 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$40, %esp
+	pushl	%edi
+	pushl	%esi
+	pushl	%ebx
+	subl	$140, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
+	leal	-120(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC121, 4(%eax)
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movl	%eax, -140(%ebp)
+	movl	$-235802127, (%eax)
+	movl	$-185273344, 4(%eax)
+	movl	$-202116109, 8(%eax)
 	movl	$0, 4(%esp)
-	leal	-16(%ebp), %eax
+	leal	-88(%ebp), %eax
 	movl	%eax, (%esp)
 	call	gettimeofday
-	leal	-16(%ebp), %eax
+	leal	-88(%ebp), %eax
 	movl	%eax, (%esp)
 	call	logstats
-	movl	$0, -24(%ebp)
-	jmp	.L199
-.L202:
+	movl	$0, -128(%ebp)
+	jmp	.L356
+.L365:
 	movl	connects, %ecx
-	movl	-24(%ebp), %edx
+	movl	-128(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	(%eax), %eax
+	addl	%eax, %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L357
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L357:
+	movl	(%ecx), %eax
 	testl	%eax, %eax
-	je	.L200
+	je	.L358
 	movl	connects, %ecx
-	movl	-24(%ebp), %edx
+	movl	-128(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	8(%eax), %eax
-	leal	-16(%ebp), %edx
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L359
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L359:
+	movl	8(%edx), %eax
+	leal	-88(%ebp), %edx
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	httpd_close_conn
-.L200:
+.L358:
 	movl	connects, %ecx
-	movl	-24(%ebp), %edx
+	movl	-128(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	8(%eax), %eax
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L360
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L360:
+	movl	8(%edx), %eax
 	testl	%eax, %eax
-	je	.L201
+	je	.L361
 	movl	connects, %ecx
-	movl	-24(%ebp), %edx
+	movl	-128(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	8(%eax), %eax
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L362
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L362:
+	movl	8(%edx), %eax
 	movl	%eax, (%esp)
 	call	httpd_destroy_conn
 	movl	connects, %ecx
-	movl	-24(%ebp), %edx
+	movl	-128(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	8(%eax), %eax
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L363
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L363:
+	movl	8(%edx), %eax
 	movl	%eax, (%esp)
 	call	free
 	movl	httpd_conn_count, %eax
 	subl	$1, %eax
 	movl	%eax, httpd_conn_count
 	movl	connects, %ecx
-	movl	-24(%ebp), %edx
+	movl	-128(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	$0, 8(%eax)
-.L201:
-	addl	$1, -24(%ebp)
-.L199:
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L364
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L364:
+	movl	$0, 8(%edx)
+.L361:
+	addl	$1, -128(%ebp)
+.L356:
 	movl	max_connects, %eax
-	cmpl	%eax, -24(%ebp)
-	jl	.L202
+	cmpl	%eax, -128(%ebp)
+	jl	.L365
 	movl	hs, %eax
 	testl	%eax, %eax
-	je	.L203
+	je	.L366
 	movl	hs, %eax
-	movl	%eax, -20(%ebp)
+	movl	%eax, -124(%ebp)
 	movl	$0, hs
-	movl	-20(%ebp), %eax
+	movl	-124(%ebp), %eax
+	addl	$40, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L367
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L367:
+	movl	-124(%ebp), %eax
 	movl	40(%eax), %eax
 	cmpl	$-1, %eax
-	je	.L204
-	movl	-20(%ebp), %eax
+	je	.L368
+	movl	-124(%ebp), %eax
 	movl	40(%eax), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_del_fd
-.L204:
-	movl	-20(%ebp), %eax
+.L368:
+	movl	-124(%ebp), %eax
+	addl	$44, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L369
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L369:
+	movl	-124(%ebp), %eax
 	movl	44(%eax), %eax
 	cmpl	$-1, %eax
-	je	.L205
-	movl	-20(%ebp), %eax
+	je	.L370
+	movl	-124(%ebp), %eax
 	movl	44(%eax), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_del_fd
-.L205:
-	movl	-20(%ebp), %eax
+.L370:
+	movl	-124(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_terminate
-.L203:
+.L366:
 	call	mmc_destroy
 	call	tmr_destroy
 	movl	connects, %eax
@@ -3384,12 +6902,23 @@
 	call	free
 	movl	throttles, %eax
 	testl	%eax, %eax
-	je	.L198
+	je	.L355
 	movl	throttles, %eax
 	movl	%eax, (%esp)
 	call	free
-.L198:
-	leave
+.L355:
+	movl	-140(%ebp), %eax
+	movl	$0, (%eax)
+	movl	$0, 4(%eax)
+	movl	$0, 8(%eax)
+	addl	$140, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -3397,14 +6926,21 @@
 .LFE16:
 	.size	shut_down, .-shut_down
 	.section	.rodata
-.LC115:
-	.string	"too many connections!"
 	.align 4
-.LC116:
+.LC122:
+	.string	"handle_newconnect 1 32 4 11 client_data "
+	.align 32
+.LC123:
+	.string	"too many connections!"
+	.zero	42
+	.align 32
+.LC124:
 	.string	"the connects free list is messed up"
-	.align 4
-.LC117:
+	.zero	60
+	.align 32
+.LC125:
 	.string	"out of memory allocating an httpd_conn"
+	.zero	57
 	.text
 	.type	handle_newconnect, @function
 handle_newconnect:
@@ -3415,24 +6951,39 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$40, %esp
-.L218:
-	movl	num_connects, %edx
+	pushl	%edi
+	pushl	%esi
+	pushl	%ebx
+	subl	$140, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
+	leal	-120(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC122, 4(%eax)
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movl	%eax, -140(%ebp)
+	movl	$-235802127, (%eax)
+	movl	$-185273340, 4(%eax)
+	movl	$-202116109, 8(%eax)
+.L401:
+	movl	num_connects, %edx
 	movl	max_connects, %eax
 	cmpl	%eax, %edx
-	jl	.L208
-	movl	$.LC115, 4(%esp)
+	jl	.L373
+	movl	$.LC123, 4(%esp)
 	movl	$4, (%esp)
 	call	syslog
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	tmr_run
 	movl	$0, %eax
-	jmp	.L219
-.L208:
+	jmp	.L402
+.L373:
 	movl	first_free_connect, %eax
 	cmpl	$-1, %eax
-	je	.L210
+	je	.L375
 	movl	connects, %ecx
 	movl	first_free_connect, %eax
 	movl	%eax, %edx
@@ -3440,17 +6991,38 @@
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
-	addl	%ecx, %eax
-	movl	(%eax), %eax
+	addl	%eax, %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L376
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L376:
+	movl	(%ecx), %eax
 	testl	%eax, %eax
-	je	.L211
-.L210:
-	movl	$.LC116, 4(%esp)
+	je	.L377
+.L375:
+	movl	$.LC124, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L211:
+.L377:
 	movl	connects, %ecx
 	movl	first_free_connect, %eax
 	movl	%eax, %edx
@@ -3459,34 +7031,115 @@
 	addl	%edx, %eax
 	sall	$5, %eax
 	addl	%ecx, %eax
-	movl	%eax, -12(%ebp)
-	movl	-12(%ebp), %eax
+	movl	%eax, -124(%ebp)
+	movl	-124(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L378
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L378:
+	movl	-124(%ebp), %eax
 	movl	8(%eax), %eax
 	testl	%eax, %eax
-	jne	.L212
+	jne	.L379
 	movl	$456, (%esp)
 	call	malloc
 	movl	%eax, %edx
-	movl	-12(%ebp), %eax
+	movl	-124(%ebp), %eax
 	movl	%edx, 8(%eax)
-	movl	-12(%ebp), %eax
+	movl	-124(%ebp), %eax
 	movl	8(%eax), %eax
 	testl	%eax, %eax
-	jne	.L213
-	movl	$.LC117, 4(%esp)
+	jne	.L380
+	movl	$.LC125, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L213:
-	movl	-12(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	$0, (%eax)
+.L380:
+	movl	-124(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L381
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L381:
+	movl	-124(%ebp), %eax
+	movl	8(%eax), %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L382
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L382:
+	movl	$0, (%edx)
 	movl	httpd_conn_count, %eax
 	addl	$1, %eax
 	movl	%eax, httpd_conn_count
-.L212:
-	movl	-12(%ebp), %eax
+.L379:
+	movl	-124(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L383
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L383:
+	movl	-124(%ebp), %eax
 	movl	8(%eax), %edx
 	movl	hs, %eax
 	movl	%edx, 8(%esp)
@@ -3495,54 +7148,312 @@
 	movl	%eax, (%esp)
 	call	httpd_get_conn
 	testl	%eax, %eax
-	je	.L215
+	je	.L385
 	cmpl	$2, %eax
-	je	.L216
-	jmp	.L220
-.L215:
+	je	.L386
+	jmp	.L403
+.L385:
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	tmr_run
 	movl	$0, %eax
-	jmp	.L219
-.L216:
+	jmp	.L402
+.L386:
 	movl	$1, %eax
-	jmp	.L219
-.L220:
-	movl	-12(%ebp), %eax
+	jmp	.L402
+.L403:
+	movl	-124(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L387
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L387:
+	movl	-124(%ebp), %eax
 	movl	$1, (%eax)
-	movl	-12(%ebp), %eax
+	movl	-124(%ebp), %eax
+	addl	$4, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L388
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L388:
+	movl	-124(%ebp), %eax
 	movl	4(%eax), %eax
 	movl	%eax, first_free_connect
-	movl	-12(%ebp), %eax
+	movl	-124(%ebp), %eax
 	movl	$-1, 4(%eax)
 	movl	num_connects, %eax
 	addl	$1, %eax
 	movl	%eax, num_connects
-	movl	-12(%ebp), %eax
-	movl	%eax, -16(%ebp)
+	leal	-88(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L389
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L389:
+	movl	-124(%ebp), %eax
+	movl	%eax, -88(%ebp)
 	movl	8(%ebp), %eax
-	movl	(%eax), %edx
-	movl	-12(%ebp), %eax
-	movl	%edx, 68(%eax)
-	movl	-12(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L390
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L390:
+	movl	8(%ebp), %eax
+	movl	(%eax), %ecx
+	movl	-124(%ebp), %eax
+	addl	$68, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L391
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L391:
+	movl	-124(%ebp), %eax
+	movl	%ecx, 68(%eax)
+	movl	-124(%ebp), %eax
+	addl	$72, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L392
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L392:
+	movl	-124(%ebp), %eax
 	movl	$0, 72(%eax)
-	movl	-12(%ebp), %eax
+	movl	-124(%ebp), %eax
+	addl	$76, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L393
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L393:
+	movl	-124(%ebp), %eax
 	movl	$0, 76(%eax)
-	movl	-12(%ebp), %eax
+	movl	-124(%ebp), %eax
+	addl	$92, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L394
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L394:
+	movl	-124(%ebp), %eax
 	movl	$0, 92(%eax)
-	movl	-12(%ebp), %eax
+	movl	-124(%ebp), %eax
+	addl	$52, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L395
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L395:
+	movl	-124(%ebp), %eax
 	movl	$0, 52(%eax)
-	movl	-12(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	448(%eax), %eax
+	movl	-124(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L396
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L396:
+	movl	-124(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	448(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L397
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L397:
+	movl	448(%edx), %eax
 	movl	%eax, (%esp)
 	call	httpd_set_ndelay
-	movl	-12(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	448(%eax), %eax
+	movl	-124(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L398
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L398:
+	movl	-124(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	448(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L399
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L399:
+	movl	448(%edx), %eax
 	movl	$0, 8(%esp)
-	movl	-12(%ebp), %edx
+	movl	-124(%ebp), %edx
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	fdwatch_add_fd
@@ -3552,20 +7463,36 @@
 	movl	num_connects, %edx
 	movl	stats_simultaneous, %eax
 	cmpl	%eax, %edx
-	jle	.L217
+	jle	.L400
 	movl	num_connects, %eax
 	movl	%eax, stats_simultaneous
-	jmp	.L218
-.L217:
-	jmp	.L218
-.L219:
-	leave
+	jmp	.L401
+.L400:
+	jmp	.L401
+.L402:
+	movl	-140(%ebp), %edi
+	movl	$0, (%edi)
+	movl	$0, 4(%edi)
+	movl	$0, 8(%edi)
+	addl	$140, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
 	.cfi_endproc
 .LFE17:
 	.size	handle_newconnect, .-handle_newconnect
+	.section	.rodata
+	.align 4
+.LC126:
+	.string	"handle_read 1 32 4 11 client_data "
+	.text
 	.type	handle_read, @function
 handle_read:
 .LFB18:
@@ -3575,30 +7502,100 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
+	pushl	%edi
+	pushl	%esi
 	pushl	%ebx
-	subl	$52, %esp
-	.cfi_offset 3, -12
+	subl	$156, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
+	leal	-120(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC126, 4(%eax)
+	shrl	$3, %eax
+	leal	536870912(%eax), %edi
+	movl	$-235802127, (%edi)
+	movl	$-185273340, 4(%edi)
+	movl	$-202116109, 8(%edi)
+	movl	8(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L405
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L405:
 	movl	8(%ebp), %eax
 	movl	8(%eax), %eax
-	movl	%eax, -16(%ebp)
-	movl	-16(%ebp), %eax
-	movl	144(%eax), %edx
-	movl	-16(%ebp), %eax
+	movl	%eax, -128(%ebp)
+	movl	-128(%ebp), %eax
+	addl	$144, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L406
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L406:
+	movl	-128(%ebp), %eax
+	movl	144(%eax), %ecx
+	movl	-128(%ebp), %eax
+	addl	$140, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L407
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L407:
+	movl	-128(%ebp), %eax
 	movl	140(%eax), %eax
-	cmpl	%eax, %edx
-	jb	.L222
-	movl	-16(%ebp), %eax
+	cmpl	%eax, %ecx
+	jb	.L408
+	movl	-128(%ebp), %eax
 	movl	140(%eax), %eax
 	cmpl	$5000, %eax
-	jbe	.L223
+	jbe	.L409
 	movl	httpd_err400form, %edx
 	movl	httpd_err400title, %eax
-	movl	$.LC45, 20(%esp)
+	movl	$.LC48, 20(%esp)
 	movl	%edx, 16(%esp)
-	movl	$.LC45, 12(%esp)
+	movl	$.LC48, 12(%esp)
 	movl	%eax, 8(%esp)
 	movl	$400, 4(%esp)
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_send_err
 	movl	12(%ebp), %eax
@@ -3606,44 +7603,145 @@
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L221
-.L223:
-	movl	-16(%ebp), %eax
+	jmp	.L404
+.L409:
+	movl	-128(%ebp), %eax
+	addl	$140, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L411
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L411:
+	movl	-128(%ebp), %eax
 	movl	140(%eax), %eax
 	leal	1000(%eax), %ecx
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
 	leal	140(%eax), %edx
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
 	addl	$136, %eax
 	movl	%ecx, 8(%esp)
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	httpd_realloc_str
-.L222:
-	movl	-16(%ebp), %eax
-	movl	140(%eax), %edx
-	movl	-16(%ebp), %eax
-	movl	136(%eax), %ecx
-	movl	-16(%ebp), %eax
+.L408:
+	movl	-128(%ebp), %eax
+	addl	$140, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L412
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L412:
+	movl	-128(%ebp), %eax
+	movl	140(%eax), %eax
+	movl	%eax, -140(%ebp)
+	movl	-128(%ebp), %eax
+	addl	$136, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L413
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L413:
+	movl	-128(%ebp), %eax
+	movl	136(%eax), %ebx
+	movl	-128(%ebp), %eax
+	addl	$144, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L414
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L414:
+	movl	-128(%ebp), %eax
 	movl	144(%eax), %eax
-	addl	%eax, %ecx
-	movl	-16(%ebp), %eax
+	addl	%eax, %ebx
+	movl	-128(%ebp), %eax
+	addl	$448, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L415
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L415:
+	movl	-128(%ebp), %eax
 	movl	448(%eax), %eax
-	movl	%edx, 8(%esp)
-	movl	%ecx, 4(%esp)
+	movl	-140(%ebp), %esi
+	movl	%esi, 8(%esp)
+	movl	%ebx, 4(%esp)
 	movl	%eax, (%esp)
 	call	read
-	movl	%eax, -12(%ebp)
-	cmpl	$0, -12(%ebp)
-	jne	.L225
+	movl	%eax, -124(%ebp)
+	cmpl	$0, -124(%ebp)
+	jne	.L416
 	movl	httpd_err400form, %edx
 	movl	httpd_err400title, %eax
-	movl	$.LC45, 20(%esp)
+	movl	$.LC48, 20(%esp)
 	movl	%edx, 16(%esp)
-	movl	$.LC45, 12(%esp)
+	movl	$.LC48, 12(%esp)
 	movl	%eax, 8(%esp)
 	movl	$400, 4(%esp)
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_send_err
 	movl	12(%ebp), %eax
@@ -3651,33 +7749,93 @@
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L221
-.L225:
-	cmpl	$0, -12(%ebp)
-	jns	.L226
+	jmp	.L404
+.L416:
+	cmpl	$0, -124(%ebp)
+	jns	.L417
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L418
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L418:
+	movl	(%edx), %eax
 	cmpl	$4, %eax
-	je	.L227
+	je	.L419
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L420
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L420:
+	movl	(%edx), %eax
 	cmpl	$11, %eax
-	je	.L227
+	je	.L419
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L421
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L421:
+	movl	(%edx), %eax
 	cmpl	$11, %eax
-	jne	.L228
-.L227:
-	jmp	.L221
-.L228:
+	jne	.L422
+.L419:
+	jmp	.L404
+.L422:
 	movl	httpd_err400form, %edx
 	movl	httpd_err400title, %eax
-	movl	$.LC45, 20(%esp)
+	movl	$.LC48, 20(%esp)
 	movl	%edx, 16(%esp)
-	movl	$.LC45, 12(%esp)
+	movl	$.LC48, 12(%esp)
 	movl	%eax, 8(%esp)
 	movl	$400, 4(%esp)
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_send_err
 	movl	12(%ebp), %eax
@@ -3685,33 +7843,90 @@
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L221
-.L226:
-	movl	-16(%ebp), %eax
+	jmp	.L404
+.L417:
+	movl	-128(%ebp), %eax
+	addl	$144, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L423
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L423:
+	movl	-128(%ebp), %eax
 	movl	144(%eax), %edx
-	movl	-12(%ebp), %eax
+	movl	-124(%ebp), %eax
 	addl	%eax, %edx
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
 	movl	%edx, 144(%eax)
 	movl	12(%ebp), %eax
-	movl	(%eax), %edx
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L424
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L424:
+	movl	12(%ebp), %eax
+	movl	(%eax), %ecx
 	movl	8(%ebp), %eax
-	movl	%edx, 68(%eax)
-	movl	-16(%ebp), %eax
+	addl	$68, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L425
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L425:
+	movl	8(%ebp), %eax
+	movl	%ecx, 68(%eax)
+	movl	-128(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_got_request
 	testl	%eax, %eax
-	je	.L244
+	je	.L468
 	cmpl	$2, %eax
-	jne	.L243
+	jne	.L467
 	movl	httpd_err400form, %edx
 	movl	httpd_err400title, %eax
-	movl	$.LC45, 20(%esp)
+	movl	$.LC48, 20(%esp)
 	movl	%edx, 16(%esp)
-	movl	$.LC45, 12(%esp)
+	movl	$.LC48, 12(%esp)
 	movl	%eax, 8(%esp)
 	movl	$400, 4(%esp)
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_send_err
 	movl	12(%ebp), %eax
@@ -3719,35 +7934,54 @@
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L221
-.L243:
-	movl	-16(%ebp), %eax
+	jmp	.L404
+.L467:
+	movl	-128(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_parse_request
 	testl	%eax, %eax
-	jns	.L232
+	jns	.L429
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L221
-.L232:
+	jmp	.L404
+.L429:
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	check_throttles
 	testl	%eax, %eax
-	jne	.L233
-	movl	-16(%ebp), %eax
+	jne	.L430
+	movl	-128(%ebp), %eax
+	addl	$172, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L431
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L431:
+	movl	-128(%ebp), %eax
 	movl	172(%eax), %ecx
 	movl	httpd_err503form, %edx
 	movl	httpd_err503title, %eax
 	movl	%ecx, 20(%esp)
 	movl	%edx, 16(%esp)
-	movl	$.LC45, 12(%esp)
+	movl	$.LC48, 12(%esp)
 	movl	%eax, 8(%esp)
 	movl	$503, 4(%esp)
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_send_err
 	movl	12(%ebp), %eax
@@ -3755,140 +7989,655 @@
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L221
-.L233:
+	jmp	.L404
+.L430:
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_start_request
 	testl	%eax, %eax
-	jns	.L234
+	jns	.L432
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L221
-.L234:
-	movl	-16(%ebp), %eax
+	jmp	.L404
+.L432:
+	movl	-128(%ebp), %eax
+	addl	$336, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L433
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L433:
+	movl	-128(%ebp), %eax
 	movl	336(%eax), %eax
 	testl	%eax, %eax
-	je	.L235
-	movl	-16(%ebp), %eax
-	movl	344(%eax), %edx
+	je	.L434
+	movl	-128(%ebp), %eax
+	addl	$344, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L435
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L435:
+	movl	-128(%ebp), %eax
+	movl	344(%eax), %ecx
 	movl	8(%ebp), %eax
-	movl	%edx, 92(%eax)
-	movl	-16(%ebp), %eax
+	addl	$92, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L436
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L436:
+	movl	8(%ebp), %eax
+	movl	%ecx, 92(%eax)
+	movl	-128(%ebp), %eax
+	addl	$348, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L437
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L437:
+	movl	-128(%ebp), %eax
 	movl	348(%eax), %eax
-	leal	1(%eax), %edx
+	leal	1(%eax), %ecx
 	movl	8(%ebp), %eax
-	movl	%edx, 88(%eax)
-	jmp	.L236
-.L235:
-	movl	-16(%ebp), %eax
+	addl	$88, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L438
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L438:
+	movl	8(%ebp), %eax
+	movl	%ecx, 88(%eax)
+	jmp	.L439
+.L434:
+	movl	-128(%ebp), %eax
+	addl	$164, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L440
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L440:
+	movl	-128(%ebp), %eax
 	movl	164(%eax), %eax
 	testl	%eax, %eax
-	jns	.L237
+	jns	.L441
+	movl	8(%ebp), %eax
+	addl	$88, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L442
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L442:
 	movl	8(%ebp), %eax
 	movl	$0, 88(%eax)
-	jmp	.L236
-.L237:
-	movl	-16(%ebp), %eax
-	movl	164(%eax), %edx
+	jmp	.L439
+.L441:
+	movl	-128(%ebp), %eax
+	addl	$164, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L443
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L443:
+	movl	-128(%ebp), %eax
+	movl	164(%eax), %ecx
 	movl	8(%ebp), %eax
-	movl	%edx, 88(%eax)
-.L236:
-	movl	-16(%ebp), %eax
+	addl	$88, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L444
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L444:
+	movl	8(%ebp), %eax
+	movl	%ecx, 88(%eax)
+.L439:
+	movl	-128(%ebp), %eax
+	addl	$452, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L445
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L445:
+	movl	-128(%ebp), %eax
 	movl	452(%eax), %eax
 	testl	%eax, %eax
-	jne	.L238
-	movl	$0, -20(%ebp)
-	jmp	.L239
-.L240:
+	jne	.L446
+	movl	$0, -132(%ebp)
+	jmp	.L447
+.L453:
 	movl	throttles, %ecx
+	movl	-132(%ebp), %eax
+	leal	0(,%eax,4), %edx
 	movl	8(%ebp), %eax
-	movl	-20(%ebp), %edx
+	addl	%edx, %eax
+	addl	$12, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L448
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L448:
+	movl	8(%ebp), %eax
+	movl	-132(%ebp), %edx
 	movl	12(%eax,%edx,4), %eax
 	movl	%eax, %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%eax, %ecx
-	movl	throttles, %ebx
+	addl	%ecx, %eax
+	movl	%eax, -140(%ebp)
+	movl	throttles, %ecx
 	movl	8(%ebp), %eax
-	movl	-20(%ebp), %edx
+	movl	-132(%ebp), %edx
 	movl	12(%eax,%edx,4), %eax
 	movl	%eax, %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	16(%eax), %edx
-	movl	-16(%ebp), %eax
+	addl	%eax, %ecx
+	leal	16(%ecx), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ebx
+	testb	%bl, %bl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%bl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L449
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L449:
+	movl	16(%ecx), %ebx
+	movl	-128(%ebp), %eax
+	addl	$168, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L450
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L450:
+	movl	-128(%ebp), %eax
 	movl	168(%eax), %eax
-	addl	%edx, %eax
-	movl	%eax, 16(%ecx)
-	addl	$1, -20(%ebp)
-.L239:
+	addl	%eax, %ebx
+	movl	-140(%ebp), %eax
+	addl	$16, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L451
+	movl	%edx, (%esp)
+	call	__asan_report_store4
+.L451:
+	movl	-140(%ebp), %eax
+	movl	%ebx, 16(%eax)
+	addl	$1, -132(%ebp)
+.L447:
+	movl	8(%ebp), %eax
+	addl	$52, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L452
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L452:
 	movl	8(%ebp), %eax
 	movl	52(%eax), %eax
-	cmpl	-20(%ebp), %eax
-	jg	.L240
-	movl	-16(%ebp), %eax
-	movl	168(%eax), %edx
+	cmpl	-132(%ebp), %eax
+	jg	.L453
+	movl	-128(%ebp), %eax
+	addl	$168, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L454
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L454:
+	movl	-128(%ebp), %eax
+	movl	168(%eax), %ecx
 	movl	8(%ebp), %eax
-	movl	%edx, 92(%eax)
+	addl	$92, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L455
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L455:
+	movl	8(%ebp), %eax
+	movl	%ecx, 92(%eax)
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L221
-.L238:
+	jmp	.L404
+.L446:
 	movl	8(%ebp), %eax
-	movl	92(%eax), %edx
+	addl	$92, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L456
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L456:
+	movl	8(%ebp), %eax
+	movl	92(%eax), %ecx
+	movl	8(%ebp), %eax
+	addl	$88, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L457
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L457:
 	movl	8(%ebp), %eax
 	movl	88(%eax), %eax
-	cmpl	%eax, %edx
-	jl	.L241
+	cmpl	%eax, %ecx
+	jl	.L458
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L221
-.L241:
+	jmp	.L404
+.L458:
+	movl	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L459
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L459:
 	movl	8(%ebp), %eax
 	movl	$2, (%eax)
 	movl	12(%ebp), %eax
-	movl	(%eax), %edx
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L460
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L460:
+	movl	12(%ebp), %eax
+	movl	(%eax), %ecx
 	movl	8(%ebp), %eax
-	movl	%edx, 64(%eax)
+	addl	$64, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L461
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L461:
 	movl	8(%ebp), %eax
-	movl	$0, 80(%eax)
+	movl	%ecx, 64(%eax)
 	movl	8(%ebp), %eax
-	movl	%eax, -24(%ebp)
-	movl	-16(%ebp), %eax
+	addl	$80, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L462
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L462:
+	movl	8(%ebp), %eax
+	movl	$0, 80(%eax)
+	leal	-88(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L463
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L463:
+	movl	8(%ebp), %eax
+	movl	%eax, -88(%ebp)
+	movl	-128(%ebp), %eax
+	addl	$448, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L464
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L464:
+	movl	-128(%ebp), %eax
 	movl	448(%eax), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_del_fd
-	movl	-16(%ebp), %eax
+	movl	-128(%ebp), %eax
+	addl	$448, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L465
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L465:
+	movl	-128(%ebp), %eax
 	movl	448(%eax), %eax
 	movl	$1, 8(%esp)
 	movl	8(%ebp), %edx
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	fdwatch_add_fd
-	jmp	.L221
-.L244:
+	jmp	.L404
+.L468:
 	nop
-.L221:
-	addl	$52, %esp
+.L404:
+	movl	$0, (%edi)
+	movl	$0, 4(%edi)
+	movl	$0, 8(%edi)
+	addl	$156, %esp
 	popl	%ebx
 	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
 	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
@@ -3898,13 +8647,20 @@
 	.size	handle_read, .-handle_read
 	.section	.rodata
 	.align 4
-.LC118:
+.LC127:
+	.string	"handle_send 2 32 4 11 client_data 96 16 2 iv "
+	.align 32
+.LC128:
 	.string	"replacing non-null wakeup_timer!"
-	.align 4
-.LC119:
+	.zero	63
+	.align 32
+.LC129:
 	.string	"tmr_create(wakeup_connection) failed"
-.LC120:
+	.zero	59
+	.align 32
+.LC130:
 	.string	"write - %m sending %.80s"
+	.zero	39
 	.text
 	.type	handle_send, @function
 handle_send:
@@ -3915,69 +8671,393 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
+	pushl	%edi
 	pushl	%esi
 	pushl	%ebx
-	subl	$80, %esp
-	.cfi_offset 6, -12
-	.cfi_offset 3, -16
+	subl	$252, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
+	leal	-184(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC127, 4(%eax)
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movl	%eax, -232(%ebp)
+	movl	$-235802127, (%eax)
+	movl	$-185273340, 4(%eax)
+	movl	$-218959118, 8(%eax)
+	movl	$-185335808, 12(%eax)
+	movl	$-202116109, 16(%eax)
+	movl	8(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L470
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L470:
 	movl	8(%ebp), %eax
 	movl	8(%eax), %eax
-	movl	%eax, -36(%ebp)
+	movl	%eax, -196(%ebp)
+	movl	8(%ebp), %eax
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L471
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L471:
 	movl	8(%ebp), %eax
 	movl	56(%eax), %eax
 	cmpl	$-1, %eax
-	jne	.L246
-	movl	$1000000000, -52(%ebp)
-	jmp	.L247
-.L246:
+	jne	.L472
+	movl	$1000000000, -212(%ebp)
+	jmp	.L473
+.L472:
+	movl	8(%ebp), %eax
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L474
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L474:
 	movl	8(%ebp), %eax
 	movl	56(%eax), %eax
 	leal	3(%eax), %edx
 	testl	%eax, %eax
 	cmovs	%edx, %eax
 	sarl	$2, %eax
-	movl	%eax, -52(%ebp)
-.L247:
-	movl	-36(%ebp), %eax
+	movl	%eax, -212(%ebp)
+.L473:
+	movl	-196(%ebp), %eax
+	addl	$304, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L475
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L475:
+	movl	-196(%ebp), %eax
 	movl	304(%eax), %eax
 	testl	%eax, %eax
-	jne	.L248
+	jne	.L476
 	movl	8(%ebp), %eax
-	movl	88(%eax), %edx
+	addl	$88, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L477
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L477:
+	movl	8(%ebp), %eax
+	movl	88(%eax), %ecx
+	movl	8(%ebp), %eax
+	addl	$92, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L478
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L478:
 	movl	8(%ebp), %eax
 	movl	92(%eax), %eax
-	subl	%eax, %edx
-	movl	%edx, %eax
+	subl	%eax, %ecx
+	movl	%ecx, %eax
 	movl	%eax, %edx
-	movl	-52(%ebp), %eax
+	movl	-212(%ebp), %eax
 	cmpl	%eax, %edx
-	cmova	%eax, %edx
-	movl	-36(%ebp), %eax
-	movl	452(%eax), %ecx
+	cmovbe	%edx, %eax
+	movl	%eax, %esi
+	movl	-196(%ebp), %eax
+	addl	$452, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L479
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L479:
+	movl	-196(%ebp), %eax
+	movl	452(%eax), %edx
 	movl	8(%ebp), %eax
 	movl	92(%eax), %eax
-	addl	%eax, %ecx
-	movl	-36(%ebp), %eax
+	leal	(%edx,%eax), %ebx
+	movl	-196(%ebp), %eax
+	addl	$448, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %edi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L480
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L480:
+	movl	-196(%ebp), %eax
 	movl	448(%eax), %eax
-	movl	%edx, 8(%esp)
-	movl	%ecx, 4(%esp)
+	movl	%esi, 8(%esp)
+	movl	%ebx, 4(%esp)
 	movl	%eax, (%esp)
 	call	write
-	movl	%eax, -48(%ebp)
-	jmp	.L249
-.L248:
-	movl	-36(%ebp), %eax
-	movl	252(%eax), %eax
-	movl	%eax, -24(%ebp)
-	movl	-36(%ebp), %eax
-	movl	304(%eax), %eax
-	movl	%eax, -20(%ebp)
-	movl	-36(%ebp), %eax
-	movl	452(%eax), %edx
+	movl	%eax, -208(%ebp)
+	jmp	.L481
+.L476:
+	movl	-196(%ebp), %eax
+	addl	$252, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L482
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L482:
+	movl	-196(%ebp), %eax
+	movl	252(%eax), %ecx
+	leal	-88(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L483
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L483:
+	movl	%ecx, -88(%ebp)
+	movl	-196(%ebp), %eax
+	addl	$304, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L484
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L484:
+	movl	-196(%ebp), %eax
+	movl	304(%eax), %ecx
+	leal	-88(%ebp), %eax
+	addl	$4, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L485
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L485:
+	movl	%ecx, -84(%ebp)
+	movl	-196(%ebp), %eax
+	addl	$452, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L486
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L486:
+	movl	-196(%ebp), %eax
+	movl	452(%eax), %ecx
+	movl	8(%ebp), %eax
+	addl	$92, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L487
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L487:
 	movl	8(%ebp), %eax
 	movl	92(%eax), %eax
-	addl	%edx, %eax
-	movl	%eax, -16(%ebp)
+	addl	%eax, %ecx
+	leal	-88(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L488
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L488:
+	movl	%ecx, -80(%ebp)
+	movl	8(%ebp), %eax
+	addl	$88, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L489
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L489:
 	movl	8(%ebp), %eax
 	movl	88(%eax), %edx
 	movl	8(%ebp), %eax
@@ -3985,311 +9065,1300 @@
 	subl	%eax, %edx
 	movl	%edx, %eax
 	movl	%eax, %edx
-	movl	-52(%ebp), %eax
+	movl	-212(%ebp), %eax
 	cmpl	%eax, %edx
 	cmovbe	%edx, %eax
-	movl	%eax, -12(%ebp)
-	movl	-36(%ebp), %eax
+	movl	%eax, %ecx
+	leal	-88(%ebp), %eax
+	addl	$12, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L490
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L490:
+	movl	%ecx, -76(%ebp)
+	movl	-196(%ebp), %eax
+	addl	$448, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L491
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L491:
+	movl	-196(%ebp), %eax
 	movl	448(%eax), %eax
 	movl	$2, 8(%esp)
-	leal	-24(%ebp), %edx
+	leal	-88(%ebp), %edx
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	writev
-	movl	%eax, -48(%ebp)
-.L249:
-	cmpl	$0, -48(%ebp)
-	jns	.L250
+	movl	%eax, -208(%ebp)
+.L481:
+	cmpl	$0, -208(%ebp)
+	jns	.L492
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L493
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L493:
+	movl	(%edx), %eax
 	cmpl	$4, %eax
-	jne	.L250
-	jmp	.L245
-.L250:
-	cmpl	$0, -48(%ebp)
-	je	.L252
-	cmpl	$0, -48(%ebp)
-	jns	.L253
+	jne	.L492
+	jmp	.L469
+.L492:
+	cmpl	$0, -208(%ebp)
+	je	.L495
+	cmpl	$0, -208(%ebp)
+	jns	.L496
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L497
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L497:
+	movl	(%edx), %eax
 	cmpl	$11, %eax
-	je	.L252
+	je	.L495
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L498
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L498:
+	movl	(%edx), %eax
 	cmpl	$11, %eax
-	jne	.L253
-.L252:
+	jne	.L496
+.L495:
+	movl	8(%ebp), %eax
+	addl	$80, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L499
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L499:
 	movl	8(%ebp), %eax
 	movl	80(%eax), %eax
 	leal	100(%eax), %edx
 	movl	8(%ebp), %eax
 	movl	%edx, 80(%eax)
 	movl	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L500
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L500:
+	movl	8(%ebp), %eax
 	movl	$3, (%eax)
-	movl	-36(%ebp), %eax
+	movl	-196(%ebp), %eax
+	addl	$448, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L501
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L501:
+	movl	-196(%ebp), %eax
 	movl	448(%eax), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_del_fd
+	leal	-152(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L502
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L502:
+	movl	8(%ebp), %eax
+	movl	%eax, -152(%ebp)
 	movl	8(%ebp), %eax
-	movl	%eax, -24(%ebp)
+	addl	$72, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L503
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L503:
 	movl	8(%ebp), %eax
 	movl	72(%eax), %eax
 	testl	%eax, %eax
-	je	.L254
-	movl	$.LC118, 4(%esp)
+	je	.L504
+	movl	$.LC128, 4(%esp)
 	movl	$3, (%esp)
 	call	syslog
-.L254:
+.L504:
+	movl	8(%ebp), %eax
+	addl	$80, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L505
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L505:
 	movl	8(%ebp), %eax
 	movl	80(%eax), %eax
 	movl	$0, 16(%esp)
 	movl	%eax, 12(%esp)
-	movl	-24(%ebp), %eax
+	movl	-152(%ebp), %eax
 	movl	%eax, 8(%esp)
 	movl	$wakeup_connection, 4(%esp)
 	movl	12(%ebp), %eax
 	movl	%eax, (%esp)
 	call	tmr_create
-	movl	8(%ebp), %edx
-	movl	%eax, 72(%edx)
+	movl	%eax, %ecx
+	movl	8(%ebp), %eax
+	addl	$72, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L506
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L506:
+	movl	8(%ebp), %eax
+	movl	%ecx, 72(%eax)
 	movl	8(%ebp), %eax
 	movl	72(%eax), %eax
 	testl	%eax, %eax
-	jne	.L255
-	movl	$.LC119, 4(%esp)
+	jne	.L507
+	movl	$.LC129, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L255:
-	jmp	.L245
-.L253:
-	cmpl	$0, -48(%ebp)
-	jns	.L256
+.L507:
+	jmp	.L469
+.L496:
+	cmpl	$0, -208(%ebp)
+	jns	.L508
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L509
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L509:
+	movl	(%edx), %eax
 	cmpl	$32, %eax
-	je	.L257
+	je	.L510
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L511
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L511:
+	movl	(%edx), %eax
 	cmpl	$22, %eax
-	je	.L257
+	je	.L510
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L512
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L512:
+	movl	(%edx), %eax
 	cmpl	$104, %eax
-	je	.L257
-	movl	-36(%ebp), %eax
+	je	.L510
+	movl	-196(%ebp), %eax
+	addl	$172, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L513
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L513:
+	movl	-196(%ebp), %eax
 	movl	172(%eax), %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC120, 4(%esp)
+	movl	$.LC130, 4(%esp)
 	movl	$3, (%esp)
 	call	syslog
-.L257:
+.L510:
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	clear_connection
-	jmp	.L245
-.L256:
+	jmp	.L469
+.L508:
+	movl	12(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L514
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L514:
 	movl	12(%ebp), %eax
-	movl	(%eax), %edx
+	movl	(%eax), %ecx
 	movl	8(%ebp), %eax
-	movl	%edx, 68(%eax)
-	movl	-36(%ebp), %eax
+	addl	$68, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L515
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L515:
+	movl	8(%ebp), %eax
+	movl	%ecx, 68(%eax)
+	movl	-196(%ebp), %eax
+	addl	$304, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L516
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L516:
+	movl	-196(%ebp), %eax
 	movl	304(%eax), %eax
 	testl	%eax, %eax
-	je	.L258
-	movl	-48(%ebp), %edx
-	movl	-36(%ebp), %eax
+	je	.L517
+	movl	-208(%ebp), %edx
+	movl	-196(%ebp), %eax
 	movl	304(%eax), %eax
 	cmpl	%eax, %edx
-	jae	.L259
-	movl	-36(%ebp), %eax
+	jae	.L518
+	movl	-196(%ebp), %eax
 	movl	304(%eax), %edx
-	movl	-48(%ebp), %eax
+	movl	-208(%ebp), %eax
 	subl	%eax, %edx
 	movl	%edx, %eax
-	movl	%eax, -32(%ebp)
-	movl	-32(%ebp), %edx
-	movl	-36(%ebp), %eax
-	movl	252(%eax), %ecx
-	movl	-48(%ebp), %eax
-	addl	%eax, %ecx
-	movl	-36(%ebp), %eax
+	movl	%eax, -192(%ebp)
+	movl	-192(%ebp), %edi
+	movl	-196(%ebp), %eax
+	addl	$252, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L519
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L519:
+	movl	-196(%ebp), %eax
+	movl	252(%eax), %edx
+	movl	-208(%ebp), %eax
+	addl	%edx, %eax
+	movl	%eax, %ebx
+	movl	%ebx, -224(%ebp)
+	movl	-196(%ebp), %eax
 	movl	252(%eax), %eax
-	movl	%edx, 8(%esp)
-	movl	%ecx, 4(%esp)
+	movl	%eax, -220(%ebp)
+	testl	%edi, %edi
+	je	.L520
+	movl	%ebx, %esi
+	movl	%esi, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%esi, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%eax, %ecx
+	movb	%cl, -225(%ebp)
+	leal	-1(%edi), %eax
+	addl	%ebx, %eax
+	movl	%eax, %ecx
+	movl	%ecx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ecx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%ebx, %eax
+	testb	%al, %al
+	je	.L521
+	movl	%ecx, (%esp)
+	call	__asan_report_load1
+.L521:
+	cmpb	$0, -225(%ebp)
+	je	.L520
+	movl	%esi, (%esp)
+	call	__asan_report_load1
+.L520:
+	testl	%edi, %edi
+	je	.L522
+	movl	-220(%ebp), %ebx
+	movl	%ebx, %esi
+	movl	%esi, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%esi, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%eax, %ecx
+	movb	%cl, -225(%ebp)
+	leal	-1(%edi), %eax
+	addl	%ebx, %eax
+	movl	%eax, %ecx
+	movl	%ecx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ecx, %eax
+	andl	$7, %eax
+	cmpb	%dl, %al
+	setge	%al
+	andl	%ebx, %eax
+	testb	%al, %al
+	je	.L523
+	movl	%ecx, (%esp)
+	call	__asan_report_store1
+.L523:
+	cmpb	$0, -225(%ebp)
+	je	.L522
+	movl	%esi, (%esp)
+	call	__asan_report_store1
+.L522:
+	movl	%edi, 8(%esp)
+	movl	-224(%ebp), %eax
+	movl	%eax, 4(%esp)
+	movl	-220(%ebp), %eax
 	movl	%eax, (%esp)
 	call	memmove
-	movl	-32(%ebp), %edx
-	movl	-36(%ebp), %eax
+	movl	-192(%ebp), %edx
+	movl	-196(%ebp), %eax
 	movl	%edx, 304(%eax)
-	movl	$0, -48(%ebp)
-	jmp	.L258
-.L259:
-	movl	-48(%ebp), %edx
-	movl	-36(%ebp), %eax
+	movl	$0, -208(%ebp)
+	jmp	.L517
+.L518:
+	movl	-208(%ebp), %ecx
+	movl	-196(%ebp), %eax
+	addl	$304, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L524
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L524:
+	movl	-196(%ebp), %eax
 	movl	304(%eax), %eax
-	subl	%eax, %edx
-	movl	%edx, %eax
-	movl	%eax, -48(%ebp)
-	movl	-36(%ebp), %eax
+	subl	%eax, %ecx
+	movl	%ecx, %eax
+	movl	%eax, -208(%ebp)
+	movl	-196(%ebp), %eax
 	movl	$0, 304(%eax)
-.L258:
+.L517:
+	movl	8(%ebp), %eax
+	addl	$92, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L525
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L525:
 	movl	8(%ebp), %eax
 	movl	92(%eax), %edx
-	movl	-48(%ebp), %eax
+	movl	-208(%ebp), %eax
 	addl	%eax, %edx
 	movl	8(%ebp), %eax
 	movl	%edx, 92(%eax)
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	8(%ebp), %edx
-	movl	8(%edx), %edx
-	movl	168(%edx), %ecx
-	movl	-48(%ebp), %edx
-	addl	%ecx, %edx
-	movl	%edx, 168(%eax)
-	movl	$0, -40(%ebp)
-	jmp	.L260
-.L261:
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L526
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L526:
+	movl	8(%ebp), %eax
+	movl	8(%eax), %esi
+	movl	8(%ebp), %eax
+	movl	8(%eax), %ecx
+	leal	168(%ecx), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ebx
+	testb	%bl, %bl
+	setne	%al
+	movl	%eax, %edi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%bl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L527
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L527:
+	movl	168(%ecx), %edx
+	movl	-208(%ebp), %eax
+	leal	(%edx,%eax), %ebx
+	leal	168(%esi), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %edi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L528
+	movl	%edx, (%esp)
+	call	__asan_report_store4
+.L528:
+	movl	%ebx, 168(%esi)
+	movl	$0, -200(%ebp)
+	jmp	.L529
+.L534:
 	movl	throttles, %ecx
+	movl	-200(%ebp), %eax
+	leal	0(,%eax,4), %edx
 	movl	8(%ebp), %eax
-	movl	-40(%ebp), %edx
+	addl	%edx, %eax
+	addl	$12, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L530
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L530:
+	movl	8(%ebp), %eax
+	movl	-200(%ebp), %edx
 	movl	12(%eax,%edx,4), %eax
 	movl	%eax, %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%eax, %ecx
-	movl	throttles, %ebx
+	leal	(%ecx,%eax), %edi
+	movl	throttles, %ecx
 	movl	8(%ebp), %eax
-	movl	-40(%ebp), %edx
+	movl	-200(%ebp), %edx
 	movl	12(%eax,%edx,4), %eax
 	movl	%eax, %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	16(%eax), %edx
-	movl	-48(%ebp), %eax
-	addl	%edx, %eax
-	movl	%eax, 16(%ecx)
-	addl	$1, -40(%ebp)
-.L260:
+	addl	%eax, %ecx
+	leal	16(%ecx), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ebx
+	testb	%bl, %bl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%bl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L531
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L531:
+	movl	16(%ecx), %edx
+	movl	-208(%ebp), %eax
+	leal	(%edx,%eax), %ebx
+	leal	16(%edi), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L532
+	movl	%edx, (%esp)
+	call	__asan_report_store4
+.L532:
+	movl	%ebx, 16(%edi)
+	addl	$1, -200(%ebp)
+.L529:
+	movl	8(%ebp), %eax
+	addl	$52, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L533
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L533:
+	movl	8(%ebp), %eax
+	movl	52(%eax), %eax
+	cmpl	-200(%ebp), %eax
+	jg	.L534
+	movl	8(%ebp), %eax
+	addl	$92, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L535
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L535:
 	movl	8(%ebp), %eax
-	movl	52(%eax), %eax
-	cmpl	-40(%ebp), %eax
-	jg	.L261
+	movl	92(%eax), %ecx
 	movl	8(%ebp), %eax
-	movl	92(%eax), %edx
+	addl	$88, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L536
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L536:
 	movl	8(%ebp), %eax
 	movl	88(%eax), %eax
-	cmpl	%eax, %edx
-	jl	.L262
+	cmpl	%eax, %ecx
+	jl	.L537
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L245
-.L262:
+	jmp	.L469
+.L537:
+	movl	8(%ebp), %eax
+	addl	$80, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L538
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L538:
 	movl	8(%ebp), %eax
 	movl	80(%eax), %eax
 	cmpl	$100, %eax
-	jle	.L263
+	jle	.L539
 	movl	8(%ebp), %eax
 	movl	80(%eax), %eax
 	leal	-100(%eax), %edx
 	movl	8(%ebp), %eax
 	movl	%edx, 80(%eax)
-.L263:
+.L539:
+	movl	8(%ebp), %eax
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L540
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L540:
 	movl	8(%ebp), %eax
 	movl	56(%eax), %eax
 	cmpl	$-1, %eax
-	je	.L245
+	je	.L469
 	movl	12(%ebp), %eax
-	movl	(%eax), %edx
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L542
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L542:
+	movl	12(%ebp), %eax
+	movl	(%eax), %ecx
+	movl	8(%ebp), %eax
+	addl	$64, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L543
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L543:
 	movl	8(%ebp), %eax
 	movl	64(%eax), %eax
-	subl	%eax, %edx
-	movl	%edx, %eax
-	movl	%eax, -44(%ebp)
-	cmpl	$0, -44(%ebp)
-	jne	.L265
-	movl	$1, -44(%ebp)
-.L265:
+	subl	%eax, %ecx
+	movl	%ecx, %eax
+	movl	%eax, -204(%ebp)
+	cmpl	$0, -204(%ebp)
+	jne	.L544
+	movl	$1, -204(%ebp)
+.L544:
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	168(%eax), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L545
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L545:
+	movl	8(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	168(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L546
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L546:
+	movl	168(%edx), %eax
 	cltd
-	idivl	-44(%ebp)
+	idivl	-204(%ebp)
+	movl	%eax, %ecx
+	movl	8(%ebp), %eax
+	addl	$56, %eax
 	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L547
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L547:
 	movl	8(%ebp), %eax
 	movl	56(%eax), %eax
-	cmpl	%eax, %edx
-	jle	.L245
+	cmpl	%eax, %ecx
+	jle	.L469
+	movl	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L548
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L548:
 	movl	8(%ebp), %eax
 	movl	$3, (%eax)
-	movl	-36(%ebp), %eax
+	movl	-196(%ebp), %eax
+	addl	$448, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L549
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L549:
+	movl	-196(%ebp), %eax
 	movl	448(%eax), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_del_fd
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	168(%eax), %eax
-	movl	8(%ebp), %edx
-	movl	56(%edx), %esi
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L550
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L550:
+	movl	8(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	168(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L551
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L551:
+	movl	168(%edx), %ecx
+	movl	8(%ebp), %eax
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L552
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L552:
+	movl	8(%ebp), %eax
+	movl	56(%eax), %edi
+	movl	%ecx, %eax
 	cltd
-	idivl	%esi
-	subl	-44(%ebp), %eax
-	movl	%eax, -28(%ebp)
+	idivl	%edi
+	subl	-204(%ebp), %eax
+	movl	%eax, -188(%ebp)
+	leal	-152(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L553
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L553:
+	movl	8(%ebp), %eax
+	movl	%eax, -152(%ebp)
 	movl	8(%ebp), %eax
-	movl	%eax, -24(%ebp)
+	addl	$72, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L554
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L554:
 	movl	8(%ebp), %eax
 	movl	72(%eax), %eax
 	testl	%eax, %eax
-	je	.L266
-	movl	$.LC118, 4(%esp)
+	je	.L555
+	movl	$.LC128, 4(%esp)
 	movl	$3, (%esp)
 	call	syslog
-.L266:
-	cmpl	$0, -28(%ebp)
-	jle	.L267
-	movl	-28(%ebp), %eax
+.L555:
+	cmpl	$0, -188(%ebp)
+	jle	.L556
+	movl	-188(%ebp), %eax
 	imull	$1000, %eax, %eax
-	jmp	.L268
-.L267:
+	jmp	.L557
+.L556:
 	movl	$500, %eax
-.L268:
+.L557:
 	movl	$0, 16(%esp)
 	movl	%eax, 12(%esp)
-	movl	-24(%ebp), %eax
+	movl	-152(%ebp), %eax
 	movl	%eax, 8(%esp)
 	movl	$wakeup_connection, 4(%esp)
 	movl	12(%ebp), %eax
 	movl	%eax, (%esp)
 	call	tmr_create
-	movl	8(%ebp), %edx
-	movl	%eax, 72(%edx)
+	movl	%eax, %ecx
+	movl	8(%ebp), %eax
+	addl	$72, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L558
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L558:
+	movl	8(%ebp), %eax
+	movl	%ecx, 72(%eax)
 	movl	8(%ebp), %eax
 	movl	72(%eax), %eax
 	testl	%eax, %eax
-	jne	.L245
-	movl	$.LC119, 4(%esp)
+	jne	.L469
+	movl	$.LC129, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L245:
-	addl	$80, %esp
+.L469:
+	movl	-232(%ebp), %eax
+	movl	$0, (%eax)
+	movl	$0, 4(%eax)
+	movl	$0, 8(%eax)
+	movl	$0, 12(%eax)
+	movl	$0, 16(%eax)
+	addl	$252, %esp
 	popl	%ebx
 	.cfi_restore 3
 	popl	%esi
 	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
 	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
@@ -4297,6 +10366,11 @@
 	.cfi_endproc
 .LFE19:
 	.size	handle_send, .-handle_send
+	.section	.rodata
+	.align 4
+.LC131:
+	.string	"handle_linger 1 32 4096 3 buf "
+	.text
 	.type	handle_linger, @function
 handle_linger:
 .LFB20:
@@ -4306,48 +10380,154 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$4152, %esp
+	pushl	%edi
+	pushl	%esi
+	pushl	%ebx
+	subl	$4252, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
 	movl	8(%ebp), %eax
-	movl	%eax, -4124(%ebp)
+	movl	%eax, -4236(%ebp)
 	movl	12(%ebp), %eax
-	movl	%eax, -4128(%ebp)
+	movl	%eax, -4240(%ebp)
+	leal	-4216(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC131, 4(%eax)
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movl	%eax, -4244(%ebp)
+	movl	$-235802127, (%eax)
+	movl	$-202116109, 516(%eax)
 	movl	%gs:20, %eax
-	movl	%eax, -12(%ebp)
+	movl	%eax, -28(%ebp)
 	xorl	%eax, %eax
-	movl	-4124(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	448(%eax), %eax
+	movl	-4236(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L561
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L561:
+	movl	-4236(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	448(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L562
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L562:
+	movl	448(%edx), %eax
 	movl	$4096, 8(%esp)
-	leal	-4108(%ebp), %edx
+	leal	-4184(%ebp), %edx
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	read
-	movl	%eax, -4112(%ebp)
-	cmpl	$0, -4112(%ebp)
-	jns	.L271
+	movl	%eax, -4220(%ebp)
+	cmpl	$0, -4220(%ebp)
+	jns	.L563
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L564
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L564:
+	movl	(%edx), %eax
 	cmpl	$4, %eax
-	je	.L270
+	je	.L560
 	call	__errno_location
-	movl	(%eax), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L566
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L566:
+	movl	(%edx), %eax
 	cmpl	$11, %eax
-	je	.L270
-.L271:
-	cmpl	$0, -4112(%ebp)
-	jg	.L270
-	movl	-4128(%ebp), %eax
+	je	.L560
+.L563:
+	cmpl	$0, -4220(%ebp)
+	jg	.L560
+	movl	-4240(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-4124(%ebp), %eax
+	movl	-4236(%ebp), %eax
 	movl	%eax, (%esp)
 	call	really_clear_connection
-.L270:
-	movl	-12(%ebp), %eax
+.L560:
+	movl	-4244(%ebp), %eax
+	movl	$0, (%eax)
+	movl	$0, 516(%eax)
+	movl	-28(%ebp), %eax
 	xorl	%gs:20, %eax
-	je	.L275
+	je	.L569
 	call	__stack_chk_fail
-.L275:
-	leave
+.L569:
+	addl	$4252, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -4355,9 +10535,10 @@
 .LFE20:
 	.size	handle_linger, .-handle_linger
 	.section	.rodata
-	.align 4
-.LC121:
+	.align 32
+.LC132:
 	.string	"throttle sending count was negative - shouldn't happen!"
+	.zero	40
 	.text
 	.type	check_throttles, @function
 check_throttles:
@@ -4368,201 +10549,655 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
+	pushl	%edi
 	pushl	%esi
 	pushl	%ebx
-	subl	$32, %esp
-	.cfi_offset 6, -12
-	.cfi_offset 3, -16
+	subl	$44, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
+	movl	8(%ebp), %eax
+	addl	$52, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L571
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L571:
 	movl	8(%ebp), %eax
 	movl	$0, 52(%eax)
 	movl	8(%ebp), %eax
+	addl	$60, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L572
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L572:
+	movl	8(%ebp), %eax
 	movl	$-1, 60(%eax)
 	movl	8(%ebp), %eax
-	movl	60(%eax), %edx
+	movl	60(%eax), %ecx
 	movl	8(%ebp), %eax
-	movl	%edx, 56(%eax)
-	movl	$0, -16(%ebp)
-	jmp	.L277
-.L287:
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L573
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L573:
+	movl	8(%ebp), %eax
+	movl	%ecx, 56(%eax)
+	movl	$0, -32(%ebp)
+	jmp	.L574
+.L604:
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	188(%eax), %ecx
-	movl	throttles, %ebx
-	movl	-16(%ebp), %edx
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L575
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L575:
+	movl	8(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	188(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L576
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L576:
+	movl	188(%edx), %eax
+	movl	%eax, -44(%ebp)
+	movl	throttles, %ecx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	(%eax), %eax
-	movl	%ecx, 4(%esp)
+	addl	%eax, %ecx
+	movl	%ecx, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L577
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L577:
+	movl	(%ecx), %eax
+	movl	-44(%ebp), %edi
+	movl	%edi, 4(%esp)
 	movl	%eax, (%esp)
 	call	match
 	testl	%eax, %eax
-	je	.L278
+	je	.L578
 	movl	throttles, %ecx
-	movl	-16(%ebp), %edx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	12(%eax), %ecx
-	movl	throttles, %ebx
-	movl	-16(%ebp), %edx
+	leal	(%ecx,%eax), %edx
+	leal	12(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L579
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L579:
+	movl	12(%edx), %eax
+	movl	%eax, -44(%ebp)
+	movl	throttles, %ecx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	4(%eax), %eax
+	leal	(%ecx,%eax), %edx
+	leal	4(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L580
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L580:
+	movl	4(%edx), %eax
 	addl	%eax, %eax
-	cmpl	%eax, %ecx
-	jle	.L279
+	cmpl	%eax, -44(%ebp)
+	jle	.L581
 	movl	$0, %eax
-	jmp	.L280
-.L279:
+	jmp	.L582
+.L581:
 	movl	throttles, %ecx
-	movl	-16(%ebp), %edx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	12(%eax), %ecx
-	movl	throttles, %ebx
-	movl	-16(%ebp), %edx
+	leal	(%ecx,%eax), %edx
+	leal	12(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L583
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L583:
+	movl	12(%edx), %eax
+	movl	%eax, -44(%ebp)
+	movl	throttles, %ecx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	8(%eax), %eax
-	cmpl	%eax, %ecx
-	jge	.L281
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L584
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L584:
+	movl	8(%edx), %eax
+	cmpl	%eax, -44(%ebp)
+	jge	.L585
 	movl	$0, %eax
-	jmp	.L280
-.L281:
+	jmp	.L582
+.L585:
 	movl	throttles, %ecx
-	movl	-16(%ebp), %edx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	20(%eax), %eax
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L586
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L586:
+	movl	20(%edx), %eax
 	testl	%eax, %eax
-	jns	.L282
-	movl	$.LC121, 4(%esp)
+	jns	.L587
+	movl	$.LC132, 4(%esp)
 	movl	$3, (%esp)
 	call	syslog
 	movl	throttles, %ecx
-	movl	-16(%ebp), %edx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	$0, 20(%eax)
-.L282:
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L588
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L588:
+	movl	$0, 20(%edx)
+.L587:
+	movl	8(%ebp), %eax
+	addl	$52, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L589
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L589:
 	movl	8(%ebp), %eax
 	movl	52(%eax), %eax
 	leal	1(%eax), %ecx
 	movl	8(%ebp), %edx
 	movl	%ecx, 52(%edx)
+	leal	0(,%eax,4), %ecx
+	movl	8(%ebp), %edx
+	addl	%ecx, %edx
+	addl	$12, %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%edx, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L590
+	movl	%edx, (%esp)
+	call	__asan_report_store4
+.L590:
 	movl	8(%ebp), %edx
-	movl	-16(%ebp), %ecx
+	movl	-32(%ebp), %ecx
 	movl	%ecx, 12(%edx,%eax,4)
 	movl	throttles, %ecx
-	movl	-16(%ebp), %edx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
 	addl	%ecx, %eax
+	leal	20(%eax), %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%edx, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L591
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L591:
 	movl	20(%eax), %edx
 	addl	$1, %edx
 	movl	%edx, 20(%eax)
 	movl	throttles, %ecx
-	movl	-16(%ebp), %edx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	4(%eax), %ecx
-	movl	throttles, %ebx
-	movl	-16(%ebp), %edx
+	leal	(%ecx,%eax), %edx
+	leal	4(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L592
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L592:
+	movl	4(%edx), %eax
+	movl	%eax, -44(%ebp)
+	movl	throttles, %ecx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	20(%eax), %esi
-	movl	%ecx, %eax
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L593
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L593:
+	movl	20(%edx), %edi
+	movl	-44(%ebp), %eax
 	cltd
-	idivl	%esi
-	movl	%eax, -12(%ebp)
+	idivl	%edi
+	movl	%eax, -28(%ebp)
+	movl	8(%ebp), %eax
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L594
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L594:
 	movl	8(%ebp), %eax
 	movl	56(%eax), %eax
 	cmpl	$-1, %eax
-	jne	.L283
+	jne	.L595
 	movl	8(%ebp), %eax
-	movl	-12(%ebp), %edx
+	movl	-28(%ebp), %edx
 	movl	%edx, 56(%eax)
-	jmp	.L284
-.L283:
+	jmp	.L596
+.L595:
+	movl	8(%ebp), %eax
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L597
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L597:
 	movl	8(%ebp), %eax
 	movl	56(%eax), %edx
-	movl	-12(%ebp), %eax
+	movl	-28(%ebp), %eax
 	cmpl	%eax, %edx
 	cmovg	%eax, %edx
 	movl	8(%ebp), %eax
 	movl	%edx, 56(%eax)
-.L284:
+.L596:
 	movl	throttles, %ecx
-	movl	-16(%ebp), %edx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	8(%eax), %eax
-	movl	%eax, -12(%ebp)
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L598
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L598:
+	movl	8(%edx), %eax
+	movl	%eax, -28(%ebp)
+	movl	8(%ebp), %eax
+	addl	$60, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L599
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L599:
 	movl	8(%ebp), %eax
 	movl	60(%eax), %eax
 	cmpl	$-1, %eax
-	jne	.L285
+	jne	.L600
 	movl	8(%ebp), %eax
-	movl	-12(%ebp), %edx
+	movl	-28(%ebp), %edx
 	movl	%edx, 60(%eax)
-	jmp	.L278
-.L285:
+	jmp	.L578
+.L600:
+	movl	8(%ebp), %eax
+	addl	$60, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L601
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L601:
 	movl	8(%ebp), %eax
 	movl	60(%eax), %edx
-	movl	-12(%ebp), %eax
+	movl	-28(%ebp), %eax
 	cmpl	%eax, %edx
 	cmovl	%eax, %edx
 	movl	8(%ebp), %eax
 	movl	%edx, 60(%eax)
-.L278:
-	addl	$1, -16(%ebp)
-.L277:
+.L578:
+	addl	$1, -32(%ebp)
+.L574:
 	movl	numthrottles, %eax
-	cmpl	%eax, -16(%ebp)
-	jge	.L286
+	cmpl	%eax, -32(%ebp)
+	jge	.L602
+	movl	8(%ebp), %eax
+	addl	$52, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L603
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L603:
 	movl	8(%ebp), %eax
 	movl	52(%eax), %eax
 	cmpl	$9, %eax
-	jle	.L287
-.L286:
+	jle	.L604
+.L602:
 	movl	$1, %eax
-.L280:
-	addl	$32, %esp
+.L582:
+	addl	$44, %esp
 	popl	%ebx
 	.cfi_restore 3
 	popl	%esi
 	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
 	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
@@ -4579,13 +11214,40 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$16, %esp
-	movl	$0, -4(%ebp)
-	jmp	.L289
-.L290:
+	pushl	%esi
+	pushl	%ebx
+	subl	$32, %esp
+	.cfi_offset 6, -12
+	.cfi_offset 3, -16
+	movl	$0, -12(%ebp)
+	jmp	.L606
+.L610:
 	movl	throttles, %ecx
+	movl	-12(%ebp), %eax
+	leal	0(,%eax,4), %edx
+	movl	8(%ebp), %eax
+	addl	%edx, %eax
+	addl	$12, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L607
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L607:
 	movl	8(%ebp), %eax
-	movl	-4(%ebp), %edx
+	movl	-12(%ebp), %edx
 	movl	12(%eax,%edx,4), %eax
 	movl	%eax, %edx
 	movl	%edx, %eax
@@ -4593,16 +11255,59 @@
 	addl	%edx, %eax
 	sall	$3, %eax
 	addl	%ecx, %eax
+	leal	20(%eax), %edx
+	movl	%edx, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%edx, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L608
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L608:
 	movl	20(%eax), %edx
 	subl	$1, %edx
 	movl	%edx, 20(%eax)
-	addl	$1, -4(%ebp)
-.L289:
+	addl	$1, -12(%ebp)
+.L606:
+	movl	8(%ebp), %eax
+	addl	$52, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L609
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L609:
 	movl	8(%ebp), %eax
 	movl	52(%eax), %eax
-	cmpl	-4(%ebp), %eax
-	jg	.L290
-	leave
+	cmpl	-12(%ebp), %eax
+	jg	.L610
+	addl	$32, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -4610,15 +11315,18 @@
 .LFE22:
 	.size	clear_throttles, .-clear_throttles
 	.section	.rodata
-	.align 4
-.LC122:
+	.align 32
+.LC133:
 	.string	"throttle #%d '%.80s' rate %ld greatly exceeding limit %ld; %d sending"
-	.align 4
-.LC123:
+	.zero	58
+	.align 32
+.LC134:
 	.string	"throttle #%d '%.80s' rate %ld exceeding limit %ld; %d sending"
-	.align 4
-.LC124:
+	.zero	34
+	.align 32
+.LC135:
 	.string	"throttle #%d '%.80s' rate %ld lower than minimum %ld; %d sending"
+	.zero	63
 	.text
 	.type	update_throttles, @function
 update_throttles:
@@ -4632,28 +11340,47 @@
 	pushl	%edi
 	pushl	%esi
 	pushl	%ebx
-	subl	$76, %esp
+	subl	$92, %esp
 	.cfi_offset 7, -12
 	.cfi_offset 6, -16
 	.cfi_offset 3, -20
 	movl	$0, -44(%ebp)
-	jmp	.L292
-.L296:
+	jmp	.L612
+.L640:
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	leal	(%ecx,%eax), %ebx
+	leal	(%ecx,%eax), %edi
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	12(%eax), %eax
+	leal	(%ecx,%eax), %edx
+	leal	12(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L613
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L613:
+	movl	12(%edx), %eax
 	leal	(%eax,%eax), %esi
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
@@ -4661,8 +11388,27 @@
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	16(%eax), %eax
+	addl	%eax, %ecx
+	leal	16(%ecx), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ebx
+	testb	%bl, %bl
+	setne	-60(%ebp)
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%bl, %al
+	setge	%al
+	andb	-60(%ebp), %al
+	testb	%al, %al
+	je	.L614
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L614:
+	movl	16(%ecx), %eax
 	movl	%eax, %edx
 	shrl	$31, %edx
 	addl	%edx, %eax
@@ -4674,226 +11420,668 @@
 	movl	%ecx, %eax
 	sarl	$31, %eax
 	subl	%eax, %edx
-	movl	%edx, %eax
-	movl	%eax, 12(%ebx)
+	movl	%edx, %ecx
+	leal	12(%edi), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L615
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L615:
+	movl	%ecx, 12(%edi)
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	$0, 16(%eax)
+	leal	(%ecx,%eax), %edx
+	leal	16(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L616
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L616:
+	movl	$0, 16(%edx)
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	12(%eax), %ecx
-	movl	throttles, %ebx
+	leal	(%ecx,%eax), %edx
+	leal	12(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L617
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L617:
+	movl	12(%edx), %eax
+	movl	%eax, -60(%ebp)
+	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	4(%eax), %eax
-	cmpl	%eax, %ecx
-	jle	.L293
+	leal	(%ecx,%eax), %edx
+	leal	4(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L618
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L618:
+	movl	4(%edx), %eax
+	cmpl	%eax, -60(%ebp)
+	jle	.L619
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	20(%eax), %eax
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L620
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L620:
+	movl	20(%edx), %eax
 	testl	%eax, %eax
-	je	.L293
+	je	.L619
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	12(%eax), %ecx
-	movl	throttles, %ebx
+	leal	(%ecx,%eax), %edx
+	leal	12(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L621
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L621:
+	movl	12(%edx), %eax
+	movl	%eax, -60(%ebp)
+	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	4(%eax), %eax
+	leal	(%ecx,%eax), %edx
+	leal	4(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L622
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L622:
+	movl	4(%edx), %eax
 	addl	%eax, %eax
-	cmpl	%eax, %ecx
-	jle	.L294
+	cmpl	%eax, -60(%ebp)
+	jle	.L623
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	20(%eax), %esi
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L624
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L624:
+	movl	20(%edx), %eax
+	movl	%eax, -60(%ebp)
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	4(%eax), %ebx
+	leal	(%ecx,%eax), %edx
+	leal	4(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L625
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L625:
+	movl	4(%edx), %eax
+	movl	%eax, -64(%ebp)
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	12(%eax), %ecx
-	movl	throttles, %edi
+	addl	%eax, %ecx
+	leal	12(%ecx), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ebx
+	testb	%bl, %bl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%bl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L626
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L626:
+	movl	12(%ecx), %esi
+	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%edi, %eax
-	movl	(%eax), %eax
-	movl	%esi, 24(%esp)
-	movl	%ebx, 20(%esp)
-	movl	%ecx, 16(%esp)
+	leal	(%ecx,%eax), %ebx
+	movl	%ebx, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %edi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L627
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L627:
+	movl	(%ebx), %eax
+	movl	-60(%ebp), %edi
+	movl	%edi, 24(%esp)
+	movl	-64(%ebp), %edi
+	movl	%edi, 20(%esp)
+	movl	%esi, 16(%esp)
 	movl	%eax, 12(%esp)
 	movl	-44(%ebp), %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC122, 4(%esp)
+	movl	$.LC133, 4(%esp)
 	movl	$5, (%esp)
 	call	syslog
-	jmp	.L293
-.L294:
+	jmp	.L619
+.L623:
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	20(%eax), %esi
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L628
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L628:
+	movl	20(%edx), %eax
+	movl	%eax, -60(%ebp)
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	4(%eax), %ebx
+	leal	(%ecx,%eax), %edx
+	leal	4(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L629
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L629:
+	movl	4(%edx), %eax
+	movl	%eax, -64(%ebp)
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	12(%eax), %ecx
-	movl	throttles, %edi
+	addl	%eax, %ecx
+	leal	12(%ecx), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ebx
+	testb	%bl, %bl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%bl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L630
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L630:
+	movl	12(%ecx), %esi
+	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%edi, %eax
-	movl	(%eax), %eax
-	movl	%esi, 24(%esp)
-	movl	%ebx, 20(%esp)
-	movl	%ecx, 16(%esp)
+	leal	(%ecx,%eax), %ebx
+	movl	%ebx, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %edi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L631
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L631:
+	movl	(%ebx), %eax
+	movl	-60(%ebp), %edi
+	movl	%edi, 24(%esp)
+	movl	-64(%ebp), %edi
+	movl	%edi, 20(%esp)
+	movl	%esi, 16(%esp)
 	movl	%eax, 12(%esp)
 	movl	-44(%ebp), %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC123, 4(%esp)
+	movl	$.LC134, 4(%esp)
 	movl	$6, (%esp)
 	call	syslog
-.L293:
+.L619:
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	12(%eax), %ecx
-	movl	throttles, %ebx
+	leal	(%ecx,%eax), %edx
+	leal	12(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L632
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L632:
+	movl	12(%edx), %eax
+	movl	%eax, -60(%ebp)
+	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	8(%eax), %eax
-	cmpl	%eax, %ecx
-	jge	.L295
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L633
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L633:
+	movl	8(%edx), %eax
+	cmpl	%eax, -60(%ebp)
+	jge	.L634
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	20(%eax), %eax
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L635
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L635:
+	movl	20(%edx), %eax
 	testl	%eax, %eax
-	je	.L295
+	je	.L634
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	20(%eax), %esi
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L636
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L636:
+	movl	20(%edx), %eax
+	movl	%eax, -60(%ebp)
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	8(%eax), %ebx
+	leal	(%ecx,%eax), %edx
+	leal	8(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L637
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L637:
+	movl	8(%edx), %eax
+	movl	%eax, -64(%ebp)
 	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	12(%eax), %ecx
-	movl	throttles, %edi
+	addl	%eax, %ecx
+	leal	12(%ecx), %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ebx
+	testb	%bl, %bl
+	setne	%al
+	movl	%eax, %esi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%bl, %al
+	setge	%al
+	andl	%esi, %eax
+	testb	%al, %al
+	je	.L638
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L638:
+	movl	12(%ecx), %esi
+	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%edi, %eax
-	movl	(%eax), %eax
-	movl	%esi, 24(%esp)
-	movl	%ebx, 20(%esp)
-	movl	%ecx, 16(%esp)
+	leal	(%ecx,%eax), %ebx
+	movl	%ebx, %eax
+	movl	%eax, %edx
+	movl	%edx, %eax
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movzbl	(%eax), %ecx
+	testb	%cl, %cl
+	setne	%al
+	movl	%eax, %edi
+	movl	%edx, %eax
+	andl	$7, %eax
+	addl	$3, %eax
+	cmpb	%cl, %al
+	setge	%al
+	andl	%edi, %eax
+	testb	%al, %al
+	je	.L639
+	movl	%edx, (%esp)
+	call	__asan_report_load4
+.L639:
+	movl	(%ebx), %eax
+	movl	-60(%ebp), %edi
+	movl	%edi, 24(%esp)
+	movl	-64(%ebp), %edi
+	movl	%edi, 20(%esp)
+	movl	%esi, 16(%esp)
 	movl	%eax, 12(%esp)
 	movl	-44(%ebp), %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC124, 4(%esp)
+	movl	$.LC135, 4(%esp)
 	movl	$5, (%esp)
 	call	syslog
-.L295:
+.L634:
 	addl	$1, -44(%ebp)
-.L292:
+.L612:
 	movl	numthrottles, %eax
 	cmpl	%eax, -44(%ebp)
-	jl	.L296
+	jl	.L640
 	movl	$0, -36(%ebp)
-	jmp	.L297
-.L304:
+	jmp	.L641
+.L656:
 	movl	connects, %ecx
 	movl	-36(%ebp), %edx
 	movl	%edx, %eax
@@ -4903,19 +12091,78 @@
 	addl	%ecx, %eax
 	movl	%eax, -32(%ebp)
 	movl	-32(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L642
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L642:
+	movl	-32(%ebp), %eax
 	movl	(%eax), %eax
 	cmpl	$2, %eax
-	je	.L298
+	je	.L643
 	movl	-32(%ebp), %eax
 	movl	(%eax), %eax
 	cmpl	$3, %eax
-	jne	.L299
-.L298:
+	jne	.L644
+.L643:
+	movl	-32(%ebp), %eax
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L645
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L645:
 	movl	-32(%ebp), %eax
 	movl	$-1, 56(%eax)
 	movl	$0, -40(%ebp)
-	jmp	.L300
-.L303:
+	jmp	.L646
+.L655:
+	movl	-40(%ebp), %eax
+	leal	0(,%eax,4), %edx
+	movl	-32(%ebp), %eax
+	addl	%edx, %eax
+	addl	$12, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L647
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L647:
 	movl	-32(%ebp), %eax
 	movl	-40(%ebp), %edx
 	movl	12(%eax,%edx,4), %eax
@@ -4926,29 +12173,107 @@
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ecx, %eax
-	movl	4(%eax), %ecx
-	movl	throttles, %ebx
+	leal	(%ecx,%eax), %edx
+	leal	4(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L648
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L648:
+	movl	4(%edx), %eax
+	movl	%eax, -60(%ebp)
+	movl	throttles, %ecx
 	movl	-44(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$3, %eax
-	addl	%ebx, %eax
-	movl	20(%eax), %edi
-	movl	%ecx, %eax
+	leal	(%ecx,%eax), %edx
+	leal	20(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L649
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L649:
+	movl	20(%edx), %edi
+	movl	-60(%ebp), %eax
 	cltd
 	idivl	%edi
 	movl	%eax, -28(%ebp)
 	movl	-32(%ebp), %eax
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L650
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L650:
+	movl	-32(%ebp), %eax
 	movl	56(%eax), %eax
 	cmpl	$-1, %eax
-	jne	.L301
+	jne	.L651
 	movl	-32(%ebp), %eax
 	movl	-28(%ebp), %edx
 	movl	%edx, 56(%eax)
-	jmp	.L302
-.L301:
+	jmp	.L652
+.L651:
+	movl	-32(%ebp), %eax
+	addl	$56, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L653
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L653:
 	movl	-32(%ebp), %eax
 	movl	56(%eax), %edx
 	movl	-28(%ebp), %eax
@@ -4956,20 +12281,39 @@
 	cmovg	%eax, %edx
 	movl	-32(%ebp), %eax
 	movl	%edx, 56(%eax)
-.L302:
+.L652:
 	addl	$1, -40(%ebp)
-.L300:
+.L646:
+	movl	-32(%ebp), %eax
+	addl	$52, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L654
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L654:
 	movl	-32(%ebp), %eax
 	movl	52(%eax), %eax
 	cmpl	-40(%ebp), %eax
-	jg	.L303
-.L299:
+	jg	.L655
+.L644:
 	addl	$1, -36(%ebp)
-.L297:
+.L641:
 	movl	max_connects, %eax
 	cmpl	%eax, -36(%ebp)
-	jl	.L304
-	addl	$76, %esp
+	jl	.L656
+	addl	$92, %esp
 	popl	%ebx
 	.cfi_restore 3
 	popl	%esi
@@ -4992,7 +12336,28 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$24, %esp
+	pushl	%ebx
+	subl	$20, %esp
+	.cfi_offset 3, -12
+	movl	8(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L658
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L658:
 	movl	8(%ebp), %eax
 	movl	8(%eax), %eax
 	movl	%eax, (%esp)
@@ -5002,7 +12367,10 @@
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	clear_connection
-	leave
+	addl	$20, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -5011,11 +12379,16 @@
 	.size	finish_connection, .-finish_connection
 	.section	.rodata
 	.align 4
-.LC125:
+.LC136:
+	.string	"clear_connection 1 32 4 11 client_data "
+	.align 32
+.LC137:
 	.string	"replacing non-null linger_timer!"
-	.align 4
-.LC126:
+	.zero	63
+	.align 32
+.LC138:
 	.string	"tmr_create(linger_clear_connection) failed"
+	.zero	53
 	.text
 	.type	clear_connection, @function
 clear_connection:
@@ -5026,100 +12399,505 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$56, %esp
+	pushl	%edi
+	pushl	%esi
+	pushl	%ebx
+	subl	$140, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
+	leal	-120(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC136, 4(%eax)
+	shrl	$3, %eax
+	addl	$536870912, %eax
+	movl	%eax, -124(%ebp)
+	movl	$-235802127, (%eax)
+	movl	$-185273340, 4(%eax)
+	movl	$-202116109, 8(%eax)
+	movl	8(%ebp), %eax
+	addl	$72, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L660
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L660:
 	movl	8(%ebp), %eax
 	movl	72(%eax), %eax
 	testl	%eax, %eax
-	je	.L307
+	je	.L661
 	movl	8(%ebp), %eax
 	movl	72(%eax), %eax
 	movl	%eax, (%esp)
 	call	tmr_cancel
 	movl	8(%ebp), %eax
+	addl	$72, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L662
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L662:
+	movl	8(%ebp), %eax
 	movl	$0, 72(%eax)
-.L307:
+.L661:
+	movl	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L663
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L663:
 	movl	8(%ebp), %eax
 	movl	(%eax), %eax
 	cmpl	$4, %eax
-	jne	.L308
+	jne	.L664
+	movl	8(%ebp), %eax
+	addl	$76, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L665
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L665:
 	movl	8(%ebp), %eax
 	movl	76(%eax), %eax
 	movl	%eax, (%esp)
 	call	tmr_cancel
 	movl	8(%ebp), %eax
+	addl	$76, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L666
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L666:
+	movl	8(%ebp), %eax
 	movl	$0, 76(%eax)
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	$0, 356(%eax)
-.L308:
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L667
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L667:
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	356(%eax), %eax
+	movl	8(%eax), %edx
+	leal	356(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L668
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L668:
+	movl	$0, 356(%edx)
+.L664:
+	movl	8(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L669
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L669:
+	movl	8(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	356(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L670
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L670:
+	movl	356(%edx), %eax
 	testl	%eax, %eax
-	je	.L309
+	je	.L671
+	movl	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L672
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L672:
 	movl	8(%ebp), %eax
 	movl	(%eax), %eax
 	cmpl	$3, %eax
-	je	.L310
+	je	.L673
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	448(%eax), %eax
+	movl	8(%eax), %edx
+	leal	448(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L674
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L674:
+	movl	448(%edx), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_del_fd
-.L310:
+.L673:
+	movl	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L675
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L675:
 	movl	8(%ebp), %eax
 	movl	$4, (%eax)
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	448(%eax), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L676
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L676:
+	movl	8(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	448(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L677
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L677:
+	movl	448(%edx), %eax
 	movl	$1, 4(%esp)
 	movl	%eax, (%esp)
-	call	shutdown
+	call	shutdown
+	movl	8(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L678
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L678:
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	448(%eax), %eax
+	movl	8(%eax), %edx
+	leal	448(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%edi, %ecx
+	testb	%cl, %cl
+	je	.L679
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L679:
+	movl	448(%edx), %eax
 	movl	$0, 8(%esp)
 	movl	8(%ebp), %edx
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	fdwatch_add_fd
+	leal	-88(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L680
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L680:
 	movl	8(%ebp), %eax
-	movl	%eax, -12(%ebp)
+	movl	%eax, -88(%ebp)
+	movl	8(%ebp), %eax
+	addl	$76, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L681
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L681:
 	movl	8(%ebp), %eax
 	movl	76(%eax), %eax
 	testl	%eax, %eax
-	je	.L311
-	movl	$.LC125, 4(%esp)
+	je	.L682
+	movl	$.LC137, 4(%esp)
 	movl	$3, (%esp)
 	call	syslog
-.L311:
+.L682:
 	movl	$0, 16(%esp)
 	movl	$500, 12(%esp)
-	movl	-12(%ebp), %eax
+	movl	-88(%ebp), %eax
 	movl	%eax, 8(%esp)
 	movl	$linger_clear_connection, 4(%esp)
 	movl	12(%ebp), %eax
 	movl	%eax, (%esp)
 	call	tmr_create
-	movl	8(%ebp), %edx
-	movl	%eax, 76(%edx)
+	movl	%eax, %ecx
+	movl	8(%ebp), %eax
+	addl	$76, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L683
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L683:
+	movl	8(%ebp), %eax
+	movl	%ecx, 76(%eax)
 	movl	8(%ebp), %eax
 	movl	76(%eax), %eax
 	testl	%eax, %eax
-	jne	.L306
-	movl	$.LC126, 4(%esp)
+	jne	.L659
+	movl	$.LC138, 4(%esp)
 	movl	$2, (%esp)
 	call	syslog
+	call	__asan_handle_no_return
 	movl	$1, (%esp)
 	call	exit
-.L309:
+.L671:
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
 	movl	8(%ebp), %eax
 	movl	%eax, (%esp)
 	call	really_clear_connection
-.L306:
-	leave
+.L659:
+	movl	-124(%ebp), %eax
+	movl	$0, (%eax)
+	movl	$0, 4(%eax)
+	movl	$0, 8(%eax)
+	addl	$140, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -5135,23 +12913,121 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$24, %esp
+	pushl	%esi
+	pushl	%ebx
+	subl	$16, %esp
+	.cfi_offset 6, -12
+	.cfi_offset 3, -16
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	168(%eax), %edx
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L686
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L686:
+	movl	8(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	168(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L687
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L687:
+	movl	168(%edx), %edx
 	movl	stats_bytes, %eax
 	addl	%edx, %eax
 	movl	%eax, stats_bytes
 	movl	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L688
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L688:
+	movl	8(%ebp), %eax
 	movl	(%eax), %eax
 	cmpl	$3, %eax
-	je	.L314
+	je	.L689
 	movl	8(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	448(%eax), %eax
+	movl	8(%eax), %edx
+	leal	448(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L690
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L690:
+	movl	448(%edx), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_del_fd
-.L314:
+.L689:
+	movl	8(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L691
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L691:
 	movl	8(%ebp), %eax
 	movl	8(%eax), %eax
 	movl	12(%ebp), %edx
@@ -5164,21 +13040,97 @@
 	movl	%eax, (%esp)
 	call	clear_throttles
 	movl	8(%ebp), %eax
+	addl	$76, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L692
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L692:
+	movl	8(%ebp), %eax
 	movl	76(%eax), %eax
 	testl	%eax, %eax
-	je	.L315
+	je	.L693
 	movl	8(%ebp), %eax
 	movl	76(%eax), %eax
 	movl	%eax, (%esp)
 	call	tmr_cancel
 	movl	8(%ebp), %eax
+	addl	$76, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L694
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L694:
+	movl	8(%ebp), %eax
 	movl	$0, 76(%eax)
-.L315:
+.L693:
+	movl	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L695
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L695:
 	movl	8(%ebp), %eax
 	movl	$0, (%eax)
-	movl	first_free_connect, %edx
+	movl	first_free_connect, %ecx
+	movl	8(%ebp), %eax
+	addl	$4, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L696
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L696:
 	movl	8(%ebp), %eax
-	movl	%edx, 4(%eax)
+	movl	%ecx, 4(%eax)
 	movl	8(%ebp), %edx
 	movl	connects, %eax
 	subl	%eax, %edx
@@ -5189,7 +13141,12 @@
 	movl	num_connects, %eax
 	subl	$1, %eax
 	movl	%eax, num_connects
-	leave
+	addl	$16, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -5197,12 +13154,14 @@
 .LFE26:
 	.size	really_clear_connection, .-really_clear_connection
 	.section	.rodata
-	.align 4
-.LC127:
+	.align 32
+.LC139:
 	.string	"%.80s connection timed out reading"
-	.align 4
-.LC128:
+	.zero	61
+	.align 32
+.LC140:
 	.string	"%.80s connection timed out sending"
+	.zero	61
 	.text
 	.type	idle, @function
 idle:
@@ -5213,98 +13172,266 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$56, %esp
-	movl	$0, -16(%ebp)
-	jmp	.L317
-.L323:
+	pushl	%edi
+	pushl	%esi
+	pushl	%ebx
+	subl	$60, %esp
+	.cfi_offset 7, -12
+	.cfi_offset 6, -16
+	.cfi_offset 3, -20
+	movl	$0, -32(%ebp)
+	jmp	.L698
+.L712:
 	movl	connects, %ecx
-	movl	-16(%ebp), %edx
+	movl	-32(%ebp), %edx
 	movl	%edx, %eax
 	addl	%eax, %eax
 	addl	%edx, %eax
 	sall	$5, %eax
 	addl	%ecx, %eax
-	movl	%eax, -12(%ebp)
-	movl	-12(%ebp), %eax
+	movl	%eax, -28(%ebp)
+	movl	-28(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L699
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L699:
+	movl	-28(%ebp), %eax
 	movl	(%eax), %eax
 	cmpl	$1, %eax
-	je	.L319
+	je	.L701
 	cmpl	$1, %eax
-	jl	.L318
+	jl	.L700
 	cmpl	$3, %eax
-	jg	.L318
-	jmp	.L324
-.L319:
+	jg	.L700
+	jmp	.L713
+.L701:
 	movl	12(%ebp), %eax
-	movl	(%eax), %edx
-	movl	-12(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L703
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L703:
+	movl	12(%ebp), %eax
+	movl	(%eax), %ecx
+	movl	-28(%ebp), %eax
+	addl	$68, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L704
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L704:
+	movl	-28(%ebp), %eax
 	movl	68(%eax), %eax
-	subl	%eax, %edx
-	movl	%edx, %eax
+	subl	%eax, %ecx
+	movl	%ecx, %eax
 	cmpl	$59, %eax
-	jle	.L321
-	movl	-12(%ebp), %eax
+	jle	.L705
+	movl	-28(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L706
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L706:
+	movl	-28(%ebp), %eax
 	movl	8(%eax), %eax
 	addl	$8, %eax
 	movl	%eax, (%esp)
 	call	httpd_ntoa
 	movl	%eax, 8(%esp)
-	movl	$.LC127, 4(%esp)
+	movl	$.LC139, 4(%esp)
 	movl	$6, (%esp)
 	call	syslog
-	movl	httpd_err408form, %ecx
-	movl	httpd_err408title, %edx
-	movl	-12(%ebp), %eax
+	movl	httpd_err408form, %ebx
+	movl	httpd_err408title, %eax
+	movl	%eax, -44(%ebp)
+	movl	-28(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %edi
+	movl	%eax, %esi
+	andl	$7, %esi
+	addl	$3, %esi
+	movl	%esi, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%edi, %edx
+	testb	%dl, %dl
+	je	.L707
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L707:
+	movl	-28(%ebp), %eax
 	movl	8(%eax), %eax
-	movl	$.LC45, 20(%esp)
-	movl	%ecx, 16(%esp)
-	movl	$.LC45, 12(%esp)
-	movl	%edx, 8(%esp)
+	movl	$.LC48, 20(%esp)
+	movl	%ebx, 16(%esp)
+	movl	$.LC48, 12(%esp)
+	movl	-44(%ebp), %edi
+	movl	%edi, 8(%esp)
 	movl	$408, 4(%esp)
 	movl	%eax, (%esp)
 	call	httpd_send_err
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-12(%ebp), %eax
+	movl	-28(%ebp), %eax
 	movl	%eax, (%esp)
 	call	finish_connection
-	jmp	.L318
-.L321:
-	jmp	.L318
-.L324:
+	jmp	.L700
+.L705:
+	jmp	.L700
+.L713:
 	movl	12(%ebp), %eax
-	movl	(%eax), %edx
-	movl	-12(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L708
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L708:
+	movl	12(%ebp), %eax
+	movl	(%eax), %ecx
+	movl	-28(%ebp), %eax
+	addl	$68, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%dl, %bl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L709
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L709:
+	movl	-28(%ebp), %eax
 	movl	68(%eax), %eax
-	subl	%eax, %edx
-	movl	%edx, %eax
+	subl	%eax, %ecx
+	movl	%ecx, %eax
 	cmpl	$299, %eax
-	jle	.L322
-	movl	-12(%ebp), %eax
+	jle	.L710
+	movl	-28(%ebp), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L711
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L711:
+	movl	-28(%ebp), %eax
 	movl	8(%eax), %eax
 	addl	$8, %eax
 	movl	%eax, (%esp)
 	call	httpd_ntoa
 	movl	%eax, 8(%esp)
-	movl	$.LC128, 4(%esp)
+	movl	$.LC140, 4(%esp)
 	movl	$6, (%esp)
 	call	syslog
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
-	movl	-12(%ebp), %eax
+	movl	-28(%ebp), %eax
 	movl	%eax, (%esp)
 	call	clear_connection
-	jmp	.L325
-.L322:
-.L325:
+	jmp	.L714
+.L710:
+.L714:
 	nop
-.L318:
-	addl	$1, -16(%ebp)
-.L317:
+.L700:
+	addl	$1, -32(%ebp)
+.L698:
 	movl	max_connects, %eax
-	cmpl	%eax, -16(%ebp)
-	jl	.L323
-	leave
+	cmpl	%eax, -32(%ebp)
+	jl	.L712
+	addl	$60, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%edi
+	.cfi_restore 7
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -5320,27 +13447,129 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$40, %esp
+	pushl	%esi
+	pushl	%ebx
+	subl	$32, %esp
+	.cfi_offset 6, -12
+	.cfi_offset 3, -16
+	leal	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L716
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L716:
 	movl	8(%ebp), %eax
 	movl	%eax, -12(%ebp)
 	movl	-12(%ebp), %eax
+	addl	$72, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L717
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L717:
+	movl	-12(%ebp), %eax
 	movl	$0, 72(%eax)
 	movl	-12(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L718
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L718:
+	movl	-12(%ebp), %eax
 	movl	(%eax), %eax
 	cmpl	$3, %eax
-	jne	.L326
+	jne	.L715
 	movl	-12(%ebp), %eax
 	movl	$2, (%eax)
 	movl	-12(%ebp), %eax
-	movl	8(%eax), %eax
-	movl	448(%eax), %eax
+	addl	$8, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L720
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L720:
+	movl	-12(%ebp), %eax
+	movl	8(%eax), %edx
+	leal	448(%edx), %eax
+	movl	%eax, %ecx
+	shrl	$3, %ecx
+	addl	$536870912, %ecx
+	movzbl	(%ecx), %ecx
+	testb	%cl, %cl
+	setne	%bl
+	movl	%ebx, %esi
+	movl	%eax, %ebx
+	andl	$7, %ebx
+	addl	$3, %ebx
+	cmpb	%cl, %bl
+	setge	%cl
+	andl	%esi, %ecx
+	testb	%cl, %cl
+	je	.L721
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L721:
+	movl	448(%edx), %eax
 	movl	$1, 8(%esp)
 	movl	-12(%ebp), %edx
 	movl	%edx, 4(%esp)
 	movl	%eax, (%esp)
 	call	fdwatch_add_fd
-.L326:
-	leave
+.L715:
+	addl	$32, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -5356,17 +13585,59 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$40, %esp
+	pushl	%ebx
+	subl	$36, %esp
+	.cfi_offset 3, -12
+	leal	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L723
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L723:
 	movl	8(%ebp), %eax
 	movl	%eax, -12(%ebp)
 	movl	-12(%ebp), %eax
+	addl	$76, %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%bl
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%ebx, %edx
+	testb	%dl, %dl
+	je	.L724
+	movl	%eax, (%esp)
+	call	__asan_report_store4
+.L724:
+	movl	-12(%ebp), %eax
 	movl	$0, 76(%eax)
 	movl	12(%ebp), %eax
 	movl	%eax, 4(%esp)
 	movl	-12(%ebp), %eax
 	movl	%eax, (%esp)
 	call	really_clear_connection
-	leave
+	addl	$36, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -5416,9 +13687,12 @@
 .LFE31:
 	.size	show_stats, .-show_stats
 	.section	.rodata
-	.align 4
-.LC129:
+.LC141:
+	.string	"logstats 1 32 8 2 tv "
+	.align 32
+.LC142:
 	.string	"up %ld seconds, stats for %ld seconds:"
+	.zero	57
 	.text
 	.type	logstats, @function
 logstats:
@@ -5429,58 +13703,97 @@
 	.cfi_offset 5, -8
 	movl	%esp, %ebp
 	.cfi_def_cfa_register 5
-	subl	$56, %esp
+	pushl	%esi
+	pushl	%ebx
+	addl	$-128, %esp
+	.cfi_offset 6, -12
+	.cfi_offset 3, -16
+	leal	-104(%ebp), %eax
+	movl	$1102416563, (%eax)
+	movl	$.LC141, 4(%eax)
+	shrl	$3, %eax
+	leal	536870912(%eax), %ebx
+	movl	$-235802127, (%ebx)
+	movl	$-185273344, 4(%ebx)
+	movl	$-202116109, 8(%ebx)
 	cmpl	$0, 8(%ebp)
-	jne	.L332
+	jne	.L728
 	movl	$0, 4(%esp)
-	leal	-16(%ebp), %eax
+	leal	-72(%ebp), %eax
 	movl	%eax, (%esp)
 	call	gettimeofday
-	leal	-16(%ebp), %eax
+	leal	-72(%ebp), %eax
 	movl	%eax, 8(%ebp)
-.L332:
+.L728:
+	movl	8(%ebp), %eax
+	movl	%eax, %edx
+	shrl	$3, %edx
+	addl	$536870912, %edx
+	movzbl	(%edx), %edx
+	testb	%dl, %dl
+	setne	%cl
+	movl	%ecx, %esi
+	movl	%eax, %ecx
+	andl	$7, %ecx
+	addl	$3, %ecx
+	cmpb	%dl, %cl
+	setge	%dl
+	andl	%esi, %edx
+	testb	%dl, %dl
+	je	.L729
+	movl	%eax, (%esp)
+	call	__asan_report_load4
+.L729:
 	movl	8(%ebp), %eax
 	movl	(%eax), %eax
-	movl	%eax, -24(%ebp)
+	movl	%eax, -112(%ebp)
 	movl	start_time, %eax
-	movl	-24(%ebp), %edx
+	movl	-112(%ebp), %edx
 	subl	%eax, %edx
 	movl	%edx, %eax
-	movl	%eax, -20(%ebp)
+	movl	%eax, -108(%ebp)
 	movl	stats_time, %eax
-	movl	-24(%ebp), %edx
+	movl	-112(%ebp), %edx
 	subl	%eax, %edx
 	movl	%edx, %eax
-	movl	%eax, -28(%ebp)
-	cmpl	$0, -28(%ebp)
-	jne	.L333
-	movl	$1, -28(%ebp)
-.L333:
-	movl	-24(%ebp), %eax
+	movl	%eax, -116(%ebp)
+	cmpl	$0, -116(%ebp)
+	jne	.L730
+	movl	$1, -116(%ebp)
+.L730:
+	movl	-112(%ebp), %eax
 	movl	%eax, stats_time
-	movl	-28(%ebp), %eax
+	movl	-116(%ebp), %eax
 	movl	%eax, 12(%esp)
-	movl	-20(%ebp), %eax
+	movl	-108(%ebp), %eax
 	movl	%eax, 8(%esp)
-	movl	$.LC129, 4(%esp)
+	movl	$.LC142, 4(%esp)
 	movl	$6, (%esp)
 	call	syslog
-	movl	-28(%ebp), %eax
+	movl	-116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	thttpd_logstats
-	movl	-28(%ebp), %eax
+	movl	-116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	httpd_logstats
-	movl	-28(%ebp), %eax
+	movl	-116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	mmc_logstats
-	movl	-28(%ebp), %eax
+	movl	-116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	fdwatch_logstats
-	movl	-28(%ebp), %eax
+	movl	-116(%ebp), %eax
 	movl	%eax, (%esp)
 	call	tmr_logstats
-	leave
+	movl	$0, (%ebx)
+	movl	$0, 4(%ebx)
+	movl	$0, 8(%ebx)
+	subl	$-128, %esp
+	popl	%ebx
+	.cfi_restore 3
+	popl	%esi
+	.cfi_restore 6
+	popl	%ebp
 	.cfi_restore 5
 	.cfi_def_cfa 4, 4
 	ret
@@ -5488,9 +13801,10 @@
 .LFE32:
 	.size	logstats, .-logstats
 	.section	.rodata
-	.align 4
-.LC130:
+	.align 32
+.LC143:
 	.string	"  thttpd - %ld connections (%g/sec), %d max simultaneous, %lld bytes (%g/sec), %d httpd_conns allocated"
+	.zero	56
 	.text
 	.type	thttpd_logstats, @function
 thttpd_logstats:
@@ -5507,7 +13821,7 @@
 	.cfi_offset 6, -12
 	.cfi_offset 3, -16
 	cmpl	$0, 8(%ebp)
-	jle	.L335
+	jle	.L732
 	movl	httpd_conn_count, %esi
 	movl	stats_bytes, %eax
 	movl	%eax, -12(%ebp)
@@ -5531,10 +13845,10 @@
 	movl	%ebx, 20(%esp)
 	fstpl	12(%esp)
 	movl	%ecx, 8(%esp)
-	movl	$.LC130, 4(%esp)
+	movl	$.LC143, 4(%esp)
 	movl	$6, (%esp)
 	call	syslog
-.L335:
+.L732:
 	movl	$0, stats_connections
 	movl	$0, stats_bytes
 	movl	$0, stats_simultaneous
@@ -5550,5 +13864,1236 @@
 	.cfi_endproc
 .LFE33:
 	.size	thttpd_logstats, .-thttpd_logstats
+	.section	.rodata
+.LC145:
+	.string	"watchdog_flag (thttpd.c)"
+.LC146:
+	.string	"got_usr1 (thttpd.c)"
+.LC147:
+	.string	"got_hup (thttpd.c)"
+.LC148:
+	.string	"terminate (thttpd.c)"
+.LC149:
+	.string	"hs (thttpd.c)"
+.LC150:
+	.string	"httpd_conn_count (thttpd.c)"
+.LC151:
+	.string	"first_free_connect (thttpd.c)"
+.LC152:
+	.string	"max_connects (thttpd.c)"
+.LC153:
+	.string	"num_connects (thttpd.c)"
+.LC154:
+	.string	"connects (thttpd.c)"
+.LC155:
+	.string	"maxthrottles (thttpd.c)"
+.LC156:
+	.string	"numthrottles (thttpd.c)"
+.LC157:
+	.string	"throttles (thttpd.c)"
+.LC158:
+	.string	"max_age (thttpd.c)"
+.LC159:
+	.string	"p3p (thttpd.c)"
+.LC160:
+	.string	"charset (thttpd.c)"
+.LC161:
+	.string	"user (thttpd.c)"
+.LC162:
+	.string	"pidfile (thttpd.c)"
+.LC163:
+	.string	"hostname (thttpd.c)"
+.LC164:
+	.string	"throttlefile (thttpd.c)"
+.LC165:
+	.string	"logfile (thttpd.c)"
+.LC166:
+	.string	"local_pattern (thttpd.c)"
+.LC167:
+	.string	"no_empty_referers (thttpd.c)"
+.LC168:
+	.string	"url_pattern (thttpd.c)"
+.LC169:
+	.string	"cgi_limit (thttpd.c)"
+.LC170:
+	.string	"cgi_pattern (thttpd.c)"
+.LC171:
+	.string	"do_global_passwd (thttpd.c)"
+.LC172:
+	.string	"do_vhost (thttpd.c)"
+.LC173:
+	.string	"no_symlink_check (thttpd.c)"
+.LC174:
+	.string	"no_log (thttpd.c)"
+.LC175:
+	.string	"do_chroot (thttpd.c)"
+.LC176:
+	.string	"data_dir (thttpd.c)"
+.LC177:
+	.string	"dir (thttpd.c)"
+.LC178:
+	.string	"port (thttpd.c)"
+.LC179:
+	.string	"debug (thttpd.c)"
+.LC180:
+	.string	"argv0 (thttpd.c)"
+.LC181:
+	.string	"*.LC140 (thttpd.c)"
+.LC182:
+	.string	"*.LC20 (thttpd.c)"
+.LC183:
+	.string	"*.LC97 (thttpd.c)"
+.LC184:
+	.string	"*.LC6 (thttpd.c)"
+.LC185:
+	.string	"*.LC41 (thttpd.c)"
+.LC186:
+	.string	"*.LC118 (thttpd.c)"
+.LC187:
+	.string	"*.LC119 (thttpd.c)"
+.LC188:
+	.string	"*.LC107 (thttpd.c)"
+.LC189:
+	.string	"*.LC133 (thttpd.c)"
+.LC190:
+	.string	"*.LC33 (thttpd.c)"
+.LC191:
+	.string	"*.LC36 (thttpd.c)"
+.LC192:
+	.string	"*.LC69 (thttpd.c)"
+.LC193:
+	.string	"*.LC93 (thttpd.c)"
+.LC194:
+	.string	"*.LC60 (thttpd.c)"
+.LC195:
+	.string	"*.LC115 (thttpd.c)"
+.LC196:
+	.string	"*.LC10 (thttpd.c)"
+.LC197:
+	.string	"*.LC5 (thttpd.c)"
+.LC198:
+	.string	"*.LC54 (thttpd.c)"
+.LC199:
+	.string	"*.LC27 (thttpd.c)"
+.LC200:
+	.string	"*.LC34 (thttpd.c)"
+.LC201:
+	.string	"*.LC94 (thttpd.c)"
+.LC202:
+	.string	"*.LC28 (thttpd.c)"
+.LC203:
+	.string	"*.LC90 (thttpd.c)"
+.LC204:
+	.string	"*.LC40 (thttpd.c)"
+.LC205:
+	.string	"*.LC55 (thttpd.c)"
+.LC206:
+	.string	"*.LC103 (thttpd.c)"
+.LC207:
+	.string	"*.LC110 (thttpd.c)"
+.LC208:
+	.string	"*.LC87 (thttpd.c)"
+.LC209:
+	.string	"*.LC73 (thttpd.c)"
+.LC210:
+	.string	"*.LC135 (thttpd.c)"
+.LC211:
+	.string	"*.LC62 (thttpd.c)"
+.LC212:
+	.string	"*.LC112 (thttpd.c)"
+.LC213:
+	.string	"*.LC114 (thttpd.c)"
+.LC214:
+	.string	"*.LC116 (thttpd.c)"
+.LC215:
+	.string	"*.LC19 (thttpd.c)"
+.LC216:
+	.string	"*.LC89 (thttpd.c)"
+.LC217:
+	.string	"*.LC98 (thttpd.c)"
+.LC218:
+	.string	"*.LC49 (thttpd.c)"
+.LC219:
+	.string	"*.LC56 (thttpd.c)"
+.LC220:
+	.string	"*.LC99 (thttpd.c)"
+.LC221:
+	.string	"*.LC22 (thttpd.c)"
+.LC222:
+	.string	"*.LC61 (thttpd.c)"
+.LC223:
+	.string	"*.LC88 (thttpd.c)"
+.LC224:
+	.string	"*.LC21 (thttpd.c)"
+.LC225:
+	.string	"*.LC7 (thttpd.c)"
+.LC226:
+	.string	"*.LC42 (thttpd.c)"
+.LC227:
+	.string	"*.LC25 (thttpd.c)"
+.LC228:
+	.string	"*.LC2 (thttpd.c)"
+.LC229:
+	.string	"*.LC39 (thttpd.c)"
+.LC230:
+	.string	"*.LC47 (thttpd.c)"
+.LC231:
+	.string	"*.LC109 (thttpd.c)"
+.LC232:
+	.string	"*.LC32 (thttpd.c)"
+.LC233:
+	.string	"*.LC101 (thttpd.c)"
+.LC234:
+	.string	"*.LC129 (thttpd.c)"
+.LC235:
+	.string	"*.LC13 (thttpd.c)"
+.LC236:
+	.string	"*.LC83 (thttpd.c)"
+.LC237:
+	.string	"*.LC50 (thttpd.c)"
+.LC238:
+	.string	"*.LC31 (thttpd.c)"
+.LC239:
+	.string	"*.LC12 (thttpd.c)"
+.LC240:
+	.string	"*.LC45 (thttpd.c)"
+.LC241:
+	.string	"*.LC79 (thttpd.c)"
+.LC242:
+	.string	"*.LC72 (thttpd.c)"
+.LC243:
+	.string	"*.LC125 (thttpd.c)"
+.LC244:
+	.string	"*.LC66 (thttpd.c)"
+.LC245:
+	.string	"*.LC63 (thttpd.c)"
+.LC246:
+	.string	"*.LC64 (thttpd.c)"
+.LC247:
+	.string	"*.LC17 (thttpd.c)"
+.LC248:
+	.string	"*.LC75 (thttpd.c)"
+.LC249:
+	.string	"*.LC24 (thttpd.c)"
+.LC250:
+	.string	"*.LC23 (thttpd.c)"
+.LC251:
+	.string	"*.LC143 (thttpd.c)"
+.LC252:
+	.string	"*.LC117 (thttpd.c)"
+.LC253:
+	.string	"*.LC26 (thttpd.c)"
+.LC254:
+	.string	"*.LC105 (thttpd.c)"
+.LC255:
+	.string	"*.LC29 (thttpd.c)"
+.LC256:
+	.string	"*.LC76 (thttpd.c)"
+.LC257:
+	.string	"*.LC67 (thttpd.c)"
+.LC258:
+	.string	"*.LC80 (thttpd.c)"
+.LC259:
+	.string	"*.LC100 (thttpd.c)"
+.LC260:
+	.string	"*.LC65 (thttpd.c)"
+.LC261:
+	.string	"*.LC84 (thttpd.c)"
+.LC262:
+	.string	"*.LC8 (thttpd.c)"
+.LC263:
+	.string	"*.LC91 (thttpd.c)"
+.LC264:
+	.string	"*.LC48 (thttpd.c)"
+.LC265:
+	.string	"*.LC30 (thttpd.c)"
+.LC266:
+	.string	"*.LC111 (thttpd.c)"
+.LC267:
+	.string	"*.LC130 (thttpd.c)"
+.LC268:
+	.string	"*.LC43 (thttpd.c)"
+.LC269:
+	.string	"*.LC139 (thttpd.c)"
+.LC270:
+	.string	"*.LC15 (thttpd.c)"
+.LC271:
+	.string	"*.LC142 (thttpd.c)"
+.LC272:
+	.string	"*.LC78 (thttpd.c)"
+.LC273:
+	.string	"*.LC70 (thttpd.c)"
+.LC274:
+	.string	"*.LC120 (thttpd.c)"
+.LC275:
+	.string	"*.LC53 (thttpd.c)"
+.LC276:
+	.string	"*.LC68 (thttpd.c)"
+.LC277:
+	.string	"*.LC57 (thttpd.c)"
+.LC278:
+	.string	"*.LC138 (thttpd.c)"
+.LC279:
+	.string	"*.LC132 (thttpd.c)"
+.LC280:
+	.string	"*.LC44 (thttpd.c)"
+.LC281:
+	.string	"*.LC134 (thttpd.c)"
+.LC282:
+	.string	"*.LC137 (thttpd.c)"
+.LC283:
+	.string	"*.LC104 (thttpd.c)"
+.LC284:
+	.string	"*.LC38 (thttpd.c)"
+.LC285:
+	.string	"*.LC37 (thttpd.c)"
+.LC286:
+	.string	"*.LC128 (thttpd.c)"
+.LC287:
+	.string	"*.LC3 (thttpd.c)"
+.LC288:
+	.string	"*.LC81 (thttpd.c)"
+.LC289:
+	.string	"*.LC58 (thttpd.c)"
+.LC290:
+	.string	"*.LC4 (thttpd.c)"
+.LC291:
+	.string	"*.LC18 (thttpd.c)"
+.LC292:
+	.string	"*.LC14 (thttpd.c)"
+.LC293:
+	.string	"*.LC123 (thttpd.c)"
+.LC294:
+	.string	"*.LC92 (thttpd.c)"
+.LC295:
+	.string	"*.LC35 (thttpd.c)"
+.LC296:
+	.string	"*.LC102 (thttpd.c)"
+.LC297:
+	.string	"*.LC85 (thttpd.c)"
+.LC298:
+	.string	"*.LC124 (thttpd.c)"
+.LC299:
+	.string	"*.LC0 (thttpd.c)"
+.LC300:
+	.string	"*.LC51 (thttpd.c)"
+.LC301:
+	.string	"*.LC71 (thttpd.c)"
+.LC302:
+	.string	"*.LC96 (thttpd.c)"
+.LC303:
+	.string	"*.LC52 (thttpd.c)"
+.LC304:
+	.string	"*.LC59 (thttpd.c)"
+.LC305:
+	.string	"*.LC95 (thttpd.c)"
+.LC306:
+	.string	"*.LC86 (thttpd.c)"
+.LC307:
+	.string	"*.LC106 (thttpd.c)"
+.LC308:
+	.string	"*.LC46 (thttpd.c)"
+.LC309:
+	.string	"*.LC11 (thttpd.c)"
+.LC310:
+	.string	"*.LC82 (thttpd.c)"
+.LC311:
+	.string	"*.LC16 (thttpd.c)"
+.LC312:
+	.string	"*.LC77 (thttpd.c)"
+	.data
+	.align 32
+	.type	.LASAN0, @object
+	.size	.LASAN0, 3360
+.LASAN0:
+	.long	watchdog_flag
+	.long	4
+	.long	64
+	.long	.LC145
+	.long	0
+	.long	got_usr1
+	.long	4
+	.long	64
+	.long	.LC146
+	.long	0
+	.long	got_hup
+	.long	4
+	.long	64
+	.long	.LC147
+	.long	0
+	.long	terminate
+	.long	4
+	.long	64
+	.long	.LC148
+	.long	0
+	.long	hs
+	.long	4
+	.long	64
+	.long	.LC149
+	.long	0
+	.long	httpd_conn_count
+	.long	4
+	.long	64
+	.long	.LC150
+	.long	0
+	.long	first_free_connect
+	.long	4
+	.long	64
+	.long	.LC151
+	.long	0
+	.long	max_connects
+	.long	4
+	.long	64
+	.long	.LC152
+	.long	0
+	.long	num_connects
+	.long	4
+	.long	64
+	.long	.LC153
+	.long	0
+	.long	connects
+	.long	4
+	.long	64
+	.long	.LC154
+	.long	0
+	.long	maxthrottles
+	.long	4
+	.long	64
+	.long	.LC155
+	.long	0
+	.long	numthrottles
+	.long	4
+	.long	64
+	.long	.LC156
+	.long	0
+	.long	throttles
+	.long	4
+	.long	64
+	.long	.LC157
+	.long	0
+	.long	max_age
+	.long	4
+	.long	64
+	.long	.LC158
+	.long	0
+	.long	p3p
+	.long	4
+	.long	64
+	.long	.LC159
+	.long	0
+	.long	charset
+	.long	4
+	.long	64
+	.long	.LC160
+	.long	0
+	.long	user
+	.long	4
+	.long	64
+	.long	.LC161
+	.long	0
+	.long	pidfile
+	.long	4
+	.long	64
+	.long	.LC162
+	.long	0
+	.long	hostname
+	.long	4
+	.long	64
+	.long	.LC163
+	.long	0
+	.long	throttlefile
+	.long	4
+	.long	64
+	.long	.LC164
+	.long	0
+	.long	logfile
+	.long	4
+	.long	64
+	.long	.LC165
+	.long	0
+	.long	local_pattern
+	.long	4
+	.long	64
+	.long	.LC166
+	.long	0
+	.long	no_empty_referers
+	.long	4
+	.long	64
+	.long	.LC167
+	.long	0
+	.long	url_pattern
+	.long	4
+	.long	64
+	.long	.LC168
+	.long	0
+	.long	cgi_limit
+	.long	4
+	.long	64
+	.long	.LC169
+	.long	0
+	.long	cgi_pattern
+	.long	4
+	.long	64
+	.long	.LC170
+	.long	0
+	.long	do_global_passwd
+	.long	4
+	.long	64
+	.long	.LC171
+	.long	0
+	.long	do_vhost
+	.long	4
+	.long	64
+	.long	.LC172
+	.long	0
+	.long	no_symlink_check
+	.long	4
+	.long	64
+	.long	.LC173
+	.long	0
+	.long	no_log
+	.long	4
+	.long	64
+	.long	.LC174
+	.long	0
+	.long	do_chroot
+	.long	4
+	.long	64
+	.long	.LC175
+	.long	0
+	.long	data_dir
+	.long	4
+	.long	64
+	.long	.LC176
+	.long	0
+	.long	dir
+	.long	4
+	.long	64
+	.long	.LC177
+	.long	0
+	.long	port
+	.long	2
+	.long	64
+	.long	.LC178
+	.long	0
+	.long	debug
+	.long	4
+	.long	64
+	.long	.LC179
+	.long	0
+	.long	argv0
+	.long	4
+	.long	64
+	.long	.LC180
+	.long	0
+	.long	.LC140
+	.long	35
+	.long	96
+	.long	.LC181
+	.long	0
+	.long	.LC20
+	.long	11
+	.long	64
+	.long	.LC182
+	.long	0
+	.long	.LC97
+	.long	13
+	.long	64
+	.long	.LC183
+	.long	0
+	.long	.LC6
+	.long	19
+	.long	64
+	.long	.LC184
+	.long	0
+	.long	.LC41
+	.long	16
+	.long	64
+	.long	.LC185
+	.long	0
+	.long	.LC118
+	.long	3
+	.long	64
+	.long	.LC186
+	.long	0
+	.long	.LC119
+	.long	39
+	.long	96
+	.long	.LC187
+	.long	0
+	.long	.LC107
+	.long	36
+	.long	96
+	.long	.LC188
+	.long	0
+	.long	.LC133
+	.long	70
+	.long	128
+	.long	.LC189
+	.long	0
+	.long	.LC33
+	.long	20
+	.long	64
+	.long	.LC190
+	.long	0
+	.long	.LC36
+	.long	24
+	.long	64
+	.long	.LC191
+	.long	0
+	.long	.LC69
+	.long	3
+	.long	64
+	.long	.LC192
+	.long	0
+	.long	.LC93
+	.long	5
+	.long	64
+	.long	.LC193
+	.long	0
+	.long	.LC60
+	.long	3
+	.long	64
+	.long	.LC194
+	.long	0
+	.long	.LC115
+	.long	16
+	.long	64
+	.long	.LC195
+	.long	0
+	.long	.LC10
+	.long	29
+	.long	64
+	.long	.LC196
+	.long	0
+	.long	.LC5
+	.long	2
+	.long	64
+	.long	.LC197
+	.long	0
+	.long	.LC54
+	.long	3
+	.long	64
+	.long	.LC198
+	.long	0
+	.long	.LC27
+	.long	12
+	.long	64
+	.long	.LC199
+	.long	0
+	.long	.LC34
+	.long	15
+	.long	64
+	.long	.LC200
+	.long	0
+	.long	.LC94
+	.long	8
+	.long	64
+	.long	.LC201
+	.long	0
+	.long	.LC28
+	.long	7
+	.long	64
+	.long	.LC202
+	.long	0
+	.long	.LC90
+	.long	16
+	.long	64
+	.long	.LC203
+	.long	0
+	.long	.LC40
+	.long	12
+	.long	64
+	.long	.LC204
+	.long	0
+	.long	.LC55
+	.long	5
+	.long	64
+	.long	.LC205
+	.long	0
+	.long	.LC103
+	.long	32
+	.long	64
+	.long	.LC206
+	.long	0
+	.long	.LC110
+	.long	26
+	.long	64
+	.long	.LC207
+	.long	0
+	.long	.LC87
+	.long	7
+	.long	64
+	.long	.LC208
+	.long	0
+	.long	.LC73
+	.long	219
+	.long	256
+	.long	.LC209
+	.long	0
+	.long	.LC135
+	.long	65
+	.long	128
+	.long	.LC210
+	.long	0
+	.long	.LC62
+	.long	3
+	.long	64
+	.long	.LC211
+	.long	0
+	.long	.LC112
+	.long	39
+	.long	96
+	.long	.LC212
+	.long	0
+	.long	.LC114
+	.long	20
+	.long	64
+	.long	.LC213
+	.long	0
+	.long	.LC116
+	.long	33
+	.long	96
+	.long	.LC214
+	.long	0
+	.long	.LC19
+	.long	15
+	.long	64
+	.long	.LC215
+	.long	0
+	.long	.LC89
+	.long	7
+	.long	64
+	.long	.LC216
+	.long	0
+	.long	.LC98
+	.long	15
+	.long	64
+	.long	.LC217
+	.long	0
+	.long	.LC49
+	.long	3
+	.long	64
+	.long	.LC218
+	.long	0
+	.long	.LC56
+	.long	4
+	.long	64
+	.long	.LC219
+	.long	0
+	.long	.LC99
+	.long	8
+	.long	64
+	.long	.LC220
+	.long	0
+	.long	.LC22
+	.long	2
+	.long	64
+	.long	.LC221
+	.long	0
+	.long	.LC61
+	.long	3
+	.long	64
+	.long	.LC222
+	.long	0
+	.long	.LC88
+	.long	9
+	.long	64
+	.long	.LC223
+	.long	0
+	.long	.LC21
+	.long	6
+	.long	64
+	.long	.LC224
+	.long	0
+	.long	.LC7
+	.long	2
+	.long	64
+	.long	.LC225
+	.long	0
+	.long	.LC42
+	.long	12
+	.long	64
+	.long	.LC226
+	.long	0
+	.long	.LC25
+	.long	4
+	.long	64
+	.long	.LC227
+	.long	0
+	.long	.LC2
+	.long	16
+	.long	64
+	.long	.LC228
+	.long	0
+	.long	.LC39
+	.long	15
+	.long	64
+	.long	.LC229
+	.long	0
+	.long	.LC47
+	.long	11
+	.long	64
+	.long	.LC230
+	.long	0
+	.long	.LC109
+	.long	3
+	.long	64
+	.long	.LC231
+	.long	0
+	.long	.LC32
+	.long	13
+	.long	64
+	.long	.LC232
+	.long	0
+	.long	.LC101
+	.long	4
+	.long	64
+	.long	.LC233
+	.long	0
+	.long	.LC129
+	.long	37
+	.long	96
+	.long	.LC234
+	.long	0
+	.long	.LC13
+	.long	25
+	.long	64
+	.long	.LC235
+	.long	0
+	.long	.LC83
+	.long	10
+	.long	64
+	.long	.LC236
+	.long	0
+	.long	.LC50
+	.long	28
+	.long	64
+	.long	.LC237
+	.long	0
+	.long	.LC31
+	.long	18
+	.long	64
+	.long	.LC238
+	.long	0
+	.long	.LC12
+	.long	23
+	.long	64
+	.long	.LC239
+	.long	0
+	.long	.LC45
+	.long	13
+	.long	64
+	.long	.LC240
+	.long	0
+	.long	.LC79
+	.long	4
+	.long	64
+	.long	.LC241
+	.long	0
+	.long	.LC72
+	.long	3
+	.long	64
+	.long	.LC242
+	.long	0
+	.long	.LC125
+	.long	39
+	.long	96
+	.long	.LC243
+	.long	0
+	.long	.LC66
+	.long	3
+	.long	64
+	.long	.LC244
+	.long	0
+	.long	.LC63
+	.long	3
+	.long	64
+	.long	.LC245
+	.long	0
+	.long	.LC64
+	.long	3
+	.long	64
+	.long	.LC246
+	.long	0
+	.long	.LC17
+	.long	72
+	.long	128
+	.long	.LC247
+	.long	0
+	.long	.LC75
+	.long	2
+	.long	64
+	.long	.LC248
+	.long	0
+	.long	.LC24
+	.long	2
+	.long	64
+	.long	.LC249
+	.long	0
+	.long	.LC23
+	.long	12
+	.long	64
+	.long	.LC250
+	.long	0
+	.long	.LC143
+	.long	104
+	.long	160
+	.long	.LC251
+	.long	0
+	.long	.LC117
+	.long	38
+	.long	96
+	.long	.LC252
+	.long	0
+	.long	.LC26
+	.long	31
+	.long	64
+	.long	.LC253
+	.long	0
+	.long	.LC105
+	.long	37
+	.long	96
+	.long	.LC254
+	.long	0
+	.long	.LC29
+	.long	74
+	.long	128
+	.long	.LC255
+	.long	0
+	.long	.LC76
+	.long	5
+	.long	64
+	.long	.LC256
+	.long	0
+	.long	.LC67
+	.long	5
+	.long	64
+	.long	.LC257
+	.long	0
+	.long	.LC80
+	.long	9
+	.long	64
+	.long	.LC258
+	.long	0
+	.long	.LC100
+	.long	8
+	.long	64
+	.long	.LC259
+	.long	0
+	.long	.LC65
+	.long	5
+	.long	64
+	.long	.LC260
+	.long	0
+	.long	.LC84
+	.long	9
+	.long	64
+	.long	.LC261
+	.long	0
+	.long	.LC8
+	.long	22
+	.long	64
+	.long	.LC262
+	.long	0
+	.long	.LC91
+	.long	9
+	.long	64
+	.long	.LC263
+	.long	0
+	.long	.LC48
+	.long	1
+	.long	64
+	.long	.LC264
+	.long	0
+	.long	.LC30
+	.long	79
+	.long	128
+	.long	.LC265
+	.long	0
+	.long	.LC111
+	.long	25
+	.long	64
+	.long	.LC266
+	.long	0
+	.long	.LC130
+	.long	25
+	.long	64
+	.long	.LC267
+	.long	0
+	.long	.LC43
+	.long	58
+	.long	96
+	.long	.LC268
+	.long	0
+	.long	.LC139
+	.long	35
+	.long	96
+	.long	.LC269
+	.long	0
+	.long	.LC15
+	.long	11
+	.long	64
+	.long	.LC270
+	.long	0
+	.long	.LC142
+	.long	39
+	.long	96
+	.long	.LC271
+	.long	0
+	.long	.LC78
+	.long	5
+	.long	64
+	.long	.LC272
+	.long	0
+	.long	.LC70
+	.long	3
+	.long	64
+	.long	.LC273
+	.long	0
+	.long	.LC120
+	.long	44
+	.long	96
+	.long	.LC274
+	.long	0
+	.long	.LC53
+	.long	3
+	.long	64
+	.long	.LC275
+	.long	0
+	.long	.LC68
+	.long	3
+	.long	64
+	.long	.LC276
+	.long	0
+	.long	.LC57
+	.long	3
+	.long	64
+	.long	.LC277
+	.long	0
+	.long	.LC138
+	.long	43
+	.long	96
+	.long	.LC278
+	.long	0
+	.long	.LC132
+	.long	56
+	.long	96
+	.long	.LC279
+	.long	0
+	.long	.LC44
+	.long	38
+	.long	96
+	.long	.LC280
+	.long	0
+	.long	.LC134
+	.long	62
+	.long	96
+	.long	.LC281
+	.long	0
+	.long	.LC137
+	.long	33
+	.long	96
+	.long	.LC282
+	.long	0
+	.long	.LC104
+	.long	34
+	.long	96
+	.long	.LC283
+	.long	0
+	.long	.LC38
+	.long	30
+	.long	64
+	.long	.LC284
+	.long	0
+	.long	.LC37
+	.long	36
+	.long	96
+	.long	.LC285
+	.long	0
+	.long	.LC128
+	.long	33
+	.long	96
+	.long	.LC286
+	.long	0
+	.long	.LC3
+	.long	8
+	.long	64
+	.long	.LC287
+	.long	0
+	.long	.LC81
+	.long	9
+	.long	64
+	.long	.LC288
+	.long	0
+	.long	.LC58
+	.long	5
+	.long	64
+	.long	.LC289
+	.long	0
+	.long	.LC4
+	.long	5
+	.long	64
+	.long	.LC290
+	.long	0
+	.long	.LC18
+	.long	20
+	.long	64
+	.long	.LC291
+	.long	0
+	.long	.LC14
+	.long	10
+	.long	64
+	.long	.LC292
+	.long	0
+	.long	.LC123
+	.long	22
+	.long	64
+	.long	.LC293
+	.long	0
+	.long	.LC92
+	.long	10
+	.long	64
+	.long	.LC294
+	.long	0
+	.long	.LC35
+	.long	30
+	.long	64
+	.long	.LC295
+	.long	0
+	.long	.LC102
+	.long	8
+	.long	64
+	.long	.LC296
+	.long	0
+	.long	.LC85
+	.long	11
+	.long	64
+	.long	.LC297
+	.long	0
+	.long	.LC124
+	.long	36
+	.long	96
+	.long	.LC298
+	.long	0
+	.long	.LC0
+	.long	25
+	.long	64
+	.long	.LC299
+	.long	0
+	.long	.LC51
+	.long	3
+	.long	64
+	.long	.LC300
+	.long	0
+	.long	.LC71
+	.long	3
+	.long	64
+	.long	.LC301
+	.long	0
+	.long	.LC96
+	.long	8
+	.long	64
+	.long	.LC302
+	.long	0
+	.long	.LC52
+	.long	3
+	.long	64
+	.long	.LC303
+	.long	0
+	.long	.LC59
+	.long	3
+	.long	64
+	.long	.LC304
+	.long	0
+	.long	.LC95
+	.long	6
+	.long	64
+	.long	.LC305
+	.long	0
+	.long	.LC86
+	.long	5
+	.long	64
+	.long	.LC306
+	.long	0
+	.long	.LC106
+	.long	31
+	.long	64
+	.long	.LC307
+	.long	0
+	.long	.LC46
+	.long	7
+	.long	64
+	.long	.LC308
+	.long	0
+	.long	.LC11
+	.long	34
+	.long	96
+	.long	.LC309
+	.long	0
+	.long	.LC82
+	.long	8
+	.long	64
+	.long	.LC310
+	.long	0
+	.long	.LC16
+	.long	67
+	.long	128
+	.long	.LC311
+	.long	0
+	.long	.LC77
+	.long	6
+	.long	64
+	.long	.LC312
+	.long	0
+	.text
+	.type	_GLOBAL__sub_D_00099_0_terminate, @function
+_GLOBAL__sub_D_00099_0_terminate:
+.LFB34:
+	.cfi_startproc
+	pushl	%ebp
+	.cfi_def_cfa_offset 8
+	.cfi_offset 5, -8
+	movl	%esp, %ebp
+	.cfi_def_cfa_register 5
+	subl	$24, %esp
+	movl	$168, 4(%esp)
+	movl	$.LASAN0, (%esp)
+	call	__asan_unregister_globals
+	leave
+	.cfi_restore 5
+	.cfi_def_cfa 4, 4
+	ret
+	.cfi_endproc
+.LFE34:
+	.size	_GLOBAL__sub_D_00099_0_terminate, .-_GLOBAL__sub_D_00099_0_terminate
+	.section	.dtors.65436,"aw",@progbits
+	.align 4
+	.long	_GLOBAL__sub_D_00099_0_terminate
+	.text
+	.type	_GLOBAL__sub_I_00099_1_terminate, @function
+_GLOBAL__sub_I_00099_1_terminate:
+.LFB35:
+	.cfi_startproc
+	pushl	%ebp
+	.cfi_def_cfa_offset 8
+	.cfi_offset 5, -8
+	movl	%esp, %ebp
+	.cfi_def_cfa_register 5
+	subl	$24, %esp
+	call	__asan_init_v1
+	movl	$168, 4(%esp)
+	movl	$.LASAN0, (%esp)
+	call	__asan_register_globals
+	leave
+	.cfi_restore 5
+	.cfi_def_cfa 4, 4
+	ret
+	.cfi_endproc
+.LFE35:
+	.size	_GLOBAL__sub_I_00099_1_terminate, .-_GLOBAL__sub_I_00099_1_terminate
+	.section	.ctors.65436,"aw",@progbits
+	.align 4
+	.long	_GLOBAL__sub_I_00099_1_terminate
 	.ident	"GCC: (GNU) 4.8.2"
 	.section	.note.GNU-stack,"",@progbits
